/* Generated by the Nim Compiler v1.6.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI587202589 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33556266 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33556271 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950351 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332296 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI1509950530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1409286164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1509950930 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950348 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1509950771 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950642 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950359 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509950350 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1728053322 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1728053654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1728053659 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555503 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172230 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1493172233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509951525 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554843 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172229 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554848 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638088 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI855638095 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1493172232 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296525 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1493172227 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1358954504 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332330 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332341 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332342 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI50331651 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI50331690 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1291845637 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1291845652 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845649 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI50332345 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1090519047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1040187428 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1040187429 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1107296368 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1107296367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1107296262 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296357 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1107296353 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296360 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296259 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1107296358 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1107296355 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410299 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410298 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410297 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410296 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410295 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410294 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410293 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410292 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410291 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410290 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410289 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410288 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410287 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410286 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410285 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410284 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410283 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410282 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410281 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410280 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410279 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410278 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410277 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410276 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410224 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410364 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410361 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410360 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410273 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410363 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410274 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410213 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410212 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410325 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410215 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410214 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410324 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410323 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410222 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410322 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410321 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410216 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410320 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410327 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410218 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410326 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410330 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410220 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410194 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410193 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410201 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410200 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410199 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410198 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410195 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1023410319 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410318 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410317 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410197 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410196 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1090519045 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1090519046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410225 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1560281091 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI587202632 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI587202631 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI50332404 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068497 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068489 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI50332304 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI50332297 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI587202568 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI587202574 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554465 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI704643133 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949477 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949457 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1509949631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949482 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949464 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949472 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI50331676 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1509949470 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1509949508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1509949507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1509949476 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI50331682 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1509949499 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949468 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949458 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI50331672 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949487 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949465 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949491 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949466 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949495 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949467 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949503 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1509949469 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1509949471 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332337 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332344 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332346 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332336 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332338 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332299 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332381 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI50331656 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI50332380 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI50332328 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332329 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50332340 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI50331655 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI50332340 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332340.node = NNI50332340;
var NNI50332329 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332329.node = NNI50332329;
NTI50332380.base = NTI50332328;
NTI50332381.base = NTI50332328;
var NNI50332328 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI50332380, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI50331656, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI50331655, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI50331655, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI50332381, name: "up", sons: null}]};
NTI50332328.node = NNI50332328;
var NNI50332299 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332299.node = NNI50332299;
NTI50332328.base = NTI50332299;
NTI50332329.base = NTI50332328;
NTI50332340.base = NTI50332329;
var NNI50332338 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332338.node = NNI50332338;
var NNI50332336 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332336.node = NNI50332336;
NTI50332336.base = NTI50332329;
NTI50332338.base = NTI50332336;
var NNI50332346 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332346.node = NNI50332346;
NTI50332346.base = NTI50332329;
var NNI50332344 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332344.node = NNI50332344;
NTI50332344.base = NTI50332329;
var NNI50332337 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332337.node = NNI50332337;
NTI50332337.base = NTI50332336;
NTI1509949469.base = NTI1509949503;
NTI1509949467.base = NTI1509949495;
NTI1509949466.base = NTI1509949491;
NTI1509949465.base = NTI1509949487;
var NNI1509949458 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1509949458, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1509949458, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1509949458, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1509949458, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1509949458, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1509949458, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1509949458, name: "Sunday", len: 0, sons: null}}};
NTI1509949458.node = NNI1509949458;
NTI1509949468.base = NTI1509949499;
var NNI1509949507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1509949508, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1509949509, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI50331655, name: "name", sons: null}]};
NTI1509949507.node = NNI1509949507;
NTI1509949476.base = NTI1509949507;
var NNI1509949471 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1509949469, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1509949467, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1509949466, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1509949465, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI50331672, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI50331672, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI50331672, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1509949458, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1509949468, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI50331682, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1509949476, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI50331672, name: "utcOffset", sons: null}]};
NTI1509949471.node = NNI1509949471;
NTI1509949471.base = NTI50332299;
var NNI1509949470 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI50331676, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1509949469, name: "nanosecond", sons: null}]};
NTI1509949470.node = NNI1509949470;
var NNI1509949472 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI50331676, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1509949469, name: "nanosecond", sons: null}]};
NTI1509949472.node = NNI1509949472;
NTI1509949464.base = NTI1509949482;
var NNI1509949457 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1509949457, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1509949457, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1509949457, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1509949457, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1509949457, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1509949457, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1509949457, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1509949457, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1509949457, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1509949457, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1509949457, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1509949457, name: "December", len: 0, sons: null}}};
NTI1509949457.node = NNI1509949457;
var NNI1509949631 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1509949464, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1509949457, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI50331672, name: "Field2", sons: null}]};
NTI1509949631.node = NNI1509949631;
var NNI1509949477 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1509949470, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI50331672, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI50331682, name: "isDst", sons: null}]};
NTI1509949477.node = NNI1509949477;
var NNI704643133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI50331672, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI50331672, name: "b", sons: null}]};
NTI704643133.node = NNI704643133;
NTI33554465.base = NTI50331655;
NTI587202574.base = NTI50331655;
NTI50332297.base = NTI50332304;
var NNI1275068497 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068497.node = NNI1275068497;
var NNI50332404 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332404.node = NNI50332404;
NTI50332404.base = NTI50332299;
NTI1275068497.base = NTI50332404;
NTI1275068489.base = NTI1275068497;
var NNI587202568 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "size", len: 0, typ: NTI50332297, name: "size", sons: null}, 
{kind: 1, offset: "marker", len: 0, typ: NTI1275068489, name: "marker", sons: null}, 
{kind: 1, offset: "canvas", len: 0, typ: NTI1275068489, name: "canvas", sons: null}]};
NTI587202568.node = NNI587202568;
var NNI587202632 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI50331656, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI50331656, name: "Field1", sons: null}]};
NTI587202632.node = NNI587202632;
NTI587202631.base = NTI587202632;
var NNI1560281091 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI50331672, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI50331655, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI50331655, name: "Field2", sons: null}]};
NTI1560281091.node = NNI1560281091;
var NNI1023410225 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI50331656, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI50331656, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI50331656, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI50331656, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI50331656, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI50331656, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI50331656, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI50331656, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI50331656, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI50331656, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI50331656, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI50331656, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI50331656, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI50331656, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI50331656, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI50331656, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI50331656, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI50331656, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI50331656, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI50331656, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI50331656, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI50331656, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI50331656, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI50331656, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI50331656, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI50331656, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI50331656, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI50331656, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI50331656, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI50331656, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI50331656, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI50331656, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI50331656, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI50331656, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI50331656, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI50331656, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI50331656, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI50331656, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI50331656, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI50331656, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI50331656, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI50331656, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI50331656, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI50331656, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI50331656, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI50331656, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI50331656, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI50331656, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI50331656, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI50331656, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI50331656, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI50331656, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI50331656, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI50331656, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI50331656, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI50331656, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI50331656, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI50331656, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI50331656, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI50331656, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI50331656, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI50331656, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI50331656, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI50331656, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI50331656, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI50331656, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI50331656, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI50331656, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI50331656, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI50331656, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI50331656, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI50331656, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI50331656, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI50331656, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI50331656, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI50331656, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI50331656, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI50331656, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI50331656, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI50331656, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI50331656, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI50331656, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI50331656, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI50331656, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI50331656, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI50331656, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI50331656, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI50331656, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI50331656, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI50331656, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI50331656, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI50331656, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI50331656, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI50331656, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI50331656, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI50331656, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI50331656, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI50331656, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI50331656, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI50331656, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI50331656, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI50331656, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI50331656, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI50331656, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI50331656, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI50331656, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI50331656, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI50331656, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI50331656, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI50331656, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI50331656, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI50331656, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI50331656, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI50331656, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI50331656, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI50331656, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI50331656, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI50331656, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI50331656, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI50331656, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI50331656, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI50331656, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI50331656, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI50331656, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI50331656, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI50331656, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI50331656, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI50331656, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI50331656, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI50331656, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI50331656, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI50331656, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI50331656, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI50331656, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI50331656, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI50331656, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI50331656, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI50331656, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI50331656, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI50331656, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI50331656, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI50331656, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI50331656, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI50331656, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI50331656, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI50331656, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI50331656, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI50331656, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI50331656, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI50331656, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI50331656, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI50331656, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI50331656, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI50331656, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI50331656, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI50331656, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI50331656, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI50331656, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI50331656, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI50331656, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI50331656, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI50331656, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI50331656, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI50331656, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI50331656, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI50331656, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI50331656, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI50331656, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI50331656, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI50331656, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI50331656, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI50331656, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI50331656, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI50331656, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI50331656, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI50331656, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI50331656, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI50331656, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI50331656, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI50331656, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI50331656, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI50331656, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI50331656, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI50331656, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI50331656, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI50331656, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI50331656, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI50331656, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI50331656, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI50331656, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI50331656, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI50331656, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI50331656, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI50331656, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI50331656, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI50331656, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI50331656, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI50331656, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI50331656, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI50331656, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI50331656, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI50331656, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI50331656, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI50331656, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI50331656, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI50331656, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI50331656, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI50331656, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI50331656, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI50331656, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI50331656, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI50331656, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI50331656, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI50331656, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI50331656, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI50331656, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI50331656, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI50331656, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI50331656, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI50331656, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI50331656, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI50331656, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI50331656, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI50331656, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI50331656, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI50331656, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI50331656, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI50331656, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI50331656, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI50331656, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI50331656, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI50331656, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI50331656, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI50331656, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI50331656, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI50331656, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI50331656, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI50331656, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI50331656, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI50331656, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI50331656, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI50331656, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI50331656, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI50331656, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI50331656, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI50331656, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI50331656, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI50331656, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI50331656, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI50331656, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI50331656, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI50331656, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI50331656, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI50331656, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI50331656, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI50331656, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI50331656, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI50331656, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI50331656, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI50331656, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI50331656, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI50331656, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI50331656, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI50331656, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI50331656, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI50331656, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI50331656, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI50331656, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI50331656, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI50331656, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI50331656, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI50331656, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI50331656, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI50331656, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI50331656, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI50331656, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI50331656, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI50331656, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI50331656, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI50331656, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI50331656, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI50331656, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI50331656, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI50331656, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI50331656, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI50331656, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI50331656, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI50331656, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI50331656, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI50331656, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI50331656, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI50331656, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI50331656, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI50331656, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI50331656, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI50331656, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI50331656, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI50331656, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI50331656, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI50331656, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI50331656, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI50331656, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI50331656, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI50331656, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI50331656, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI50331656, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI50331656, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI50331656, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI50331656, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI50331656, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI50331656, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI50331656, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI50331656, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI50331656, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI50331656, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI50331656, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI50331656, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI50331656, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI50331656, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI50331656, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI50331656, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI50331656, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI50331656, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI50331656, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI50331656, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI50331656, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI50331656, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI50331656, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI50331656, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI50331656, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI50331656, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI50331656, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI50331656, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI50331656, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI50331656, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI50331656, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI50331656, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI50331656, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI50331656, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI50331656, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI50331656, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI50331656, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI50331656, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI50331656, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI50331656, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI50331656, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI50331656, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI50331656, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI50331656, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI50331656, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI50331656, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI50331656, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI50331656, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI50331656, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI50331656, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI50331656, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI50331656, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI50331656, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI50331656, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI50331656, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI50331656, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI50331656, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI50331656, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI50331656, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI50331656, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI50331656, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI50331656, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI50331656, name: "zIndex", sons: null}]};
NTI1023410225.node = NNI1023410225;
NTI1023410225.base = NTI50332299;
var NNI1090519045 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI1090519045, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1090519045, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1090519045, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1090519045, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1090519045, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1090519045, name: "pkSame", len: 0, sons: null}}};
NTI1090519045.node = NNI1090519045;
NTI1023410317.base = NTI1023410196;
NTI1023410318.base = NTI1023410196;
NTI1023410319.base = NTI1023410196;
var NNI1023410195 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1023410195, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1023410195, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1023410195, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1023410195, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1023410195, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1023410195, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1023410195, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1023410195, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1023410195, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1023410195, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1023410195, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1023410195, name: "NotationNode", len: 0, sons: null}}};
NTI1023410195.node = NNI1023410195;
var NNI1023410194 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1023410194.node = NNI1023410194;
NTI1023410194.base = NTI50332299;
NTI1023410193.base = NTI1023410194;
NTI1023410330.base = NTI1023410200;
var NNI1023410221 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI50331656, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI50331656, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI50331656, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1023410330, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI50331656, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI50331656, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI50331672, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI50331656, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI50331682, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI50331656, name: "target", sons: null}]};
NTI1023410221.node = NNI1023410221;
NTI1023410221.base = NTI1023410201;
NTI1023410220.base = NTI1023410221;
var NNI1023410219 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI50331682, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI50331682, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI50331672, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI50331656, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI50331656, name: "value", sons: null}]};
NTI1023410219.node = NNI1023410219;
NTI1023410219.base = NTI1023410201;
NTI1023410218.base = NTI1023410219;
NTI1023410326.base = NTI1023410218;
NTI1023410327.base = NTI1023410218;
var NNI1023410201 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI50331656, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1023410193, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI50331682, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI50331682, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI50331656, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI50331682, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1023410220, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI50331656, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI50331682, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1023410326, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1023410327, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI50331672, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI50331672, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI50331656, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI50331682, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI50331656, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI50331672, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI50331672, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI50331672, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI50331672, name: "offsetTop", sons: null}]};
NTI1023410201.node = NNI1023410201;
NTI1023410201.base = NTI1023410197;
NTI1023410200.base = NTI1023410201;
var NNI1023410217 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI50331656, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI50331672, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI50331672, name: "y", sons: null}]};
NTI1023410217.node = NNI1023410217;
NTI1023410217.base = NTI1023410201;
NTI1023410216.base = NTI1023410217;
NTI1023410320.base = NTI1023410216;
NTI1023410321.base = NTI1023410220;
var NNI1023410223 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI50331672, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI50331682, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI50331672, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI50331672, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI50331656, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI50331656, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI50331672, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI50331672, name: "width", sons: null}]};
NTI1023410223.node = NNI1023410223;
NTI1023410223.base = NTI1023410201;
NTI1023410222.base = NTI1023410223;
NTI1023410322.base = NTI1023410222;
NTI1023410323.base = NTI1023410200;
var NNI1023410215 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI50331672, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI50331672, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI50331656, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI50331672, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI50331656, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI50331672, name: "vspace", sons: null}]};
NTI1023410215.node = NNI1023410215;
NTI1023410215.base = NTI1023410201;
NTI1023410214.base = NTI1023410215;
NTI1023410324.base = NTI1023410214;
var NNI1023410213 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI50331656, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI50331656, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI50331672, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI50331672, name: "y", sons: null}]};
NTI1023410213.node = NNI1023410213;
NTI1023410213.base = NTI1023410201;
NTI1023410212.base = NTI1023410213;
NTI1023410325.base = NTI1023410212;
var NNI1023410360 = {kind: 1, offset: "then", len: 0, typ: NTI1023410361, name: "then", sons: null};
NTI1023410360.node = NNI1023410360;
NTI1023410273.base = NTI1023410360;
var NNI1023410363 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1023410273, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1023410364, name: "onloadingdone", sons: null}]};
NTI1023410363.node = NNI1023410363;
NTI1023410274.base = NTI1023410363;
var NNI1023410199 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1023410200, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1023410200, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI50331656, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI50331656, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1023410200, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI50331656, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI50331656, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI50331656, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI50331656, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1023410200, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI50331656, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI50331656, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI50331656, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI50331656, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI50331656, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI50331656, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1023410320, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1023410321, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1023410322, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1023410323, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1023410324, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1023410325, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1023410274, name: "fonts", sons: null}]};
NTI1023410199.node = NNI1023410199;
NTI1023410199.base = NTI1023410197;
NTI1023410198.base = NTI1023410199;
NTI1023410224.base = NTI1023410225;
var NNI1023410197 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1023410317, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1023410318, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1023410319, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI50331656, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1023410196, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1023410196, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1023410196, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI50331656, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1023410195, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI50331656, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1023410196, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1023410196, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1023410196, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1023410198, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI50331656, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI50331656, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI50331656, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI50331656, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1023410224, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI50331656, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1023410200, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI50331682, name: "isConnected", sons: null}]};
NTI1023410197.node = NNI1023410197;
var NNI1023410181 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1023410276, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1023410277, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1023410278, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1023410279, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1023410280, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1023410281, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1023410282, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1023410283, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1023410284, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1023410285, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1023410286, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1023410287, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1023410288, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1023410289, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1023410290, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1023410291, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1023410292, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1023410293, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1023410294, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1023410295, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1023410296, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1023410297, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1023410298, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1023410299, name: "onloadend", sons: null}]};
NTI1023410181.node = NNI1023410181;
NTI1023410181.base = NTI50332299;
NTI1023410197.base = NTI1023410181;
NTI1023410196.base = NTI1023410197;
var NNI1107296259 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296259, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296259, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296259, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1107296259, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1107296259, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1107296259, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1107296259, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1107296259, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1107296259, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1107296259, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1107296259, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1107296259, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1107296259, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1107296259, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1107296259, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1107296259, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1107296259, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1107296259, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1107296259, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1107296259, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1107296259, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1107296259, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1107296259, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1107296259, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1107296259, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1107296259, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1107296259, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1107296259, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1107296259, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1107296259, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1107296259, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1107296259, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1107296259, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI1107296259, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI1107296259, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI1107296259, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI1107296259, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI1107296259, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI1107296259, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI1107296259, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI1107296259, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI1107296259, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI1107296259, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI1107296259, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI1107296259, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI1107296259, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI1107296259, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI1107296259, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI1107296259, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI1107296259, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI1107296259, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI1107296259, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI1107296259, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI1107296259, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI1107296259, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI1107296259, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI1107296259, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI1107296259, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI1107296259, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI1107296259, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI1107296259, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI1107296259, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI1107296259, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI1107296259, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI1107296259, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI1107296259, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI1107296259, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI1107296259, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI1107296259, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI1107296259, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI1107296259, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI1107296259, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI1107296259, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI1107296259, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI1107296259, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI1107296259, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI1107296259, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI1107296259, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI1107296259, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI1107296259, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI1107296259, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI1107296259, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI1107296259, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI1107296259, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI1107296259, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI1107296259, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI1107296259, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI1107296259, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI1107296259, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI1107296259, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI1107296259, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI1107296259, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI1107296259, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI1107296259, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI1107296259, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI1107296259, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI1107296259, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI1107296259, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI1107296259, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI1107296259, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI1107296259, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI1107296259, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI1107296259, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI1107296259, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI1107296259, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI1107296259, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI1107296259, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI1107296259, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI1107296259, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI1107296259, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI1107296259, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI1107296259, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI1107296259, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI1107296259, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI1107296259, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI1107296259, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI1107296259, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI1107296259, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI1107296259, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI1107296259, name: "menu", len: 0, sons: null}}};
NTI1107296259.node = NNI1107296259;
NTI1107296359.base = NTI1107296355;
NTI1107296360.base = NTI50331656;
var NNI1107296262 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296262, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296262, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296262, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1107296262, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1107296262, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1107296262, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1107296262, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1107296262, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1107296262, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1107296262, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1107296262, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1107296262, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1107296262, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1107296262, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1107296262, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1107296262, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1107296262, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1107296262, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1107296262, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1107296262, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1107296262, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1107296262, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1107296262, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1107296262, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1107296262, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1107296262, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1107296262, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1107296262, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1107296262, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1107296262, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1107296262, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1107296262, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1107296262, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI1107296262, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI1107296262, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI1107296262, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI1107296262, name: "onwheel", len: 0, sons: null}}};
NTI1107296262.node = NNI1107296262;
var NNI1107296357 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1107296262, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1107296367, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1107296368, name: "Field2", sons: null}]};
NTI1107296357.node = NNI1107296357;
NTI1107296353.base = NTI1107296357;
var NNI1040187428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1040187428.node = NNI1040187428;
NTI1040187429.base = NTI1040187428;
var NNI1107296358 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1107296259, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI50331672, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI50331656, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI50331656, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI50331656, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI1107296359, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI1107296360, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI1107296353, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1040187429, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI1023410196, name: "dom", sons: null}]};
NTI1107296358.node = NNI1107296358;
NTI1107296358.base = NTI50332299;
NTI1107296355.base = NTI1107296358;
var NNI1090519046 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI1090519045, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI1023410196, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI1023410196, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI1107296355, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI1107296355, name: "oldNode", sons: null}]};
NTI1090519046.node = NNI1090519046;
var NNI1090519047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1107296355, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI1107296355, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI50331672, name: "pos", sons: null}]};
NTI1090519047.node = NNI1090519047;
var NNI50332345 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332345.node = NNI50332345;
NTI50332345.base = NTI50332329;
var NNI1291845635 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845635, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845635, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845635, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1291845635, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1291845635, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1291845635, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1291845635, name: "JArray", len: 0, sons: null}}};
NTI1291845635.node = NNI1291845635;
NTI1291845654.base = NTI1291845636;
var NNI1291845637 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI50331682, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1291845635, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI50331655, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI50331690, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI50331651, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI50331682, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1291845646, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1291845654, name: "elems", sons: null}]]}]};
NTI1291845637.node = NNI1291845637;
NTI1291845636.base = NTI1291845637;
var NNI1291845652 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1174405123, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI50331672, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI50331655, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1291845636, name: "Field3", sons: null}]};
NTI1291845652.node = NNI1291845652;
NTI1291845649.base = NTI1291845652;
var NNI1291845646 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845649, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI50331672, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI50331672, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI50331672, name: "last", sons: null}]};
NTI1291845646.node = NNI1291845646;
var NNI50332342 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332342.node = NNI50332342;
var NNI50332341 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332341.node = NNI50332341;
var NNI50332330 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI50332330.node = NNI50332330;
NTI50332330.base = NTI50332328;
NTI50332341.base = NTI50332330;
NTI50332342.base = NTI50332341;
var NNI1358954504 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1358954504.node = NNI1358954504;
NTI1358954504.base = NTI50332341;
var NNI1493172227 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI50331672, name: "id", sons: null}, 
{kind: 1, offset: "corpus_id", len: 0, typ: NTI50331672, name: "corpus_id", sons: null}, 
{kind: 1, offset: "firstname", len: 0, typ: NTI50331655, name: "firstname", sons: null}, 
{kind: 1, offset: "lastname", len: 0, typ: NTI50331655, name: "lastname", sons: null}, 
{kind: 1, offset: "email", len: 0, typ: NTI50331655, name: "email", sons: null}, 
{kind: 1, offset: "role_id", len: 0, typ: NTI50331672, name: "role_id", sons: null}, 
{kind: 1, offset: "role", len: 0, typ: NTI50331655, name: "role", sons: null}, 
{kind: 1, offset: "password", len: 0, typ: NTI50331655, name: "password", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI50331672, name: "active", sons: null}, 
{kind: 1, offset: "token", len: 0, typ: NTI50331655, name: "token", sons: null}, 
{kind: 1, offset: "apiKey", len: 0, typ: NTI50331655, name: "apiKey", sons: null}]};
NTI1493172227.node = NNI1493172227;
NTI1107296525.base = NTI50331656;
var NNI1493172232 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI50331655, name: "name", sons: null}, 
{kind: 1, offset: "sector_internal_id", len: 0, typ: NTI50331655, name: "sector_internal_id", sons: null}, 
{kind: 1, offset: "firstname", len: 0, typ: NTI50331655, name: "firstname", sons: null}, 
{kind: 1, offset: "lastname", len: 0, typ: NTI50331655, name: "lastname", sons: null}, 
{kind: 1, offset: "date_start", len: 0, typ: NTI50331655, name: "date_start", sons: null}, 
{kind: 1, offset: "date_finish", len: 0, typ: NTI50331655, name: "date_finish", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI50331672, name: "id", sons: null}, 
{kind: 1, offset: "user_id", len: 0, typ: NTI50331672, name: "user_id", sons: null}, 
{kind: 1, offset: "sector_id", len: 0, typ: NTI50331672, name: "sector_id", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI50331672, name: "totalFamilies", sons: null}]};
NTI1493172232.node = NNI1493172232;
NTI33554829.base = NTI1493172232;
var NNI855638095 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI855638088, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI50331672, name: "b", sons: null}]};
NTI855638095.node = NNI855638095;
var NNI1493172229 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1493172229, name: "OK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493172229, name: "unknown", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1493172229, name: "loggedOut", len: 0, sons: null}}};
NTI1493172229.node = NNI1493172229;
NTI33554843.base = NTI1493172232;
var NNI33554848 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "status", len: 0, typ: NTI1493172229, name: "status", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI50331655, name: "message", sons: null}, 
{kind: 1, offset: "resp", len: 0, typ: NTI33554843, name: "resp", sons: null}]};
NTI33554848.node = NNI33554848;
var NNI33555020 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "status", len: 0, typ: NTI1493172229, name: "status", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI50331655, name: "message", sons: null}, 
{kind: 1, offset: "resp", len: 0, typ: NTI50331672, name: "resp", sons: null}]};
NTI33555020.node = NNI33555020;
var NNI1509951525 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1509949472, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1509949472, name: "Field1", sons: null}]};
NTI1509951525.node = NNI1509951525;
var NNI1509949475 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanoseconds", len: 0, typ: NTI50331672, name: "nanoseconds", sons: null}, 
{kind: 1, offset: "microseconds", len: 0, typ: NTI50331672, name: "microseconds", sons: null}, 
{kind: 1, offset: "milliseconds", len: 0, typ: NTI50331672, name: "milliseconds", sons: null}, 
{kind: 1, offset: "seconds", len: 0, typ: NTI50331672, name: "seconds", sons: null}, 
{kind: 1, offset: "minutes", len: 0, typ: NTI50331672, name: "minutes", sons: null}, 
{kind: 1, offset: "hours", len: 0, typ: NTI50331672, name: "hours", sons: null}, 
{kind: 1, offset: "days", len: 0, typ: NTI50331672, name: "days", sons: null}, 
{kind: 1, offset: "weeks", len: 0, typ: NTI50331672, name: "weeks", sons: null}, 
{kind: 1, offset: "months", len: 0, typ: NTI50331672, name: "months", sons: null}, 
{kind: 1, offset: "years", len: 0, typ: NTI50331672, name: "years", sons: null}]};
NTI1509949475.node = NNI1509949475;
var NNI1493172230 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1493172230, name: "strNotStarted", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1493172230, name: "strStarted", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1493172230, name: "strFinished", len: 0, sons: null}}};
NTI1493172230.node = NNI1493172230;
var NNI1493172233 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI50331672, name: "id", sons: null}, 
{kind: 1, offset: "sector_id", len: 0, typ: NTI50331672, name: "sector_id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI50331655, name: "name", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI50331655, name: "geometry", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI50332297, name: "totalFamilies", sons: null}, 
{kind: 1, offset: "sectorName", len: 0, typ: NTI50331655, name: "sectorName", sons: null}, 
{kind: 1, offset: "status", len: 0, typ: NTI1493172230, name: "status", sons: null}]};
NTI1493172233.node = NNI1493172233;
NTI654311798.base = NTI50331655;
var NNI33555503 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI50331656, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI50331656, name: "Field1", sons: null}]};
NTI33555503.node = NNI33555503;
NTI1728053654.base = NTI1493172227;
var NNI1728053659 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "status", len: 0, typ: NTI1493172229, name: "status", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI50331655, name: "message", sons: null}, 
{kind: 1, offset: "resp", len: 0, typ: NTI1728053654, name: "resp", sons: null}]};
NTI1728053659.node = NNI1728053659;
var NNI1728053322 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "status", len: 0, typ: NTI1493172229, name: "status", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI50331655, name: "message", sons: null}, 
{kind: 1, offset: "resp", len: 0, typ: NTI1493172227, name: "resp", sons: null}]};
NTI1728053322.node = NNI1728053322;
var NNI1509950350 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1509950350.node = NNI1509950350;
NTI1509950350.base = NTI50332341;
var NNI1509950359 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI50331672, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI50331682, name: "has", sons: null}]};
NTI1509950359.node = NNI1509950359;
var NNI1509950642 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949464, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949464, name: "b", sons: null}]};
NTI1509950642.node = NNI1509950642;
var NNI1509950716 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949465, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949465, name: "b", sons: null}]};
NTI1509950716.node = NNI1509950716;
var NNI1509950771 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949466, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949466, name: "b", sons: null}]};
NTI1509950771.node = NNI1509950771;
var NNI1509950348 = {kind: 2, offset: 0, typ: null, name: null, len: 34, sons: {"0": {kind: 1, offset: 0, typ: NTI1509950348, name: "d", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1509950348, name: "dd", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1509950348, name: "ddd", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1509950348, name: "dddd", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1509950348, name: "h", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1509950348, name: "hh", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1509950348, name: "H", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1509950348, name: "HH", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1509950348, name: "m", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1509950348, name: "mm", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1509950348, name: "M", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1509950348, name: "MM", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1509950348, name: "MMM", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1509950348, name: "MMMM", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1509950348, name: "s", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1509950348, name: "ss", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1509950348, name: "fff", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1509950348, name: "ffffff", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1509950348, name: "fffffffff", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1509950348, name: "t", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1509950348, name: "tt", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1509950348, name: "yy", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1509950348, name: "yyyy", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1509950348, name: "YYYY", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1509950348, name: "uuuu", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1509950348, name: "UUUU", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI1509950348, name: "z", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI1509950348, name: "zz", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI1509950348, name: "zzz", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI1509950348, name: "zzzz", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI1509950348, name: "ZZZ", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI1509950348, name: "ZZZZ", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI1509950348, name: "g", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI1509950348, name: "Lit", len: 0, sons: null}}};
NTI1509950348.node = NNI1509950348;
var NNI1509950930 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1509949469, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1509949469, name: "b", sons: null}]};
NTI1509950930.node = NNI1509950930;
var NNI1409286164 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1409286164.node = NNI1409286164;
NTI1409286164.base = NTI50332329;
NTI1509950530.base = NTI50332296;
var NNI1509950351 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1509950351.node = NNI1509950351;
NTI1509950351.base = NTI50332341;
NTI33556266.base = NTI1493172233;
var NNI33556271 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "status", len: 0, typ: NTI1493172229, name: "status", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI50331655, name: "message", sons: null}, 
{kind: 1, offset: "resp", len: 0, typ: NTI33556266, name: "resp", sons: null}]};
NTI33556271.node = NNI33556271;
var NNI587202589 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI50331651, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI50331651, name: "Field1", sons: null}]};
NTI587202589.node = NNI587202589;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_50334356, src_50334357, ti_50334358) {
  var result_50334367 = null;

    switch (ti_50334358.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_50334347(ti_50334358))) {
      result_50334367 = src_50334357;
      }
      else {
        result_50334367 = [src_50334357[0], src_50334357[1]];
      }
      
      break;
    case 19:
            if (dest_50334356 === null || dest_50334356 === undefined) {
        dest_50334356 = {};
      }
      else {
        for (var key in dest_50334356) { delete dest_50334356[key]; }
      }
      for (var key in src_50334357) { dest_50334356[key] = src_50334357[key]; }
      result_50334367 = dest_50334356;
    
      break;
    case 18:
    case 17:
      if (!((ti_50334358.base == null))) {
      result_50334367 = nimCopy(dest_50334356, src_50334357, ti_50334358.base);
      }
      else {
      if ((ti_50334358.kind == 17)) {
      result_50334367 = (dest_50334356 === null || dest_50334356 === undefined) ? {m_type: ti_50334358} : dest_50334356;
      }
      else {
        result_50334367 = (dest_50334356 === null || dest_50334356 === undefined) ? {} : dest_50334356;
      }
      }
      nimCopyAux(result_50334367, src_50334357, ti_50334358.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_50334357 === null) {
        result_50334367 = null;
      }
      else {
        if (dest_50334356 === null || dest_50334356 === undefined || dest_50334356.length != src_50334357.length) {
          dest_50334356 = new Array(src_50334357.length);
        }
        result_50334367 = dest_50334356;
        for (var i = 0; i < src_50334357.length; ++i) {
          result_50334367[i] = nimCopy(result_50334367[i], src_50334357[i], ti_50334358.base);
        }
      }
    
      break;
    case 28:
            if (src_50334357 !== null) {
        result_50334367 = src_50334357.slice(0);
      }
    
      break;
    default: 
      result_50334367 = src_50334357;
      break;
    }

  return result_50334367;

}

function makeNimstrLit(c_50334017) {
      var result = [];
  for (var i = 0; i < c_50334017.length; ++i) {
    result[i] = c_50334017.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_50334023) {
                    var Temporary5;
            var Temporary7;

  var result_50334024 = null;

    var res_50334058 = newSeq_50334041((s_50334023).length);
    var i_50334059 = 0;
    var j_50334060 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_50334059 < (s_50334023).length)) break Label2;
          var c_50334061 = s_50334023[i_50334059];
          if ((c_50334061 < 128)) {
          res_50334058[j_50334060] = String.fromCharCode(c_50334061);
          i_50334059 += 1;
          }
          else {
            var helper_50334073 = newSeq_50334041(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_50334074 = c_50334061.toString(16);
                  if ((((code_50334074) == null ? 0 : (code_50334074).length) == 1)) {
                  helper_50334073.push("%0");;
                  }
                  else {
                  helper_50334073.push("%");;
                  }
                  
                  helper_50334073.push(code_50334074);;
                  i_50334059 += 1;
                    if (((s_50334023).length <= i_50334059)) Temporary5 = true; else {                      Temporary5 = (s_50334023[i_50334059] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_50334061 = s_50334023[i_50334059];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_50334058[j_50334060] = decodeURIComponent(helper_50334073.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_50334058[j_50334060] = helper_50334073.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_50334060 += 1;
        }
    } while (false);
    if (res_50334058.length < j_50334060) { for (var i = res_50334058.length ; i < j_50334060 ; ++i) res_50334058.push(null); }
               else { res_50334058.length = j_50334060; };
    result_50334024 = res_50334058.join("");

  return result_50334024;

}

function raiseException(e_50333883, ename_50333884) {
    e_50333883.name = ename_50333884;
    if ((excHandler == 0)) {
    unhandledException(e_50333883);
    }
    
    throw e_50333883;

  
}

function mnewString(len_50334109) {
        return new Array(len_50334109);
  

  
}

function addInt(a_50334156, b_50334157) {
        var result = a_50334156 + b_50334157;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_50334405, a_50334406, b_50334407) {
      var Temporary1;

  var result_50334408 = 0;

  BeforeRet: do {
      if (!(a_50334406 <= i_50334405)) Temporary1 = false; else {        Temporary1 = (i_50334405 <= b_50334407);      }    if (Temporary1) {
    result_50334408 = i_50334405;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_50334408;

}

function chckIndx(i_50334400, a_50334401, b_50334402) {
      var Temporary1;

  var result_50334403 = 0;

  BeforeRet: do {
      if (!(a_50334401 <= i_50334400)) Temporary1 = false; else {        Temporary1 = (i_50334400 <= b_50334402);      }    if (Temporary1) {
    result_50334403 = i_50334400;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_50334400, a_50334401, b_50334402);
    }
    
  } while (false);

  return result_50334403;

}

function addChar(x_50334471, c_50334472) {
    x_50334471.push(c_50334472);

  
}

function absInt(a_50334204) {
    var Temporary1;

  var result_50334205 = 0;

    if ((a_50334204 < 0)) {
    Temporary1 = (a_50334204 * -1);
    }
    else {
    Temporary1 = a_50334204;
    }
    
    result_50334205 = Temporary1;

  return result_50334205;

}

function subInt(a_50334160, b_50334161) {
        var result = a_50334160 - b_50334161;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_50334168, b_50334169) {
        if (b_50334169 == 0) raiseDivByZero();
    if (b_50334169 == -1 && a_50334168 == 2147483647) raiseOverflow();
    return Math.trunc(a_50334168 / b_50334169);
  

  
}
    var unitWeights_1509949586 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function modInt(a_50334172, b_50334173) {
        if (b_50334173 == 0) raiseDivByZero();
    if (b_50334173 == -1 && a_50334172 == 2147483647) raiseOverflow();
    return Math.trunc(a_50334172 % b_50334173);
  

  
}

function eqStrings(a_50334147, b_50334148) {
        if (a_50334147 == b_50334148) return true;
    if (a_50334147 === null && b_50334148.length == 0) return true;
    if (b_50334148 === null && a_50334147.length == 0) return true;
    if ((!a_50334147) || (!b_50334148)) return false;
    var alen = a_50334147.length;
    if (alen != b_50334148.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_50334147[i] != b_50334148[i]) return false;
    return true;
  

  
}

function negInt(a_50334198) {
  var result_50334199 = 0;

    result_50334199 = (a_50334198 * -1);

  return result_50334199;

}
    var daysUntilMonthLeap_1509949708 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1509949707 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
var normalDateFmt_33554451 = {patterns: [22, 33, 1, 45, 11, 33, 1, 45, 1], formatStr: makeNimstrLit("yyyy-MM-dd")};
var DefaultLocale_1509951047 = {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]};

function cstrToNimstr(c_50334020) {
      var ln = c_50334020.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_50334020.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_50334020.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet2 = setConstr([100, 199]);
var ConstSet3 = setConstr([400, 600]);
      var toTag_1107296516 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var toEventName_1107296517 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimMin(a_50334210, b_50334211) {
    var Temporary1;

  var result_50334212 = 0;

  BeforeRet: do {
    if ((a_50334210 <= b_50334211)) {
    Temporary1 = a_50334210;
    }
    else {
    Temporary1 = b_50334211;
    }
    
    result_50334212 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_50334212;

}
var ConstSet4 = setConstr(4);

function raiseFieldError2(f_50333994, discVal_50333995) {
    raiseException({message: (f_50333994 || []).concat(discVal_50333995 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI50332345, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_50333730) {
  var result_50333731 = [];

    if (x_50333730) {
    result_50333731 = nimCopy(null, makeNimstrLit("true"), NTI50331655);
    }
    else {
      result_50333731 = nimCopy(null, makeNimstrLit("false"), NTI50331655);
    }
    

  return result_50333731;

}

function reprDiscriminant(e_50334625, typ_50334626) {
    var Temporary1;

  var result_50334627 = [];

    switch (typ_50334626.kind) {
    case 14:
      Temporary1 = reprEnum(e_50334625, typ_50334626);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_50334625 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098755(e_50334625);
      break;
    }
    result_50334627 = nimCopy(null, Temporary1, NTI50331655);

  return result_50334627;

}
var ConstSet5 = setConstr(4);
var ConstSet6 = setConstr(2);
var ConstSet7 = setConstr(2);
var ConstSet8 = setConstr(3);
var ConstSet9 = setConstr(3);
var ConstSet10 = setConstr(1);
var ConstSet11 = setConstr(1);
var ConstSet12 = setConstr(6);
var ConstSet13 = setConstr(6);
var ConstSet14 = setConstr(5);
var ConstSet15 = setConstr(5);
var ConstSet16 = setConstr(5);

function mulInt(a_50334164, b_50334165) {
        var result = a_50334164 * b_50334165;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet17 = setConstr(5);
var ConstSet18 = setConstr(5);
var ConstSet19 = setConstr(2);
var ConstSet20 = setConstr([48, 57]);
var ConstSet21 = setConstr(0, 125);
var ConstSet22 = setConstr([48, 57]);
var ConstSet23 = setConstr([65, 90]);

function nimMax(a_50334214, b_50334215) {
    var Temporary1;

  var result_50334216 = 0;

  BeforeRet: do {
    if ((b_50334215 <= a_50334214)) {
    Temporary1 = a_50334214;
    }
    else {
    Temporary1 = b_50334215;
    }
    
    result_50334216 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_50334216;

}
var ConstSet24 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(5);
var ConstSet28 = setConstr(4, 0);
var ConstSet29 = setConstr(4, 0);
var ConstSet30 = setConstr(4);
var ConstSet31 = setConstr(5);
var ConstSet32 = setConstr(6);

function genericReset(x_50334387, ti_50334388) {
  var result_50334389 = null;

    result_50334389 = null;
    switch (ti_50334388.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_50334347(ti_50334388)) {
              result_50334389 = [null, 0];
      
      }
      
      break;
    case 19:
            result_50334389 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_50334388.kind == 17)) {
      result_50334389 = {m_type: ti_50334388};
      }
      else {
        result_50334389 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_50334389 = [];
    
      break;
    case 4:
    case 16:
            result_50334389 = new Array(x_50334387.length);
      for (var i = 0; i < x_50334387.length; ++i) {
        result_50334389[i] = genericReset(x_50334387[i], ti_50334388.base);
      }
    
      break;
    default: 
      break;
    }

  return result_50334389;

}
var ConstSet33 = setConstr(5);
    var toStyleAttrName_603980018 = ["alignContent", "alignItems", "alignSelf", "animation", "animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationTimingFunction", "animationPlayState", "background", "backgroundAttachment", "backgroundColor", "backgroundImage", "backgroundPosition", "backgroundRepeat", "backgroundClip", "backgroundOrigin", "backgroundSize", "backfaceVisibility", "border", "borderBottom", "borderBottomColor", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomStyle", "borderBottomWidth", "borderCollapse", "borderColor", "borderImage", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeft", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRadius", "borderRight", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderSpacing", "borderStyle", "borderTop", "borderTopColor", "borderTopLeftRadius", "borderTopRightRadius", "borderTopStyle", "borderTopWidth", "borderWidth", "bottom", "boxDecorationBreak", "boxShadow", "boxSizing", "captionSide", "clear", "clip", "color", "columnCount", "columnFill", "columnGap", "columnRule", "columnRuleColor", "columnRuleStyle", "columnRuleWidth", "columns", "columnSpan", "columnWidth", "content", "counterIncrement", "counterReset", "cursor", "direction", "display", "emptyCells", "filter", "flex", "flexBasis", "flexDirection", "flexFlow", "flexGrow", "flexShrink", "flexWrap", "cssFloat", "font", "fontFamily", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontWeight", "hangingPunctuation", "height", "hyphens", "icon", "imageOrientation", "justifyContent", "left", "letterSpacing", "lineHeight", "listStyle", "listStyleImage", "listStylePosition", "listStyleType", "margin", "marginBottom", "marginLeft", "marginRight", "marginTop", "maxHeight", "maxWidth", "minHeight", "minWidth", "navDown", "navIndex", "navLeft", "navRight", "navUp", "opacity", "order", "orphans", "outline", "outlineColor", "outlineOffset", "outlineStyle", "outlineWidth", "overflow", "overflowX", "overflowY", "padding", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "pageBreakAfter", "pageBreakBefore", "pageBreakInside", "perspective", "perspectiveOrigin", "pointerEvents", "position", "quotes", "resize", "right", "scrollbar3dLightColor", "scrollbarArrowColor", "scrollbarBaseColor", "scrollbarDarkshadowColor", "scrollbarFaceColor", "scrollbarHighlightColor", "scrollbarShadowColor", "scrollbarTrackColor", "tableLayout", "tabSize", "textAlign", "textAlignLast", "textDecoration", "textDecorationColor", "textDecorationLine", "textDecorationStyle", "textIndent", "textJustify", "textOverflow", "textShadow", "textTransform", "top", "transform", "transformOrigin", "transformStyle", "transition", "transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction", "unicodeBidi", "userSelect", "verticalAlign", "visibility", "whiteSpace", "width", "wordBreak", "wordSpacing", "wordWrap", "widows", "zIndex"];
var ConstSet34 = setConstr(60, 62, 94);
var ConstSet35 = setConstr(60, 62, 94);
var ConstSet36 = setConstr(45, 43, 32);
var ConstSet37 = setConstr([48, 57]);
var ConstSet38 = setConstr([48, 57]);
var ConstSet39 = setConstr([48, 57]);
var ConstSet40 = setConstr([65, 90], [97, 122]);

function nimCharToStr(x_50333733) {
  var result_50333734 = [];

    result_50333734 = nimCopy(null, mnewString(1), NTI50331655);
    result_50333734[0] = x_50333733;

  return result_50333734;

}
var ConstSet41 = setConstr(4);
var ConstSet42 = setConstr(4);
var ConstSet43 = setConstr([65, 90]);
var ConstSet44 = setConstr(4);
var ConstSet45 = setConstr(6);
var ConstSet46 = setConstr(6);
var ConstSet47 = setConstr(6);
var ConstSet48 = setConstr(5);
var ConstSet49 = setConstr(6);

function cmpStrings(a_50334139, b_50334140) {
        if (a_50334139 == b_50334140) return 0;
    if (!a_50334139) return -1;
    if (!b_50334140) return 1;
    for (var i = 0; i < a_50334139.length && i < b_50334140.length; i++) {
      var result = a_50334139[i] - b_50334140[i];
      if (result != 0) return result;
    }
    return a_50334139.length - b_50334140.length;
  

  
}
      var DurationZero_1509949813 = {seconds: 0, nanosecond: 0};
var ConstSet50 = setConstr(6);
var ConstSet51 = setConstr(6);
var ConstSet52 = setConstr([48, 57]);
var ConstSet53 = setConstr([48, 57]);
var ConstSet54 = setConstr(43, 45);
var ConstSet55 = setConstr(43, 45);
var ConstSet56 = setConstr(6);
var ConstSet57 = setConstr(6);
var ConstSet58 = setConstr(2);
var ConstSet59 = setConstr(2);
var ConstSet60 = setConstr(2);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(4);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_1107296778 = [0];
var objectID_1174405282 = [0];
var vcomponents_1124073485 = [{}];
var kxi_1090519104 = [null];
if (globalThis.utcInstance_1509950849 === undefined) {
  globalThis.utcInstance_1509950849 = [null];
}
if (globalThis.localInstance_1509950850 === undefined) {
  globalThis.localInstance_1509950850 = [null];
}
var currUser_587202590 = [{id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []}];
var timeStamp_587202591 = [[]];
var errMsg_587202592 = [[]];
var isShowUsers_587202593 = [false];
var isShowNavMap_587202594 = [false];
var allUsers_587202595 = [[]];
var engineTypes_587202618 = [H.map.render.RenderEngine.EngineType];
var curEngineType_587202619 = [null];
var dwnloadedMaps_587202620 = [[]];
var isInternet_587202682 = [true];
var pIndicator_587202683 = [({size: 0, marker: null, canvas: null})];
var animCnt_587202684 = [0];
var opa_587202685 = [0.0];
var sopa_587202686 = [1.0];
var cb64_1677721604 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47];
var cb64safe_1677721605 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95];

function isFatPointer_50334347(ti_50334348) {
  var result_50334349 = false;

  BeforeRet: do {
    result_50334349 = !((ConstSet1[ti_50334348.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_50334349;

}

function nimCopyAux(dest_50334360, src_50334361, n_50334362) {
    switch (n_50334362.kind) {
    case 0:
      break;
    case 1:
            dest_50334360[n_50334362.offset] = nimCopy(dest_50334360[n_50334362.offset], src_50334361[n_50334362.offset], n_50334362.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_50334362.sons.length; i++) {
      nimCopyAux(dest_50334360, src_50334361, n_50334362.sons[i]);
    }
    
      break;
    case 3:
            dest_50334360[n_50334362.offset] = nimCopy(dest_50334360[n_50334362.offset], src_50334361[n_50334362.offset], n_50334362.typ);
      for (var i = 0; i < n_50334362.sons.length; ++i) {
        nimCopyAux(dest_50334360, src_50334361, n_50334362.sons[i][1]);
      }
    
      break;
    }

  
}

function add_50333635(x_50333636, x_50333636_Idx, y_50333637) {
          if (x_50333636[x_50333636_Idx] === null) { x_50333636[x_50333636_Idx] = []; }
      var off = x_50333636[x_50333636_Idx].length;
      x_50333636[x_50333636_Idx].length += y_50333637.length;
      for (var i = 0; i < y_50333637.length; ++i) {
        x_50333636[x_50333636_Idx][off+i] = y_50333637.charCodeAt(i);
      }
    

  
}

function newSeq_50334041(len_50334043) {
  var result_50334044 = [];

    result_50334044 = new Array(len_50334043); for (var i = 0 ; i < len_50334043 ; ++i) { result_50334044[i] = null; }
  return result_50334044;

}

function unhandledException(e_50333879) {
    var buf_50333880 = [[]];
    if (!(((e_50333879.message).length == 0))) {
    buf_50333880[0].push.apply(buf_50333880[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_50333880[0].push.apply(buf_50333880[0], e_50333879.message);;
    }
    else {
    buf_50333880[0].push.apply(buf_50333880[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_50333880[0].push.apply(buf_50333880[0], makeNimstrLit(" ["));;
    add_50333635(buf_50333880, 0, e_50333879.name);
    buf_50333880[0].push.apply(buf_50333880[0], makeNimstrLit("]\x0A"));;
    var cbuf_50333881 = toJSStr(buf_50333880[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_50333881);
  }
  else {
    throw cbuf_50333881;
  }
  

  
}

function sysFatal_251658274(message_251658277) {
    raiseException({message: nimCopy(null, message_251658277, NTI50331655), m_type: NTI50332340, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_251658272(msg_251658273) {
    sysFatal_251658274(msg_251658273);

  
}

function failedAssertImpl_251658296(msg_251658297) {
    raiseAssert_251658272(msg_251658297);

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI50332338, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_50334154) {
        if (a_50334154 > 2147483647 || a_50334154 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI50332346, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_285212847(result_285212849, result_285212849_Idx, x_285212850, start_285212851, n_285212852) {
    var old_285212853 = (result_285212849[result_285212849_Idx]).length;
    (result_285212849[result_285212849_Idx].length = chckRange(addInt(old_285212853, n_285212852), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_285212867 = 0;
      var i_33554574 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554574 < n_285212852)) break Label3;
            iHEX60gensym4_285212867 = i_33554574;
            result_285212849[result_285212849_Idx][chckIndx(addInt(old_285212853, iHEX60gensym4_285212867), 0, (result_285212849[result_285212849_Idx]).length - 1)] = x_285212850.charCodeAt(chckIndx(addInt(start_285212851, iHEX60gensym4_285212867), 0, (x_285212850).length - 1));
            i_33554574 = addInt(i_33554574, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_285212843(result_285212845, result_285212845_Idx, x_285212846) {
    addChars_285212847(result_285212845, result_285212845_Idx, x_285212846, 0, ((x_285212846) == null ? 0 : (x_285212846).length));

  
}

function addInt_285212868(result_285212869, result_285212869_Idx, x_285212870) {
    addChars_285212843(result_285212869, result_285212869_Idx, ((x_285212870) + ""));

  
}

function addInt_285212889(result_285212890, result_285212890_Idx, x_285212891) {
    addInt_285212868(result_285212890, result_285212890_Idx, x_285212891);

  
}

function HEX24_369098755(x_369098756) {
  var result_369098757 = [[]];

    addInt_285212889(result_369098757, 0, x_369098756);

  return result_369098757[0];

}

function raiseIndexError(i_50333970, a_50333971, b_50333972) {
    var Temporary1;

    if ((b_50333972 < a_50333971)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_369098755(i_50333970) || [],makeNimstrLit(" not in ") || [],HEX24_369098755(a_50333971) || [],makeNimstrLit(" .. ") || [],HEX24_369098755(b_50333972) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI50331655), parent: null, m_type: NTI50332344, name: null, trace: [], up: null}, "IndexDefect");

  
}

function monthday_1509950594(dt_1509950595) {
  var result_1509950596 = 0;

    if (!(!((dt_1509950595.monthdayZero == 0)))) {
    failedAssertImpl_251658296(makeNimstrLit("times.nim(997, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1509950596 = dt_1509950595.monthdayZero;

  return result_1509950596;

}

function nsuIntToStr(x_654312213, minchars_654312214) {
  var result_654312215 = [];

    result_654312215 = nimCopy(null, HEX24_369098755(absInt(x_654312213)), NTI50331655);
    Label1: do {
      var i_654312220 = 0;
      var colontmp__33554577 = 0;
      colontmp__33554577 = subInt(minchars_654312214, (result_654312215).length);
      var res_33554578 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_33554578 <= colontmp__33554577)) break Label3;
            i_654312220 = res_33554578;
            result_654312215 = nimCopy(null, [48].concat(result_654312215 || []), NTI50331655);
            res_33554578 = addInt(res_33554578, 1);
          }
      } while (false);
    } while (false);
    if ((x_654312213 < 0)) {
    result_654312215 = nimCopy(null, [45].concat(result_654312215 || []), NTI50331655);
    }
    

  return result_654312215;

}

function HEX2D_1509949470(a_1509949471, b_1509949472) {
  var result_1509949473 = 0;

    result_1509949473 = (a_1509949471 - b_1509949472);

  return result_1509949473;

}

function month_1509950602(dt_1509950603) {
  var result_1509950604 = 0;

    if (!(!((dt_1509950603.monthdayZero == 0)))) {
    failedAssertImpl_251658296(makeNimstrLit("times.nim(1004, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1509950604 = dt_1509950603.monthZero;

  return result_1509950604;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI50332337, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function HEX2A_1509949450(a_1509949451, b_1509949452) {
  var result_1509949453 = 0;

    result_1509949453 = (a_1509949451 * b_1509949452);

  return result_1509949453;

}

function convert_1509950101(unitFrom_1509950103, unitTo_1509950104, quantity_1509950105) {
    var Temporary1;

  var result_1509950106 = 0;

    if ((unitFrom_1509950103 < unitTo_1509950104)) {
    Temporary1 = chckRange(divInt(quantity_1509950105, divInt(unitWeights_1509949586[chckIndx(unitTo_1509950104, 0, (unitWeights_1509949586).length - 1)], unitWeights_1509949586[chckIndx(unitFrom_1509950103, 0, (unitWeights_1509949586).length - 1)])), 0, 999999999);
    }
    else {
    Temporary1 = chckRange(HEX2A_1509949450(divInt(unitWeights_1509949586[chckIndx(unitFrom_1509950103, 0, (unitWeights_1509949586).length - 1)], unitWeights_1509949586[chckIndx(unitTo_1509950104, 0, (unitWeights_1509949586).length - 1)]), quantity_1509950105), 0, 999999999);
    }
    
    result_1509950106 = Temporary1;

  return result_1509950106;

}

function HEX2B_1509949462(a_1509949463, b_1509949464) {
  var result_1509949465 = 0;

    result_1509949465 = (a_1509949463 + b_1509949464);

  return result_1509949465;

}

function HEX3DHEX3D_1509950784(zone1_1509950785, zone2_1509950786) {
  var result_1509950787 = false;

  BeforeRet: do {
    if ((zone1_1509950785 == zone2_1509950786)) {
    result_1509950787 = true;
    break BeforeRet;
    }
    
    if (((zone1_1509950785 == null) || (zone2_1509950786 == null))) {
    result_1509950787 = false;
    break BeforeRet;
    }
    
    result_1509950787 = eqStrings(zone1_1509950785.name, zone2_1509950786.name);
  } while (false);

  return result_1509950787;

}

function formatPattern_1509951278(dt_1509951279, pattern_1509951280, result_1509951281, result_1509951281_Idx, loc_1509951282) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
          var Temporary9;
          var Temporary10;
      var Temporary11;

    switch (pattern_1509951280) {
    case 0:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(monthday_1509950594(dt_1509951279)));;
      break;
    case 1:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(monthday_1509950594(dt_1509951279), 2));;
      break;
    case 2:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], loc_1509951282.ddd[chckIndx(dt_1509951279.weekday, 0, (loc_1509951282.ddd).length - 1)]);;
      break;
    case 3:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], loc_1509951282.dddd[chckIndx(dt_1509951279.weekday, 0, (loc_1509951282.dddd).length - 1)]);;
      break;
    case 4:
      if ((dt_1509951279.hour == 0)) {
      Temporary1 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_1509951279.hour)) {
      Temporary1 = HEX24_369098755(HEX2D_1509949470(dt_1509951279.hour, 12));
      }
      else {
      Temporary1 = HEX24_369098755(dt_1509951279.hour);
      }
      }
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], Temporary1);;
      break;
    case 5:
      if ((dt_1509951279.hour == 0)) {
      Temporary2 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_1509951279.hour)) {
      Temporary2 = nsuIntToStr(HEX2D_1509949470(dt_1509951279.hour, 12), 2);
      }
      else {
      Temporary2 = nsuIntToStr(dt_1509951279.hour, 2);
      }
      }
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], Temporary2);;
      break;
    case 6:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(dt_1509951279.hour));;
      break;
    case 7:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(dt_1509951279.hour, 2));;
      break;
    case 8:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(dt_1509951279.minute));;
      break;
    case 9:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(dt_1509951279.minute, 2));;
      break;
    case 10:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(month_1509950602(dt_1509951279)));;
      break;
    case 11:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(month_1509950602(dt_1509951279), 2));;
      break;
    case 12:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], loc_1509951282.MMM[chckIndx(month_1509950602(dt_1509951279), 1, (loc_1509951282.MMM).length + (1) - 1) - (1)]);;
      break;
    case 13:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], loc_1509951282.MMMM[chckIndx(month_1509950602(dt_1509951279), 1, (loc_1509951282.MMMM).length + (1) - 1) - (1)]);;
      break;
    case 14:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(dt_1509951279.second));;
      break;
    case 15:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(dt_1509951279.second, 2));;
      break;
    case 16:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(convert_1509950101(0, 2, dt_1509951279.nanosecond), 3));;
      break;
    case 17:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(convert_1509950101(0, 1, dt_1509951279.nanosecond), 6));;
      break;
    case 18:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(dt_1509951279.nanosecond, 9));;
      break;
    case 19:
      if ((12 <= dt_1509951279.hour)) {
      Temporary3 = makeNimstrLit("P");
      }
      else {
      Temporary3 = makeNimstrLit("A");
      }
      
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], Temporary3);;
      break;
    case 20:
      if ((12 <= dt_1509951279.hour)) {
      Temporary4 = makeNimstrLit("PM");
      }
      else {
      Temporary4 = makeNimstrLit("AM");
      }
      
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], Temporary4);;
      break;
    case 21:
      if ((dt_1509951279.year <= 0)) {
      Temporary5 = HEX2B_1509949462(absInt(dt_1509951279.year), 1);
      }
      else {
      Temporary5 = dt_1509951279.year;
      }
      
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(modInt(Temporary5, 100), 2));;
      break;
    case 22:
      if ((dt_1509951279.year <= 0)) {
      Temporary6 = HEX2B_1509949462(absInt(dt_1509951279.year), 1);
      }
      else {
      Temporary6 = dt_1509951279.year;
      }
      
      var year_1509951301 = Temporary6;
      if ((year_1509951301 < 10000)) {
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(year_1509951301, 4));;
      }
      else {
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], [43].concat(HEX24_369098755(year_1509951301) || []));;
      }
      
      break;
    case 23:
      if ((dt_1509951279.year < 1)) {
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(HEX2B_1509949462(absInt(dt_1509951279.year), 1)));;
      }
      else {
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(dt_1509951279.year));;
      }
      
      break;
    case 24:
      var year_1509951302 = dt_1509951279.year;
      if (((year_1509951302 < 10000) || (year_1509951302 < 0))) {
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(year_1509951302, 4));;
      }
      else {
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], [43].concat(HEX24_369098755(year_1509951302) || []));;
      }
      
      break;
    case 25:
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(dt_1509951279.year));;
      break;
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
        if (!!(HEX3DHEX3D_1509950784(dt_1509951279.timezone, null))) Temporary7 = false; else {          Temporary7 = eqStrings(dt_1509951279.timezone.name, makeNimstrLit("Etc/UTC"));        }      if (Temporary7) {
      addChar(result_1509951281[result_1509951281_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_1509951279.utcOffset))) {
        Temporary8 = 43;
        }
        else {
        Temporary8 = 45;
        }
        
        addChar(result_1509951281[result_1509951281_Idx], Temporary8);;
        var absOffset_1509951303 = absInt(dt_1509951279.utcOffset);
        switch (pattern_1509951280) {
        case 26:
          result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], HEX24_369098755(divInt(absOffset_1509951303, 3600)));;
          break;
        case 27:
          result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], nsuIntToStr(divInt(absOffset_1509951303, 3600), 2));;
          break;
        case 28:
        case 30:
          var h_1509951304 = nsuIntToStr(divInt(absOffset_1509951303, 3600), 2);
          var m_1509951305 = nsuIntToStr(modInt(divInt(absOffset_1509951303, 60), 60), 2);
          if ((pattern_1509951280 == 28)) {
          Temporary9 = makeNimstrLit(":");
          }
          else {
          Temporary9 = [];
          }
          
          var sep_1509951311 = nimCopy(null, Temporary9, NTI50331655);
          result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], (h_1509951304 || []).concat(sep_1509951311 || [],m_1509951305 || []));;
          break;
        case 29:
        case 31:
          var absOffset_1509951312 = absInt(dt_1509951279.utcOffset);
          var h_1509951313 = nsuIntToStr(divInt(absOffset_1509951312, 3600), 2);
          var m_1509951314 = nsuIntToStr(modInt(divInt(absOffset_1509951312, 60), 60), 2);
          var s_1509951315 = nsuIntToStr(modInt(absOffset_1509951312, 60), 2);
          if ((pattern_1509951280 == 29)) {
          Temporary10 = makeNimstrLit(":");
          }
          else {
          Temporary10 = [];
          }
          
          var sep_1509951320 = nimCopy(null, Temporary10, NTI50331655);
          result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], (h_1509951313 || []).concat(sep_1509951320 || [],m_1509951314 || [],sep_1509951320 || [],s_1509951315 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_251658296(makeNimstrLit("times.nim(1773, 20) `false` "));
          }
          
          break;
        }
      }
      
      break;
    case 32:
      if ((dt_1509951279.year < 1)) {
      Temporary11 = makeNimstrLit("BC");
      }
      else {
      Temporary11 = makeNimstrLit("AD");
      }
      
      result_1509951281[result_1509951281_Idx].push.apply(result_1509951281[result_1509951281_Idx], Temporary11);;
      break;
    case 33:
      if (true) {
      failedAssertImpl_251658296(makeNimstrLit("times.nim(1776, 18) `false` "));
      }
      
      break;
    }

  
}

function format_1509952244(dt_1509952245, f_1509952246, loc_1509952247) {
  var result_1509952248 = [[]];

    if (!(!((dt_1509952245.monthdayZero == 0)))) {
    failedAssertImpl_251658296(makeNimstrLit("times.nim(2014, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1509952248[0] = nimCopy(null, [], NTI50331655);
    var idx_1509952254 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(idx_1509952254 <= (f_1509952246.patterns).length - 1)) break Label2;
          switch (chckRange(f_1509952246.patterns[chckIndx(idx_1509952254, 0, (f_1509952246.patterns).length - 1)], 0, 33)) {
          case 33:
            idx_1509952254 = addInt(idx_1509952254, 1);
            var len_1509952262 = f_1509952246.patterns[chckIndx(idx_1509952254, 0, (f_1509952246.patterns).length - 1)];
            Label3: do {
              var i_1509952273 = 0;
              var res_33554566 = 1;
              Label4: do {
                  Label5: while (true) {
                  if (!(res_33554566 <= ((len_1509952262) | 0))) break Label5;
                    i_1509952273 = res_33554566;
                    idx_1509952254 = addInt(idx_1509952254, 1);
                    addChar(result_1509952248[0], f_1509952246.patterns[chckIndx(idx_1509952254, 0, (f_1509952246.patterns).length - 1)]);;
                    res_33554566 = addInt(res_33554566, 1);
                  }
              } while (false);
            } while (false);
            idx_1509952254 = addInt(idx_1509952254, 1);
            break;
          default: 
            formatPattern_1509951278(dt_1509952245, chckRange(f_1509952246.patterns[chckIndx(idx_1509952254, 0, (f_1509952246.patterns).length - 1)], 0, 33), result_1509952248, 0, loc_1509952247);
            idx_1509952254 = addInt(idx_1509952254, 1);
            break;
          }
        }
    } while (false);

  return result_1509952248[0];

}

function HEX2B_1509949458(a_1509949459, b_1509949460) {
  var result_1509949461 = 0;

    result_1509949461 = (a_1509949459 + b_1509949460);

  return result_1509949461;

}

function convert_1509949842(unitFrom_1509949844, unitTo_1509949845, quantity_1509949846) {
    var Temporary1;

  var result_1509949847 = 0;

    if ((unitFrom_1509949844 < unitTo_1509949845)) {
    Temporary1 = divInt(quantity_1509949846, divInt(unitWeights_1509949586[chckIndx(unitTo_1509949845, 0, (unitWeights_1509949586).length - 1)], unitWeights_1509949586[chckIndx(unitFrom_1509949844, 0, (unitWeights_1509949586).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1509949450(divInt(unitWeights_1509949586[chckIndx(unitFrom_1509949844, 0, (unitWeights_1509949586).length - 1)], unitWeights_1509949586[chckIndx(unitTo_1509949845, 0, (unitWeights_1509949586).length - 1)]), quantity_1509949846);
    }
    
    result_1509949847 = Temporary1;

  return result_1509949847;

}

function convert_1509949909(unitFrom_1509949911, unitTo_1509949912, quantity_1509949913) {
    var Temporary1;

  var result_1509949914 = 0;

    if ((unitFrom_1509949911 < unitTo_1509949912)) {
    Temporary1 = chckRange(divInt(quantity_1509949913, divInt(unitWeights_1509949586[chckIndx(unitTo_1509949912, 0, (unitWeights_1509949586).length - 1)], unitWeights_1509949586[chckIndx(unitFrom_1509949911, 0, (unitWeights_1509949586).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1509949450(divInt(unitWeights_1509949586[chckIndx(unitFrom_1509949911, 0, (unitWeights_1509949586).length - 1)], unitWeights_1509949586[chckIndx(unitTo_1509949912, 0, (unitWeights_1509949586).length - 1)]), quantity_1509949913), -2147483648, 2147483647);
    }
    
    result_1509949914 = Temporary1;

  return result_1509949914;

}

function normalize_1509950470(seconds_1509950472, nanoseconds_1509950473) {
  var result_1509950474 = ({seconds: 0, nanosecond: 0});

    result_1509950474.seconds = HEX2B_1509949458(seconds_1509950472, convert_1509949842(0, 3, nanoseconds_1509950473));
    var nanosecond_1509950485 = modInt(nanoseconds_1509950473, convert_1509949909(3, 0, 1));
    if ((nanosecond_1509950485 < 0)) {
    nanosecond_1509950485 = addInt(nanosecond_1509950485, convert_1509949909(3, 0, 1));
    result_1509950474.seconds = subInt(result_1509950474.seconds, 1);
    }
    
    result_1509950474.nanosecond = chckRange(chckRange(nanosecond_1509950485, -2147483648, 2147483647), 0, 999999999);

  return result_1509950474;

}

function HEX2D_1509949466(a_1509949467, b_1509949468) {
  var result_1509949469 = 0;

    result_1509949469 = (a_1509949467 - b_1509949468);

  return result_1509949469;

}

function ntSubTime(a_1509950500, b_1509950501) {
  var result_1509950502 = ({seconds: 0, nanosecond: 0});

    result_1509950502 = nimCopy(result_1509950502, normalize_1509950470(HEX2D_1509949466(a_1509950500.seconds, b_1509950501.seconds), HEX2D_1509949470(a_1509950500.nanosecond, b_1509950501.nanosecond)), NTI1509949470);

  return result_1509950502;

}

function normalize_1509949899(seconds_1509949901, nanoseconds_1509949902) {
  var result_1509949903 = ({seconds: 0, nanosecond: 0});

    result_1509949903.seconds = HEX2B_1509949458(seconds_1509949901, convert_1509949842(0, 3, nanoseconds_1509949902));
    var nanosecond_1509949919 = modInt(nanoseconds_1509949902, convert_1509949909(3, 0, 1));
    if ((nanosecond_1509949919 < 0)) {
    nanosecond_1509949919 = addInt(nanosecond_1509949919, convert_1509949909(3, 0, 1));
    result_1509949903.seconds = subInt(result_1509949903.seconds, 1);
    }
    
    result_1509949903.nanosecond = chckRange(chckRange(nanosecond_1509949919, -2147483648, 2147483647), 0, 999999999);

  return result_1509949903;

}

function initDuration_1509949832(nanoseconds_1509949833, microseconds_1509949834, milliseconds_1509949835, seconds_1509949836, minutes_1509949837, hours_1509949838, days_1509949839, weeks_1509949840) {
  var result_1509949841 = ({seconds: 0, nanosecond: 0});

    var seconds_1509949887 = HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(HEX2B_1509949458(convert_1509949842(7, 3, weeks_1509949840), convert_1509949842(6, 3, days_1509949839)), convert_1509949842(4, 3, minutes_1509949837)), convert_1509949842(5, 3, hours_1509949838)), convert_1509949842(3, 3, seconds_1509949836)), convert_1509949842(2, 3, milliseconds_1509949835)), convert_1509949842(1, 3, microseconds_1509949834)), convert_1509949842(0, 3, nanoseconds_1509949833));
    var nanoseconds_1509949898 = chckRange(HEX2B_1509949458(HEX2B_1509949458(convert_1509949842(2, 0, modInt(milliseconds_1509949835, 1000)), convert_1509949842(1, 0, modInt(microseconds_1509949834, 1000000))), modInt(nanoseconds_1509949833, 1000000000)), -2147483648, 2147483647);
    result_1509949841 = nimCopy(result_1509949841, normalize_1509949899(seconds_1509949887, nanoseconds_1509949898), NTI1509949472);

  return result_1509949841;

}

function floorDiv_1509949733(x_1509949735, y_1509949736) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  var result_1509949737 = 0;

    result_1509949737 = Math.trunc(x_1509949735 / y_1509949736);
    var r_1509949738 = Math.trunc(x_1509949735 % y_1509949736);
      if (!(0 < r_1509949738)) Temporary2 = false; else {        Temporary2 = (y_1509949736 < 0);      }      if (Temporary2) Temporary1 = true; else {        if (!(r_1509949738 < 0)) Temporary3 = false; else {          Temporary3 = (0 < y_1509949736);        }        Temporary1 = Temporary3;      }    if (Temporary1) {
    result_1509949737 -= 1;
    }
    

  return result_1509949737;

}

function inc_1509949481(a_1509949482, a_1509949482_Idx, b_1509949483) {
    a_1509949482[a_1509949482_Idx] += b_1509949483;

  
}

function fromEpochDay_1509949666(epochday_1509949667) {
    var Temporary1;
    var Temporary2;

  var result_1509949671 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_1509949672 = [epochday_1509949667];
    inc_1509949481(z_1509949672, 0, 719468);
    if ((0 <= z_1509949672[0])) {
    Temporary1 = z_1509949672[0];
    }
    else {
    Temporary1 = HEX2D_1509949466(z_1509949672[0], 146096);
    }
    
    var era_1509949673 = divInt(Temporary1, 146097);
    var doe_1509949674 = HEX2D_1509949466(z_1509949672[0], HEX2A_1509949450(era_1509949673, 146097));
    var yoe_1509949675 = divInt(HEX2D_1509949466(HEX2B_1509949458(HEX2D_1509949466(doe_1509949674, divInt(doe_1509949674, 1460)), divInt(doe_1509949674, 36524)), divInt(doe_1509949674, 146096)), 365);
    var y_1509949676 = HEX2B_1509949458(yoe_1509949675, HEX2A_1509949450(era_1509949673, 400));
    var doy_1509949677 = HEX2D_1509949466(doe_1509949674, HEX2D_1509949466(HEX2B_1509949458(HEX2A_1509949450(365, yoe_1509949675), divInt(yoe_1509949675, 4)), divInt(yoe_1509949675, 100)));
    var mp_1509949678 = divInt(HEX2B_1509949458(HEX2A_1509949450(5, doy_1509949677), 2), 153);
    var d_1509949679 = HEX2B_1509949458(HEX2D_1509949466(doy_1509949677, divInt(HEX2B_1509949458(HEX2A_1509949450(153, mp_1509949678), 2), 5)), 1);
    if ((mp_1509949678 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1509949680 = HEX2B_1509949458(mp_1509949678, Temporary2);
    var colontmp__33554581 = chckRange(d_1509949679, 1, 31);
    var colontmp__33554582 = chckRange(m_1509949680, 1, 12);
    var colontmp__33554583 = chckRange(HEX2B_1509949458(y_1509949676, ((m_1509949680 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1509949671 = nimCopy(result_1509949671, {Field0: nimCopy(null, colontmp__33554581, NTI1509949464), Field1: colontmp__33554582, Field2: colontmp__33554583}, NTI1509949631);
    break BeforeRet;
  } while (false);

  return result_1509949671;

}

function isLeapYear_1509949609(year_1509949610) {
    var Temporary1;
      var Temporary2;

  var result_1509949611 = false;

    if (!(modInt(year_1509949610, 4) == 0)) Temporary1 = false; else {      if (!((modInt(year_1509949610, 100) == 0))) Temporary2 = true; else {        Temporary2 = (modInt(year_1509949610, 400) == 0);      }      Temporary1 = Temporary2;    }    result_1509949611 = Temporary1;

  return result_1509949611;

}

function getDaysInMonth_1509949612(month_1509949613, year_1509949614) {
      var Temporary1;

  var result_1509949615 = 0;

    switch (month_1509949613) {
    case 2:
      if (isLeapYear_1509949609(year_1509949614)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1509949615 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1509949615 = 30;
      break;
    default: 
      result_1509949615 = 31;
      break;
    }

  return result_1509949615;

}

function assertValidDate_1509949616(monthday_1509949617, month_1509949618, year_1509949619) {
    if (!((monthday_1509949617 <= getDaysInMonth_1509949612(month_1509949618, year_1509949619)))) {
    failedAssertImpl_251658296((makeNimstrLit("times.nim(450, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(HEX24_369098755(year_1509949619) || [],makeNimstrLit("-") || [],nsuIntToStr(month_1509949618, 2) || [],makeNimstrLit("-") || [],HEX24_369098755(monthday_1509949617) || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}

function HEX2A_1509949454(a_1509949455, b_1509949456) {
  var result_1509949457 = 0;

    result_1509949457 = (a_1509949455 * b_1509949456);

  return result_1509949457;

}

function toEpochDay_1509949638(monthday_1509949639, month_1509949640, year_1509949641) {
    var Temporary1;
    var Temporary2;

  var result_1509949642 = 0;

  BeforeRet: do {
    assertValidDate_1509949616(monthday_1509949639, month_1509949640, year_1509949641);
    var colontmp__33554584 = {Field0: year_1509949641, Field1: month_1509949640, Field2: monthday_1509949639};
    var y_1509949646 = colontmp__33554584["Field0"];
    var m_1509949647 = colontmp__33554584["Field1"];
    var d_1509949648 = colontmp__33554584["Field2"];
    if ((m_1509949647 <= 2)) {
    y_1509949646 = subInt(y_1509949646, 1);
    }
    
    if ((0 <= y_1509949646)) {
    Temporary1 = y_1509949646;
    }
    else {
    Temporary1 = HEX2D_1509949470(y_1509949646, 399);
    }
    
    var era_1509949653 = divInt(Temporary1, 400);
    var yoe_1509949654 = HEX2D_1509949470(y_1509949646, HEX2A_1509949454(era_1509949653, 400));
    if ((2 < m_1509949647)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1509949655 = HEX2D_1509949470(HEX2B_1509949462(divInt(HEX2B_1509949462(HEX2A_1509949454(153, HEX2B_1509949462(m_1509949647, Temporary2)), 2), 5), d_1509949648), 1);
    var doe_1509949656 = HEX2B_1509949462(HEX2D_1509949470(HEX2B_1509949462(HEX2A_1509949454(yoe_1509949654, 365), divInt(yoe_1509949654, 4)), divInt(yoe_1509949654, 100)), doy_1509949655);
    result_1509949642 = HEX2D_1509949470(HEX2B_1509949462(HEX2A_1509949454(era_1509949653, 146097), doe_1509949656), 719468);
    break BeforeRet;
  } while (false);

  return result_1509949642;

}

function getDayOfWeek_1509949727(monthday_1509949728, month_1509949729, year_1509949730) {
    var Temporary1;

  var result_1509949731 = 0;

    assertValidDate_1509949616(monthday_1509949728, month_1509949729, year_1509949730);
    var days_1509949732 = HEX2D_1509949466(toEpochDay_1509949638(monthday_1509949728, month_1509949729, year_1509949730), 3);
    var weeks_1509949743 = floorDiv_1509949733(days_1509949732, 7);
    var wd_1509949744 = HEX2D_1509949466(days_1509949732, HEX2A_1509949450(weeks_1509949743, 7));
    if ((wd_1509949744 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1509949466(wd_1509949744, 1), 0, 6);
    }
    
    result_1509949731 = Temporary1;

  return result_1509949731;

}

function getDayOfYear_1509949702(monthday_1509949703, month_1509949704, year_1509949705) {
  var result_1509949706 = 0;

    assertValidDate_1509949616(monthday_1509949703, month_1509949704, year_1509949705);
    if (isLeapYear_1509949609(year_1509949705)) {
    result_1509949706 = chckRange(HEX2D_1509949470(HEX2B_1509949462(daysUntilMonthLeap_1509949708[chckIndx(month_1509949704, 1, (daysUntilMonthLeap_1509949708).length + (1) - 1) - (1)], monthday_1509949703), 1), 0, 365);
    }
    else {
      result_1509949706 = chckRange(HEX2D_1509949470(HEX2B_1509949462(daysUntilMonth_1509949707[chckIndx(month_1509949704, 1, (daysUntilMonth_1509949707).length + (1) - 1) - (1)], monthday_1509949703), 1), 0, 365);
    }
    

  return result_1509949706;

}

function initDateTime_1509950701(zt_1509950702, zone_1509950703) {
  var result_1509950704 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1509950705 = ntSubTime(zt_1509950702.time, initDuration_1509949832(0, 0, 0, zt_1509950702.utcOffset, 0, 0, 0, 0));
    var s_1509950706 = adjTime_1509950705.seconds;
    var epochday_1509950711 = floorDiv_1509949733(s_1509950706, 86400);
    var rem_1509950712 = HEX2D_1509949466(s_1509950706, HEX2A_1509949450(epochday_1509950711, 86400));
    var hour_1509950713 = divInt(rem_1509950712, 3600);
    rem_1509950712 = HEX2D_1509949466(rem_1509950712, HEX2A_1509949450(hour_1509950713, 3600));
    var minute_1509950714 = divInt(rem_1509950712, 60);
    rem_1509950712 = HEX2D_1509949466(rem_1509950712, HEX2A_1509949450(minute_1509950714, 60));
    var second_1509950715 = rem_1509950712;
    var colontmp__33554580 = fromEpochDay_1509949666(epochday_1509950711);
    var d_1509950716 = colontmp__33554580["Field0"];
    var m_1509950717 = colontmp__33554580["Field1"];
    var y_1509950718 = colontmp__33554580["Field2"];
    result_1509950704 = nimCopy(result_1509950704, {year: y_1509950718, monthZero: ((m_1509950717) | 0), monthdayZero: d_1509950716, hour: nimCopy(null, chckRange(hour_1509950713, 0, 23), NTI1509949465), minute: nimCopy(null, chckRange(minute_1509950714, 0, 59), NTI1509949466), second: nimCopy(null, chckRange(second_1509950715, 0, 60), NTI1509949467), nanosecond: nimCopy(null, zt_1509950702.time.nanosecond, NTI1509949469), weekday: getDayOfWeek_1509949727(d_1509950716, m_1509950717, y_1509950718), yearday: getDayOfYear_1509949702(d_1509950716, m_1509950717, y_1509950718), isDst: zt_1509950702.isDst, timezone: zone_1509950703, utcOffset: zt_1509950702.utcOffset, m_type: NTI1509949471}, NTI1509949471);

  return result_1509950704;

}

function zonedTimeFromTime_1509950758(zone_1509950759, time_1509950760) {
  var result_1509950761 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1509950761 = nimCopy(result_1509950761, zone_1509950759.zonedTimeFromTimeImpl(time_1509950760), NTI1509949477);

  return result_1509950761;

}

function inZone_1509950798(time_1509950799, zone_1509950800) {
  var result_1509950801 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1509950801 = nimCopy(result_1509950801, initDateTime_1509950701(zonedTimeFromTime_1509950758(zone_1509950800, time_1509950799), zone_1509950800), NTI1509949471);

  return result_1509950801;

}

function newTimezone_1509950728(name_1509950729, zonedTimeFromTimeImpl_1509950732, zonedTimeFromAdjTimeImpl_1509950735) {
  var result_1509950736 = null;

    result_1509950736 = {name: nimCopy(null, name_1509950729, NTI50331655), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1509950732, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1509950735};

  return result_1509950736;

}

function localZonedTimeFromTime_1509950816(time_1509950817) {
  var result_1509950818 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1509950822 = new Date(HEX2A_1509949450(time_1509950817.seconds, 1000));
    var offset_1509950823 = HEX2A_1509949454(jsDate_1509950822.getTimezoneOffset(), 60);
    result_1509950818.time = nimCopy(result_1509950818.time, time_1509950817, NTI1509949470);
    result_1509950818.utcOffset = offset_1509950823;
    result_1509950818.isDst = false;

  return result_1509950818;

}

function contains_1509950839(s_1509950843, value_1509950844) {
  var result_1509950845 = false;

    result_1509950845 = ((s_1509950843.a <= value_1509950844) && (value_1509950844 <= s_1509950843.b));

  return result_1509950845;

}

function HEX2EHEX2E_922747731(a_922747734, b_922747735) {
  var result_922747736 = ({a: 0, b: 0});

    result_922747736 = nimCopy(result_922747736, {a: a_922747734, b: b_922747735}, NTI704643133);

  return result_922747736;

}

function ntAddTime(a_1509950464, b_1509950465) {
  var result_1509950466 = ({seconds: 0, nanosecond: 0});

    result_1509950466 = nimCopy(result_1509950466, normalize_1509950470(HEX2B_1509949458(a_1509950464.seconds, b_1509950465.seconds), HEX2B_1509949462(a_1509950464.nanosecond, b_1509950465.nanosecond)), NTI1509949470);

  return result_1509950466;

}

function localZonedTimeFromAdjTime_1509950824(adjTime_1509950825) {
  var result_1509950826 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1509950830 = new Date(HEX2A_1509949450(adjTime_1509950825.seconds, 1000));
    var localDate_1509950831 = new Date(utcDate_1509950830.getUTCFullYear(),utcDate_1509950830.getUTCMonth(),utcDate_1509950830.getUTCDate(),utcDate_1509950830.getUTCHours(),utcDate_1509950830.getUTCMinutes(),utcDate_1509950830.getUTCSeconds(),0);
    if (contains_1509950839(HEX2EHEX2E_922747731(0, 99), utcDate_1509950830.getUTCFullYear())) {
    localDate_1509950831.setFullYear(utcDate_1509950830.getUTCFullYear());
    }
    
    result_1509950826.utcOffset = HEX2A_1509949454(localDate_1509950831.getTimezoneOffset(), 60);
    result_1509950826.time = nimCopy(result_1509950826.time, ntAddTime(adjTime_1509950825, initDuration_1509949832(0, 0, 0, result_1509950826.utcOffset, 0, 0, 0, 0)), NTI1509949470);
    result_1509950826.isDst = false;

  return result_1509950826;

}

function local_1509950865() {
  var result_1509950866 = null;

    if ((localInstance_1509950850[0] == null)) {
    localInstance_1509950850[0] = newTimezone_1509950728(makeNimstrLit("LOCAL"), localZonedTimeFromTime_1509950816, localZonedTimeFromAdjTime_1509950824);
    }
    
    result_1509950866 = localInstance_1509950850[0];

  return result_1509950866;

}

function local_1509950879(t_1509950880) {
  var result_1509950881 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1509950881 = nimCopy(result_1509950881, inZone_1509950798(t_1509950880, local_1509950865()), NTI1509949471);

  return result_1509950881;

}

function initTime_1509950357(unix_1509950358, nanosecond_1509950359) {
  var result_1509950360 = ({seconds: 0, nanosecond: 0});

    result_1509950360.seconds = unix_1509950358;
    result_1509950360.nanosecond = nanosecond_1509950359;

  return result_1509950360;

}

function getTime_1509950423() {
  var result_1509950424 = ({seconds: 0, nanosecond: 0});

    var millis_1509950425 = new Date().getTime();
    var seconds_1509950431 = convert_1509949909(2, 3, millis_1509950425);
    var nanos_1509950442 = convert_1509949909(2, 0, modInt(millis_1509950425, convert_1509949909(3, 2, 1)));
    result_1509950424 = nimCopy(result_1509950424, initTime_1509950357(seconds_1509950431, chckRange(nanos_1509950442, 0, 999999999)), NTI1509949470);

  return result_1509950424;

}

function now_1509950882() {
  var result_1509950883 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1509950883 = nimCopy(result_1509950883, local_1509950879(getTime_1509950423()), NTI1509949471);

  return result_1509950883;

}

function newSeq_553648597(len_553648599) {
  var result_553648600 = [];

    result_553648600 = new Array(len_553648599); for (var i = 0 ; i < len_553648599 ; ++i) { result_553648600[i] = []; }
  return result_553648600;

}
var Temporary1;
var Temporary2;
var Temporary3;
var currDate_33554452 = [format_1509952244(now_1509950882(), normalDateFmt_33554451, DefaultLocale_1509951047)];
var savedEngineType_33554473 = parseInt((localStorage.getItem(("engineType"))), 10);
if ((savedEngineType_33554473 == (engineTypes_587202618[0].P2D))) {
Temporary1 = engineTypes_587202618[0].P2D;
}
else {
Temporary1 = engineTypes_587202618[0].WEBGL;
}

curEngineType_587202619[0] = Temporary1;
if (localStorage.hasOwnProperty("engineType")) {
Temporary2 = curEngineType_587202619[0];
}
else {
Temporary2 = engineTypes_587202618[0].WEBGL;
}

curEngineType_587202619[0] = Temporary2;
curEngineType_587202619[0] = engineTypes_587202618[0].P2D;
localStorage.setItem(("engineType"), (curEngineType_587202619[0]));
dwnloadedMaps_587202620[0] = nimCopy(null, (JSON.parse((localStorage.getItem(("dwnloadedMaps"))))), NTI33554465);
if (localStorage.hasOwnProperty("dwnloadedMaps")) {
Temporary3 = dwnloadedMaps_587202620[0];
}
else {
Temporary3 = newSeq_553648597(0);
}

dwnloadedMaps_587202620[0] = nimCopy(null, Temporary3, NTI587202574);
localStorage.setItem(("dwnloadedMaps"), (JSON.stringify(dwnloadedMaps_587202620[0])));

function newPositionIndicator_587203030(size_587203031) {
    
function innerHEX60gensym84_587203083() {
      var result_587203084 = null;

      BeforeRet: do {
        var a_587203085 = null;
        a_587203085 = {};
        a_587203085.lat = 0;
        a_587203085.lng = 0;
        result_587203084 = a_587203085;
        break BeforeRet;
      } while (false);

      return result_587203084;

    }
    
function innerHEX60gensym97_587203124() {
      var result_587203125 = null;

      BeforeRet: do {
        var a_587203126 = null;
        a_587203126 = {};
        a_587203126.icon = (new H.map.Icon((canvas_587203066)));
        a_587203126.volatility = true;
        result_587203125 = a_587203126;
        break BeforeRet;
      } while (false);

      return result_587203125;

    }

  var result_587203032 = ({size: 0, marker: null, canvas: null});

    result_587203032.size = size_587203031;
    result_587203032.canvas = document.createElement(("canvas"));
    result_587203032.canvas.width = size_587203031;
    result_587203032.canvas.height = size_587203031;
    var canvas_587203066 = result_587203032.canvas;
    result_587203032.marker = (new H.map.Marker((innerHEX60gensym84_587203083()), (innerHEX60gensym97_587203124())));

  return result_587203032;

}

function nimFloatToString_385876086(a_385876087) {
  var result_385876088 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876087))
      result_385876088 = a_385876087 === 0 && 1 / a_385876087 < 0 ? "-0.0" : a_385876087+".0"
    else {
      result_385876088 = a_385876087+""
      if(nimOnlyDigitsOrMinus(result_385876088)){
        result_385876088 = a_385876087+".0"
      }
    }
  

  return result_385876088;

}

function addFloat_50334588(result_50334590, result_50334590_Idx, x_50334591) {
    add_50333635(result_50334590, result_50334590_Idx, nimFloatToString_385876086(x_50334591));

  
}

function HEX24_50334584(x_50334586) {
  var result_50334587 = [[]];

    addFloat_50334588(result_50334587, 0, x_50334586);

  return result_50334587[0];

}

function toFloat_50333217(i_50333218) {
  var result_50333219 = 0.0;

    result_50333219 = i_50333218;

  return result_50333219;

}

function HEX2F_50334791(x_50334792, y_50334793) {
  var result_50334794 = 0.0;

    result_50334794 = (toFloat_50333217(x_50334792) / toFloat_50333217(y_50334793));

  return result_50334794;

}

function redrawIndCtx_587202852(pIndicator_587202853, opa_587202854) {
    var ctx_587202866 = pIndicator_587202853.canvas.getContext(("2d"));
    var size_587202867 = pIndicator_587202853.size;
    ctx_587202866.clearRect((0), (0), (size_587202867), (size_587202867));
    ctx_587202866.fillStyle = toJSStr((makeNimstrLit("rgba(255, 0, 0, ") || []).concat(HEX24_50334584(opa_587202854) || [],makeNimstrLit(")") || []));
    ctx_587202866.strokeStyle = "white";
    ctx_587202866.beginPath();
    ctx_587202866.arc((HEX2F_50334791(size_587202867, 2)), (HEX2F_50334791(size_587202867, 2)), ((HEX2F_50334791(size_587202867, 2) - 1.0)), (0), (6.283185307179586));
    ctx_587202866.fill();
    ctx_587202866.stroke();

  
}

function drawInd_587202976() {
      var Temporary1;
      var Temporary2;

  BeforeRet: do {
    if ((curEngineType_587202619[0] == engineTypes_587202618[0].P2D)) {
      if (!!(isInternet_587202682[0])) Temporary1 = false; else {        Temporary1 = !((pIndicator_587202683[0].marker.getVisibility));      }    if (Temporary1) {
    pIndicator_587202683[0].marker.setVisibility((true));
    }
    
    if (!(isInternet_587202682[0])) {
    redrawIndCtx_587202852(pIndicator_587202683[0], 1.0);
    break BeforeRet;
    }
    
    }
    
    if ((animCnt_587202684[0] == 8)) {
    animCnt_587202684[0] = 0;
    pIndicator_587202683[0].marker.setVisibility((false));
    redrawIndCtx_587202852(pIndicator_587202683[0], opa_587202685[0]);
    pIndicator_587202683[0].marker.setVisibility((true));
      if (!(1.0 < opa_587202685[0])) Temporary2 = false; else {        Temporary2 = (sopa_587202686[0] == 1.0);      }    if (Temporary2) {
    sopa_587202686[0] = -1.0;
    }
    else {
    if (((opa_587202685[0] < 0.0) && (sopa_587202686[0] == -1.0))) {
    sopa_587202686[0] = 1.0;
    }
    }
    opa_587202685[0] = (opa_587202685[0] + (sopa_587202686[0] * 0.25));
    }
    
    animCnt_587202684[0] = addInt(animCnt_587202684[0], 1);
  } while (false);

  
}

function sendRequest_587202696(meth_587202697, url_587202698, body_587202699, headers_587202704) {
    meth_587202697 = nimCopy(null, meth_587202697, NTI50331655);
    url_587202698 = nimCopy(null, url_587202698, NTI50331655);
    body_587202699 = nimCopy(null, body_587202699, NTI50331655);
    
function HEX3Aanonymous_587202707(emitter_587202708) {
        
function HEX3Aanonymous_587202714() {
            var Temporary1;
              var Temporary2;
              var Temporary3;

            var stts_587202715 = oReq_587202711.status;
            var resp_587202716 = nimCopy(null, {Field0: oReq_587202711.status, Field1: cstrToNimstr(oReq_587202711.statusText), Field2: cstrToNimstr(oReq_587202711.responseText)}, NTI1560281091);
              if ((stts_587202715 == 0)) Temporary3 = true; else {                Temporary3 = (ConstSet2[chckRange(stts_587202715, 0, 65535)] != undefined);              }              if (Temporary3) Temporary2 = true; else {                Temporary2 = (ConstSet3[chckRange(stts_587202715, 0, 65535)] != undefined);              }            if (Temporary2) {
            Temporary1 = emitter_587202708.error((resp_587202716));
            }
            else {
            Temporary1 = emitter_587202708.emit((resp_587202716));
            }
            
            Temporary1;

          
        }
        var Temporary1;
        
function HEX3Aanonymous_587202788() {
            oReq_587202711.abort();

          
        }

      var result_587202710 = null;

        var oReq_587202711 = function(){return (window.XMLHttpRequest)?new XMLHttpRequest():new ActiveXObject('Microsoft.XMLHTTP')}();
        var reqListener_587202713 = null;
        reqListener_587202713 = HEX3Aanonymous_587202714;
        oReq_587202711.addEventListener("load", reqListener_587202713);
        oReq_587202711.addEventListener("error", reqListener_587202713);
        if (!(eqStrings(url_587202698, []))) {
        Temporary1 = (url_587202698 || []).concat(makeNimstrLit("&tst=") || [],timeStamp_587202591[0] || []);
        }
        else {
        Temporary1 = [];
        }
        
        oReq_587202711.open(toJSStr(meth_587202697), toJSStr(Temporary1));
        oReq_587202711.responseType="text";
        Label2: do {
          var h_587202787 = {Field0: null, Field1: null};
          var i_33554867 = 0;
          var L_33554868 = (hdrs_587202706).length;
          Label3: do {
              Label4: while (true) {
              if (!(i_33554867 < L_33554868)) break Label4;
                h_587202787 = hdrs_587202706[chckIndx(i_33554867, 0, (hdrs_587202706).length - 1)];
                oReq_587202711.setRequestHeader(h_587202787["Field0"], h_587202787["Field1"]);
                i_33554867 = addInt(i_33554867, 1);
                if (!(((hdrs_587202706).length == L_33554868))) {
                failedAssertImpl_251658296(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        if (((body_587202699).length == 0)) {
        oReq_587202711.send();
        }
        else {
        oReq_587202711.send(toJSStr(body_587202699));
        }
        
        result_587202710 = HEX3Aanonymous_587202788;

      return result_587202710;

    }

  var result_587202705 = null;

    var hdrs_587202706 = nimCopy(null, headers_587202704, NTI587202631);
    var rPrc_587202798 = HEX3Aanonymous_587202707;
    result_587202705 = Kefir.stream((rPrc_587202798)).take((1)).takeErrors((1)).toProperty();

  return result_587202705;

}

function valueHEX3D_1107296586(n_1107296587, v_1107296588) {
    n_1107296587.text = v_1107296588;

  
}

function value_1107296583(n_1107296584) {
  var result_1107296585 = null;

    result_1107296585 = n_1107296584.text;

  return result_1107296585;

}

function addEventShell_1090519132(d_1090519133, name_1090519134, h_1090519135) {
    d_1090519133.addEventListener(name_1090519134, h_1090519135, false);
    if ((d_1090519133.karaxEvents == null)) {
    d_1090519133.karaxEvents = new Array(0);
    }
    
    d_1090519133.karaxEvents.push({Field0: name_1090519134, Field1: h_1090519135});

  
}

function wrapEvent_1090519192(d_1090519193, n_1090519194, k_1090519195, action_1090519196) {
      
function laterWrapper_1090519262() {
          
function HEX3Aanonymous_1090519267(ev_1090519268) {
              
function wrapper_1090519269() {
                  var vHEX60gensym15_1090519271 = ev_1090519268.target.value;
                  valueHEX3D_1107296586(n_1090519265, vHEX60gensym15_1090519271);
                  if (!(!((action_1090519264 == null)))) {
                  failedAssertImpl_251658296(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_1090519264(ev_1090519268, n_1090519265);
                  if (!((value_1107296583(n_1090519265) == vHEX60gensym15_1090519271))) {
                  ev_1090519268.target.value = value_1107296583(n_1090519265);
                  }
                  

                
              }

              if (!((timer_1090519266 == null))) {
              clearTimeout(timer_1090519266);
              }
              
              timer_1090519266 = setTimeout(wrapper_1090519269, 400);

            
          }

        var result_1090519263 = null;

          var action_1090519264 = action_1090519196;
          var n_1090519265 = n_1090519194;
          var timer_1090519266 = null;
          result_1090519263 = HEX3Aanonymous_1090519267;

        return result_1090519263;

      }
      
function enterWrapper_1090519236() {
          
function HEX3Aanonymous_1090519240(ev_1090519241) {
              if ((ev_1090519241.keyCode == 13)) {
              var vHEX60gensym8_1090519243 = ev_1090519241.target.value;
              valueHEX3D_1107296586(n_1090519239, vHEX60gensym8_1090519243);
              if (!(!((action_1090519238 == null)))) {
              failedAssertImpl_251658296(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_1090519238(ev_1090519241, n_1090519239);
              if (!((value_1107296583(n_1090519239) == vHEX60gensym8_1090519243))) {
              ev_1090519241.target.value = value_1107296583(n_1090519239);
              }
              
              }
              

            
          }

        var result_1090519237 = null;

          var action_1090519238 = action_1090519196;
          var n_1090519239 = n_1090519194;
          result_1090519237 = HEX3Aanonymous_1090519240;

        return result_1090519237;

      }
      
function stdWrapper_1090519198() {
          
function HEX3Aanonymous_1090519202(ev_1090519203) {
                var Temporary1;
                var Temporary2;

                if ((n_1090519201.kind == 111)) Temporary2 = true; else {                  Temporary2 = (n_1090519201.kind == 105);                }                if (Temporary2) Temporary1 = true; else {                  Temporary1 = (n_1090519201.kind == 107);                }              if (Temporary1) {
              var vHEX60gensym1_1090519217 = ev_1090519203.target.value;
              valueHEX3D_1107296586(n_1090519201, vHEX60gensym1_1090519217);
              if (!(!((action_1090519200 == null)))) {
              failedAssertImpl_251658296(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_1090519200(ev_1090519203, n_1090519201);
              if (!((value_1107296583(n_1090519201) == vHEX60gensym1_1090519217))) {
              ev_1090519203.target.value = value_1107296583(n_1090519201);
              }
              
              }
              else {
              action_1090519200(ev_1090519203, n_1090519201);
              }
              

            
          }

        var result_1090519199 = null;

          var action_1090519200 = action_1090519196;
          var n_1090519201 = n_1090519194;
          result_1090519199 = HEX3Aanonymous_1090519202;

        return result_1090519199;

      }

  var result_1090519197 = null;

    switch (k_1090519195) {
    case 30:
      result_1090519197 = laterWrapper_1090519262();
      addEventShell_1090519132(d_1090519193, "keyup", result_1090519197);
      break;
    case 29:
      result_1090519197 = enterWrapper_1090519236();
      addEventShell_1090519132(d_1090519193, "keyup", result_1090519197);
      break;
    default: 
      result_1090519197 = stdWrapper_1090519198();
      addEventShell_1090519132(d_1090519193, toEventName_1107296517[chckIndx(k_1090519195, 0, (toEventName_1107296517).length - 1)], result_1090519197);
      break;
    }

  return result_1090519197;

}

function applyEvents_1090519298(n_1090519299) {
    var dest_1090519300 = n_1090519299.dom;
    Label1: do {
      var i_1090519308 = 0;
      var colontmp__33554891 = 0;
      colontmp__33554891 = (n_1090519299.events).length;
      var i_33554892 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554892 < colontmp__33554891)) break Label3;
            i_1090519308 = i_33554892;
            n_1090519299.events[chckIndx(i_1090519308, 0, (n_1090519299.events).length - 1)]["Field2"] = wrapEvent_1090519192(dest_1090519300, n_1090519299, n_1090519299.events[chckIndx(i_1090519308, 0, (n_1090519299.events).length - 1)]["Field0"], n_1090519299.events[chckIndx(i_1090519308, 0, (n_1090519299.events).length - 1)]["Field1"]);
            i_33554892 = addInt(i_33554892, 1);
          }
      } while (false);
    } while (false);

  
}

function applyStyle_603980258(n_603980259, s_603980260) {
    n_603980259.style = {};
    Label1: do {
      var i_603980273 = 0;
      var colontmp__33554895 = 0;
      colontmp__33554895 = subInt(s_603980260.length, 1);
      var res_33554896 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_33554896 <= colontmp__33554895)) break Label3;
            i_603980273 = res_33554896;
            n_603980259.style[s_603980260[i_603980273]] = s_603980260[addInt(i_603980273, 1)];
            res_33554896 = addInt(res_33554896, 2);
          }
      } while (false);
    } while (false);

  
}

function toDom_1090519326(n_1090519327, useAttachedNode_1090519328, kxi_1090519329) {
      var Temporary9;
      var Temporary10;

  var result_1090519330 = null;

  BeforeRet: do {
    if (useAttachedNode_1090519328) {
    if (!((n_1090519327.dom == null))) {
    if (!((n_1090519327.id == null))) {
    kxi_1090519329.byId[n_1090519327.id] = n_1090519327;
    }
    
    result_1090519330 = n_1090519327.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_1090519327.kind == 0)) {
    result_1090519330 = document.createTextNode(n_1090519327.text);
    n_1090519327.dom = result_1090519330;
    if (!((n_1090519327.id == null))) {
    kxi_1090519104[0].byId[n_1090519327.id] = n_1090519327;
    }
    
    }
    else {
    if ((n_1090519327.kind == 6)) {
    result_1090519330 = document.createElement("div");
    result_1090519330.innerHTML = n_1090519327.text;
    n_1090519327.dom = result_1090519330;
    if (!((n_1090519327.id == null))) {
    kxi_1090519104[0].byId[n_1090519327.id] = n_1090519327;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_1090519327.kind == 3)) {
    var x_1090519370 = vcomponents_1124073485[0][n_1090519327.text](n_1090519327.kids);
    result_1090519330 = toDom_1090519326(x_1090519370, useAttachedNode_1090519328, kxi_1090519329);
    n_1090519327.dom = result_1090519330;
    if (!((n_1090519327.id == null))) {
    kxi_1090519104[0].byId[n_1090519327.id] = n_1090519327;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_1090519327.kind == 4)) {
    result_1090519330 = n_1090519327.dom;
    if (!(!((result_1090519330 == null)))) {
    failedAssertImpl_251658296(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_1090519327.dom = result_1090519330;
    if (!((n_1090519327.id == null))) {
    kxi_1090519104[0].byId[n_1090519327.id] = n_1090519327;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_1090519327.kind == 5)) {
    var x_1090519400 = n_1090519327;
    if (!((x_1090519400.onAttachImpl == null))) {
    x_1090519400.onAttachImpl(x_1090519400);
    }
    
    if (!(!((x_1090519400.renderImpl == null)))) {
    failedAssertImpl_251658296(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_1090519400.expanded == null)) {
    x_1090519400.expanded = x_1090519400.renderImpl(x_1090519400);
    }
    
    if (!(!((x_1090519400.expanded == null)))) {
    failedAssertImpl_251658296(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_1090519330 = toDom_1090519326(x_1090519400.expanded, useAttachedNode_1090519328, kxi_1090519329);
    n_1090519327.dom = result_1090519330;
    if (!((n_1090519327.id == null))) {
    kxi_1090519104[0].byId[n_1090519327.id] = n_1090519327;
    }
    
    break BeforeRet;
    }
    else {
      result_1090519330 = document.createElement(toTag_1107296516[chckIndx(n_1090519327.kind, 0, (toTag_1107296516).length - 1)]);
      n_1090519327.dom = result_1090519330;
      if (!((n_1090519327.id == null))) {
      kxi_1090519104[0].byId[n_1090519327.id] = n_1090519327;
      }
      
      Label1: do {
        var k_1090519439 = null;
        Label2: do {
          var i_33554876 = 0;
          var colontmp__33554877 = 0;
          colontmp__33554877 = (n_1090519327.kids).length;
          var i_33554878 = 0;
          Label3: do {
              Label4: while (true) {
              if (!(i_33554878 < colontmp__33554877)) break Label4;
                i_33554876 = i_33554878;
                k_1090519439 = n_1090519327.kids[chckIndx(i_33554876, 0, (n_1090519327.kids).length - 1)];
                result_1090519330.appendChild(toDom_1090519326(k_1090519439, useAttachedNode_1090519328, kxi_1090519329));
                i_33554878 = addInt(i_33554878, 1);
              }
          } while (false);
        } while (false);
      } while (false);
      if (!((n_1090519327.text == null))) {
      result_1090519330.value = n_1090519327.text;
      }
      
    }
    }}}}
    if (!((n_1090519327.id == null))) {
    result_1090519330.id = n_1090519327.id;
    }
    
    if (!((n_1090519327.class == null))) {
    result_1090519330.className = n_1090519327.class;
    }
    
    Label5: do {
      var k_1090519440 = null;
      var v_1090519441 = null;
      Label6: do {
        var i_33554886 = 0;
        var colontmp__33554887 = 0;
        colontmp__33554887 = subInt((n_1090519327.attrs).length, 2);
        var res_33554888 = 0;
        Label7: do {
            Label8: while (true) {
            if (!(res_33554888 <= colontmp__33554887)) break Label8;
              i_33554886 = res_33554888;
              k_1090519440 = n_1090519327.attrs[chckIndx(i_33554886, 0, (n_1090519327.attrs).length - 1)];
              v_1090519441 = n_1090519327.attrs[chckIndx(addInt(i_33554886, 1), 0, (n_1090519327.attrs).length - 1)];
              if (!((v_1090519441 == null))) {
              result_1090519330.setAttribute(k_1090519440, v_1090519441);
              }
              
              res_33554888 = addInt(res_33554888, 2);
            }
        } while (false);
      } while (false);
    } while (false);
    applyEvents_1090519298(n_1090519327);
      if (!!((kxi_1090519329 == null))) Temporary10 = false; else {        Temporary10 = (n_1090519327 == kxi_1090519329.toFocusV);      }      if (!Temporary10) Temporary9 = false; else {        Temporary9 = (kxi_1090519329.toFocus == null);      }    if (Temporary9) {
    kxi_1090519329.toFocus = result_1090519330;
    }
    
    if (!((n_1090519327.style == null))) {
    applyStyle_603980258(result_1090519330, n_1090519327.style);
    }
    
  } while (false);

  return result_1090519330;

}

function replaceById_1090519539(id_1090519540, newTree_1090519541) {
    var x_1090519542 = document.getElementById(id_1090519540);
    x_1090519542.parentNode.replaceChild(newTree_1090519541, x_1090519542);
    newTree_1090519541.id = id_1090519540;

  
}

function len_1107296867(x_1107296868) {
  var result_1107296869 = 0;

    result_1107296869 = (x_1107296868.kids).length;

  return result_1107296869;

}

function HEX5BHEX5D_1107296874(x_1107296875, idx_1107296876) {
  var result_1107296877 = null;

    result_1107296877 = x_1107296875.kids[chckIndx(idx_1107296876, 0, (x_1107296875.kids).length - 1)];

  return result_1107296877;

}

function same_1090519480(n_1090519481, e_1090519482, nesting_1090519483) {
      var Temporary1;
      var Temporary2;

  var result_1090519484 = false;

  BeforeRet: do {
    if (kxi_1090519104[0].orphans.hasOwnProperty(n_1090519481.id)) {
    result_1090519484 = true;
    break BeforeRet;
    }
    
    if ((n_1090519481.kind == 5)) {
    result_1090519484 = same_1090519480(n_1090519481.expanded, e_1090519482, addInt(nesting_1090519483, 1));
    }
    else {
    if ((n_1090519481.kind == 6)) {
    result_1090519484 = true;
    }
    else {
      if ((n_1090519481.kind == 3)) Temporary1 = true; else {        Temporary1 = (n_1090519481.kind == 4);      }    if (Temporary1) {
    result_1090519484 = true;
    }
    else {
    if ((toTag_1107296516[chckIndx(n_1090519481.kind, 0, (toTag_1107296516).length - 1)] == e_1090519482.nodeName)) {
    result_1090519484 = true;
    if (!((n_1090519481.kind == 0))) {
      if (!!((e_1090519482.childNodes.length == len_1107296867(n_1090519481)))) Temporary2 = false; else {        Temporary2 = !((n_1090519481.kind == 111));      }    if (Temporary2) {
    rawEcho(makeNimstrLit("expected "), HEX24_369098755(len_1107296867(n_1090519481)), makeNimstrLit(" real "), HEX24_369098755(e_1090519482.childNodes.length), makeNimstrLit(" "), cstrToNimstr(toTag_1107296516[chckIndx(n_1090519481.kind, 0, (toTag_1107296516).length - 1)]), makeNimstrLit(" nesting "), HEX24_369098755(nesting_1090519483));
    result_1090519484 = false;
    break BeforeRet;
    }
    
    Label3: do {
      var i_1090519520 = 0;
      var colontmp__33554899 = 0;
      colontmp__33554899 = len_1107296867(n_1090519481);
      var i_33554900 = 0;
      Label4: do {
          Label5: while (true) {
          if (!(i_33554900 < colontmp__33554899)) break Label5;
            i_1090519520 = i_33554900;
            if (!(same_1090519480(HEX5BHEX5D_1107296874(n_1090519481, i_1090519520), e_1090519482.childNodes[i_1090519520], addInt(nesting_1090519483, 1)))) {
            result_1090519484 = false;
            break BeforeRet;
            }
            
            i_33554900 = addInt(i_33554900, 1);
          }
      } while (false);
    } while (false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(toTag_1107296516[chckIndx(n_1090519481.kind, 0, (toTag_1107296516).length - 1)]), makeNimstrLit(" DOM: "), cstrToNimstr(e_1090519482.nodeName));
    }
    }}}
  } while (false);

  return result_1090519484;

}

function eq_603980030(a_603980031, b_603980032) {
  var result_603980033 = false;

  BeforeRet: do {
    if ((a_603980031 == null)) {
    if ((b_603980032 == null)) {
    result_603980033 = true;
    break BeforeRet;
    }
    else {
      result_603980033 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_603980032 == null)) {
    result_603980033 = false;
    break BeforeRet;
    }
    }
    if (!((a_603980031.length == b_603980032.length))) {
    result_603980033 = false;
    break BeforeRet;
    }
    
    Label1: do {
      var i_603980068 = 0;
      var colontmp__33554926 = 0;
      colontmp__33554926 = a_603980031.length;
      var i_33554927 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554927 < colontmp__33554926)) break Label3;
            i_603980068 = i_33554927;
            if (!((a_603980031[i_603980068] == b_603980032[i_603980068]))) {
            result_603980033 = false;
            break BeforeRet;
            }
            
            i_33554927 = addInt(i_33554927, 1);
          }
      } while (false);
    } while (false);
    result_603980033 = true;
    break BeforeRet;
  } while (false);

  return result_603980033;

}

function sameAttrs_1107297030(a_1107297031, b_1107297032) {
  var result_1107297033 = false;

  BeforeRet: do {
    if (((a_1107297031.attrs).length == (b_1107297032.attrs).length)) {
    result_1107297033 = true;
    Label1: do {
      var i_1107297047 = 0;
      var colontmp__33554930 = 0;
      colontmp__33554930 = (a_1107297031.attrs).length;
      var i_33554931 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554931 < colontmp__33554930)) break Label3;
            i_1107297047 = i_33554931;
            if (!((a_1107297031.attrs[chckIndx(i_1107297047, 0, (a_1107297031.attrs).length - 1)] == b_1107297032.attrs[chckIndx(i_1107297047, 0, (b_1107297032.attrs).length - 1)]))) {
            result_1107297033 = false;
            break BeforeRet;
            }
            
            i_33554931 = addInt(i_33554931, 1);
          }
      } while (false);
    } while (false);
    }
    
  } while (false);

  return result_1107297033;

}

function eq_1090519552(a_1090519553, b_1090519554, recursive_1090519555) {
      var Temporary4;
      var Temporary5;

  var result_1090519556 = 0;

  BeforeRet: do {
    if (!((a_1090519553.kind == b_1090519554.kind))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    if (!((a_1090519553.id == b_1090519554.id))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    result_1090519556 = 3;
    if (!((a_1090519553.index == b_1090519554.index))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    if ((a_1090519553.kind == 0)) {
    if (!((a_1090519553.text == b_1090519554.text))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_1090519553.kind == 3)) {
    if (!((a_1090519553.text == b_1090519554.text))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    if (!((len_1107296867(a_1090519553) == len_1107296867(b_1090519554)))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    Label1: do {
      var i_1090519573 = 0;
      var colontmp__33554918 = 0;
      colontmp__33554918 = len_1107296867(a_1090519553);
      var i_33554919 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554919 < colontmp__33554918)) break Label3;
            i_1090519573 = i_33554919;
            if ((eq_1090519552(HEX5BHEX5D_1107296874(a_1090519553, i_1090519573), HEX5BHEX5D_1107296874(b_1090519554, i_1090519573), recursive_1090519555) == 1)) {
            result_1090519556 = 1;
            break BeforeRet;
            }
            
            i_33554919 = addInt(i_33554919, 1);
          }
      } while (false);
    } while (false);
    }
    else {
    if ((a_1090519553.kind == 4)) {
    if ((a_1090519553.dom == b_1090519554.dom)) {
    result_1090519556 = 3;
    break BeforeRet;
    }
    else {
      result_1090519556 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_1090519553.kind == 6)) {
    if (!((a_1090519553.text == b_1090519554.text))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_1090519554.kind == 5)) {
    if (!((a_1090519553.text == b_1090519554.text))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    if (!((a_1090519553.key == b_1090519554.key))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    result_1090519556 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_1090519553.class == b_1090519554.class))) Temporary5 = true; else {        Temporary5 = !(eq_603980030(a_1090519553.style, b_1090519554.style));      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = !(sameAttrs_1107297030(a_1090519553, b_1090519554));      }    if (Temporary4) {
    result_1090519556 = 2;
    break BeforeRet;
    }
    
    if (recursive_1090519555) {
    if (!((len_1107296867(a_1090519553) == len_1107296867(b_1090519554)))) {
    result_1090519556 = 1;
    break BeforeRet;
    }
    
    Label6: do {
      var i_1090519599 = 0;
      var colontmp__33554922 = 0;
      colontmp__33554922 = len_1107296867(a_1090519553);
      var i_33554923 = 0;
      Label7: do {
          Label8: while (true) {
          if (!(i_33554923 < colontmp__33554922)) break Label8;
            i_1090519599 = i_33554923;
            if (!((eq_1090519552(HEX5BHEX5D_1107296874(a_1090519553, i_1090519599), HEX5BHEX5D_1107296874(b_1090519554, i_1090519599), true) == 3))) {
            result_1090519556 = 1;
            break BeforeRet;
            }
            
            i_33554923 = addInt(i_33554923, 1);
          }
      } while (false);
    } while (false);
    }
    
    break BeforeRet;
  } while (false);

  return result_1090519556;

}

function updateStyles_1090519613(newNode_1090519614, oldNode_1090519615) {
    if (!((oldNode_1090519615.dom == null))) {
    if (!((newNode_1090519614.style == null))) {
    applyStyle_603980258(oldNode_1090519615.dom, newNode_1090519614.style);
    }
    else {
      oldNode_1090519615.dom.style = {m_type: NTI1023410225, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_1090519615.dom.className = newNode_1090519614.class;
    }
    
    oldNode_1090519615.style = newNode_1090519614.style;
    oldNode_1090519615.class = newNode_1090519614.class;

  
}

function takeOverAttr_1107296859(newNode_1107296860, oldNode_1107296861) {
    oldNode_1107296861.attrs = newNode_1107296860.attrs;

  
}

function updateAttributes_1090519642(newNode_1090519643, oldNode_1090519644) {
    if (!((oldNode_1090519644.dom == null))) {
    Label1: do {
      var k_1090519649 = null;
      var __1090519650 = null;
      Label2: do {
        var i_33554935 = 0;
        var colontmp__33554936 = 0;
        colontmp__33554936 = subInt((oldNode_1090519644.attrs).length, 2);
        var res_33554937 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(res_33554937 <= colontmp__33554936)) break Label4;
              i_33554935 = res_33554937;
              k_1090519649 = oldNode_1090519644.attrs[chckIndx(i_33554935, 0, (oldNode_1090519644.attrs).length - 1)];
              __1090519650 = oldNode_1090519644.attrs[chckIndx(addInt(i_33554935, 1), 0, (oldNode_1090519644.attrs).length - 1)];
              oldNode_1090519644.dom.removeAttribute(k_1090519649);
              res_33554937 = addInt(res_33554937, 2);
            }
        } while (false);
      } while (false);
    } while (false);
    Label5: do {
      var k_1090519651 = null;
      var v_1090519652 = null;
      Label6: do {
        var i_33554941 = 0;
        var colontmp__33554942 = 0;
        colontmp__33554942 = subInt((newNode_1090519643.attrs).length, 2);
        var res_33554943 = 0;
        Label7: do {
            Label8: while (true) {
            if (!(res_33554943 <= colontmp__33554942)) break Label8;
              i_33554941 = res_33554943;
              k_1090519651 = newNode_1090519643.attrs[chckIndx(i_33554941, 0, (newNode_1090519643.attrs).length - 1)];
              v_1090519652 = newNode_1090519643.attrs[chckIndx(addInt(i_33554941, 1), 0, (newNode_1090519643.attrs).length - 1)];
              if (!((v_1090519652 == null))) {
              oldNode_1090519644.dom.setAttribute(k_1090519651, v_1090519652);
              }
              
              res_33554943 = addInt(res_33554943, 2);
            }
        } while (false);
      } while (false);
    } while (false);
    }
    
    takeOverAttr_1107296859(newNode_1090519643, oldNode_1090519644);

  
}

function removeAllEventHandlers_1090519156(d_1090519157) {
    if (!((d_1090519157.karaxEvents == null))) {
    Label1: do {
      var i_1090519173 = 0;
      var colontmp__33554946 = 0;
      colontmp__33554946 = d_1090519157.karaxEvents.length;
      var i_33554947 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554947 < colontmp__33554946)) break Label3;
            i_1090519173 = i_33554947;
            d_1090519157.removeEventListener(d_1090519157.karaxEvents[i_1090519173]["Field0"], d_1090519157.karaxEvents[i_1090519173]["Field1"]);
            i_33554947 = addInt(i_33554947, 1);
          }
      } while (false);
    } while (false);
    }
    

  
}

function mergeEvents_1090519653(newNode_1090519654, oldNode_1090519655, kxi_1090519656) {
    var d_1090519657 = oldNode_1090519655.dom;
    if (!((d_1090519657 == null))) {
    removeAllEventHandlers_1090519156(d_1090519657);
    }
    
    oldNode_1090519655.events = newNode_1090519654.events;
    applyEvents_1090519298(oldNode_1090519655);

  
}

function addPatch_1090519662(kxi_1090519663, ka_1090519664, parenta_1090519665, currenta_1090519666, na_1090519667, oldNode_1090519668) {
    var L_1090519669 = kxi_1090519663.patchLen;
    if (((kxi_1090519663.patches).length <= L_1090519669)) {
    kxi_1090519663.patches.push({k: ka_1090519664, parent: parenta_1090519665, current: currenta_1090519666, newNode: na_1090519667, oldNode: oldNode_1090519668});;
    }
    else {
      kxi_1090519663.patches[chckIndx(L_1090519669, 0, (kxi_1090519663.patches).length - 1)].k = ka_1090519664;
      kxi_1090519663.patches[chckIndx(L_1090519669, 0, (kxi_1090519663.patches).length - 1)].parent = parenta_1090519665;
      kxi_1090519663.patches[chckIndx(L_1090519669, 0, (kxi_1090519663.patches).length - 1)].current = currenta_1090519666;
      kxi_1090519663.patches[chckIndx(L_1090519669, 0, (kxi_1090519663.patches).length - 1)].newNode = na_1090519667;
      kxi_1090519663.patches[chckIndx(L_1090519669, 0, (kxi_1090519663.patches).length - 1)].oldNode = oldNode_1090519668;
    }
    
    kxi_1090519663.patchLen = addInt(kxi_1090519663.patchLen, 1);

  
}

function diff_1090519797(newNode_1090519798, oldNode_1090519799, parent_1090519800, current_1090519801, kxi_1090519802) {
        var Temporary1;
            var Temporary6;

  BeforeRet: do {
    var result_1090519803 = eq_1090519552(newNode_1090519798, oldNode_1090519799, false);
    switch (result_1090519803) {
    case 0:
      kxi_1090519802.components.push({oldNode: oldNode_1090519799, newNode: newNode_1090519798, parent: parent_1090519800, current: current_1090519801});;
      break;
    case 3:
    case 2:
      newNode_1090519798.dom = oldNode_1090519799.dom;
      if ((result_1090519803 == 2)) {
      updateStyles_1090519613(newNode_1090519798, oldNode_1090519799);
      updateAttributes_1090519642(newNode_1090519798, oldNode_1090519799);
      if ((oldNode_1090519799.kind == 0)) {
      oldNode_1090519799.text = newNode_1090519798.text;
      oldNode_1090519799.dom.nodeValue = newNode_1090519798.text;
      }
      
      }
      
        if (!(((newNode_1090519798.events).length == 0))) Temporary1 = true; else {          Temporary1 = !(((oldNode_1090519799.events).length == 0));        }      if (Temporary1) {
      mergeEvents_1090519653(newNode_1090519798, oldNode_1090519799, kxi_1090519802);
      }
      
      var newLength_1090519822 = len_1107296867(newNode_1090519798);
      var oldLength_1090519823 = len_1107296867(oldNode_1090519799);
      if (((newLength_1090519822 == 0) && (oldLength_1090519823 == 0))) {
      break BeforeRet;
      }
      
      var minLength_1090519824 = nimMin(newLength_1090519822, oldLength_1090519823);
      if (!((oldNode_1090519799.kind == newNode_1090519798.kind))) {
      failedAssertImpl_251658296(makeNimstrLit("karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_1090519834 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(commonPrefix_1090519834 < minLength_1090519824)) break Label3;
            if ((eq_1090519552(HEX5BHEX5D_1107296874(newNode_1090519798, commonPrefix_1090519834), HEX5BHEX5D_1107296874(oldNode_1090519799, commonPrefix_1090519834), true) == 3)) {
            addPatch_1090519662(kxi_1090519802, 5, null, null, HEX5BHEX5D_1107296874(newNode_1090519798, commonPrefix_1090519834), HEX5BHEX5D_1107296874(oldNode_1090519799, commonPrefix_1090519834));
            commonPrefix_1090519834 = addInt(commonPrefix_1090519834, 1);
            }
            else {
              break Label2;
            }
            
          }
      } while (false);
      var oldPos_1090519843 = subInt(oldLength_1090519823, 1);
      var newPos_1090519844 = subInt(newLength_1090519822, 1);
      Label4: do {
          Label5: while (true) {
            if (!(commonPrefix_1090519834 <= oldPos_1090519843)) Temporary6 = false; else {              Temporary6 = (commonPrefix_1090519834 <= newPos_1090519844);            }          if (!Temporary6) break Label5;
            if ((eq_1090519552(HEX5BHEX5D_1107296874(newNode_1090519798, newPos_1090519844), HEX5BHEX5D_1107296874(oldNode_1090519799, oldPos_1090519843), true) == 3)) {
            addPatch_1090519662(kxi_1090519802, 5, null, null, HEX5BHEX5D_1107296874(newNode_1090519798, newPos_1090519844), HEX5BHEX5D_1107296874(oldNode_1090519799, oldPos_1090519843));
            oldPos_1090519843 = subInt(oldPos_1090519843, 1);
            newPos_1090519844 = subInt(newPos_1090519844, 1);
            }
            else {
              break Label4;
            }
            
          }
      } while (false);
      var pos_1090519857 = addInt(nimMin(oldPos_1090519843, newPos_1090519844), 1);
      Label7: do {
        var i_1090519862 = 0;
        var colontmp__33554905 = 0;
        colontmp__33554905 = subInt(pos_1090519857, 1);
        var res_33554906 = commonPrefix_1090519834;
        Label8: do {
            Label9: while (true) {
            if (!(res_33554906 <= colontmp__33554905)) break Label9;
              i_1090519862 = res_33554906;
              diff_1090519797(HEX5BHEX5D_1107296874(newNode_1090519798, i_1090519862), HEX5BHEX5D_1107296874(oldNode_1090519799, i_1090519862), current_1090519801, current_1090519801.childNodes[chckIndx(i_1090519862, 0, (current_1090519801.childNodes).length - 1)], kxi_1090519802);
              res_33554906 = addInt(res_33554906, 1);
            }
        } while (false);
      } while (false);
      if ((addInt(oldPos_1090519843, 1) == oldLength_1090519823)) {
      Label10: do {
        var i_1090519867 = 0;
        var res_33554909 = pos_1090519857;
        Label11: do {
            Label12: while (true) {
            if (!(res_33554909 <= newPos_1090519844)) break Label12;
              i_1090519867 = res_33554909;
              addPatch_1090519662(kxi_1090519802, 2, current_1090519801, null, HEX5BHEX5D_1107296874(newNode_1090519798, i_1090519867), null);
              res_33554909 = addInt(res_33554909, 1);
            }
        } while (false);
      } while (false);
      }
      else {
        var before_1090519868 = current_1090519801.childNodes[chckIndx(addInt(oldPos_1090519843, 1), 0, (current_1090519801.childNodes).length - 1)];
        Label13: do {
          var i_1090519873 = 0;
          var res_33554912 = pos_1090519857;
          Label14: do {
              Label15: while (true) {
              if (!(res_33554912 <= newPos_1090519844)) break Label15;
                i_1090519873 = res_33554912;
                addPatch_1090519662(kxi_1090519802, 3, current_1090519801, before_1090519868, HEX5BHEX5D_1107296874(newNode_1090519798, i_1090519873), null);
                res_33554912 = addInt(res_33554912, 1);
              }
          } while (false);
        } while (false);
      }
      
      Label16: do {
        var i_1090519878 = 0;
        var res_33554915 = pos_1090519857;
        Label17: do {
            Label18: while (true) {
            if (!(res_33554915 <= oldPos_1090519843)) break Label18;
              i_1090519878 = res_33554915;
              addPatch_1090519662(kxi_1090519104[0], 4, null, null, null, HEX5BHEX5D_1107296874(oldNode_1090519799, i_1090519878));
              addPatch_1090519662(kxi_1090519802, 1, current_1090519801, current_1090519801.childNodes[chckIndx(i_1090519878, 0, (current_1090519801.childNodes).length - 1)], null, null);
              res_33554915 = addInt(res_33554915, 1);
            }
        } while (false);
      } while (false);
      break;
    case 1:
      addPatch_1090519662(kxi_1090519104[0], 4, null, null, null, oldNode_1090519799);
      addPatch_1090519662(kxi_1090519802, 0, parent_1090519800, current_1090519801, newNode_1090519798, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_251658296(makeNimstrLit("karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}

function applyComponents_1090519893(kxi_1090519894) {
            var Temporary3;

    var i_1090519895 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1090519895 < (kxi_1090519894.components).length)) break Label2;
          var x_1090519900 = kxi_1090519894.components[chckIndx(i_1090519895, 0, (kxi_1090519894.components).length - 1)].oldNode;
          var newNode_1090519901 = kxi_1090519894.components[chckIndx(i_1090519895, 0, (kxi_1090519894.components).length - 1)].newNode;
            if (!!((x_1090519900.changedImpl == null))) Temporary3 = false; else {              Temporary3 = x_1090519900.changedImpl(x_1090519900, newNode_1090519901);            }          if (Temporary3) {
          var current_1090519906 = kxi_1090519894.components[chckIndx(i_1090519895, 0, (kxi_1090519894.components).length - 1)].current;
          var parent_1090519907 = kxi_1090519894.components[chckIndx(i_1090519895, 0, (kxi_1090519894.components).length - 1)].parent;
          x_1090519900.updatedImpl(x_1090519900, newNode_1090519901);
          var oldExpanded_1090519908 = x_1090519900.expanded;
          x_1090519900.expanded = x_1090519900.renderImpl(x_1090519900);
          x_1090519900.renderedVersion = x_1090519900.version;
          if ((oldExpanded_1090519908 == null)) {
          addPatch_1090519662(kxi_1090519104[0], 4, null, null, null, x_1090519900);
          addPatch_1090519662(kxi_1090519894, 0, parent_1090519907, current_1090519906, x_1090519900.expanded, null);
          }
          else {
            diff_1090519797(x_1090519900.expanded, oldExpanded_1090519908, parent_1090519907, current_1090519906, kxi_1090519894);
          }
          
          }
          
          i_1090519895 = addInt(i_1090519895, 1);
        }
    } while (false);
    if (kxi_1090519894.components.length < 0) { for (var i = kxi_1090519894.components.length ; i < 0 ; ++i) kxi_1090519894.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_1090519894.components.length = 0; };

  
}

function moveDom_1090519727(dest_1090519728, src_1090519729) {
    dest_1090519728.dom = src_1090519729.dom;
    src_1090519729.dom = null;
    if (!((dest_1090519728.id == null))) {
    kxi_1090519104[0].byId[dest_1090519728.id] = dest_1090519728;
    }
    
    if (!((len_1107296867(dest_1090519728) == len_1107296867(src_1090519729)))) {
    failedAssertImpl_251658296(makeNimstrLit("karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    Label1: do {
      var i_1090519745 = 0;
      var colontmp__33554957 = 0;
      colontmp__33554957 = len_1107296867(dest_1090519728);
      var i_33554958 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554958 < colontmp__33554957)) break Label3;
            i_1090519745 = i_33554958;
            moveDom_1090519727(HEX5BHEX5D_1107296874(dest_1090519728, i_1090519745), HEX5BHEX5D_1107296874(src_1090519729, i_1090519745));
            i_33554958 = addInt(i_33554958, 1);
          }
      } while (false);
    } while (false);

  
}

function HEX5BHEX5DHEX3D_1107296878(x_1107296879, idx_1107296880, y_1107296881) {
    x_1107296879.kids[chckIndx(idx_1107296880, 0, (x_1107296879.kids).length - 1)] = y_1107296881;

  
}

function applyPatch_1090519746(kxi_1090519747) {
    Label1: do {
      var i_1090519752 = 0;
      var i_33554951 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554951 < kxi_1090519747.patchLen)) break Label3;
            i_1090519752 = i_33554951;
            var p_1090519753 = nimCopy(null, kxi_1090519747.patches[chckIndx(i_1090519752, 0, (kxi_1090519747.patches).length - 1)], NTI1090519046);
            switch (p_1090519753.k) {
            case 0:
              var nn_1090519754 = toDom_1090519326(p_1090519753.newNode, true, kxi_1090519747);
              if ((p_1090519753.parent == null)) {
              replaceById_1090519539(kxi_1090519747.rootId, nn_1090519754);
              }
              else {
                if ((p_1090519753.current.parentNode == p_1090519753.parent)) {
                p_1090519753.parent.replaceChild(nn_1090519754, p_1090519753.current);
                }
                else {
                p_1090519753.parent.appendChild(nn_1090519754);
                }
                
              }
              
              break;
            case 5:
              moveDom_1090519727(p_1090519753.newNode, p_1090519753.oldNode);
              break;
            case 1:
              p_1090519753.parent.removeChild(p_1090519753.current);
              break;
            case 2:
              var nn_1090519763 = toDom_1090519326(p_1090519753.newNode, true, kxi_1090519747);
              p_1090519753.parent.appendChild(nn_1090519763);
              break;
            case 3:
              var nn_1090519764 = toDom_1090519326(p_1090519753.newNode, true, kxi_1090519747);
              p_1090519753.parent.insertBefore(nn_1090519764, p_1090519753.current);
              break;
            case 4:
              var n_1090519765 = p_1090519753.oldNode;
              if (!((n_1090519765.id == null))) {
              delete kxi_1090519747.byId[n_1090519765.id];
              }
              
              if ((n_1090519765.kind == 5)) {
              var x_1090519775 = n_1090519765;
              if (!((x_1090519775.onDetachImpl == null))) {
              x_1090519775.onDetachImpl(x_1090519775);
              }
              
              }
              
              if (!(kxi_1090519747.surpressRedraws)) {
              n_1090519765.dom = null;
              }
              
              break;
            }
            i_33554951 = addInt(i_33554951, 1);
          }
      } while (false);
    } while (false);
    kxi_1090519747.patchLen = 0;
    Label4: do {
      var i_1090519784 = 0;
      var i_33554954 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(i_33554954 < kxi_1090519747.patchLenV)) break Label6;
            i_1090519784 = i_33554954;
            var p_1090519785 = nimCopy(null, kxi_1090519747.patchesV[chckIndx(i_1090519784, 0, (kxi_1090519747.patchesV).length - 1)], NTI1090519047);
            HEX5BHEX5DHEX3D_1107296878(p_1090519785.parent, p_1090519785.pos, p_1090519785.newChild);
            if (!(!((p_1090519785.newChild.dom == null)))) {
            failedAssertImpl_251658296(makeNimstrLit("karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            i_33554954 = addInt(i_33554954, 1);
          }
      } while (false);
    } while (false);
    kxi_1090519747.patchLenV = 0;

  
}

function dodraw_1090519986(kxi_1090519987) {
  BeforeRet: do {
    if ((kxi_1090519987.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_1090519991 = {hashPart: window.location.hash};
    var newtree_1090519992 = kxi_1090519987.renderer(rdata_1090519991);
    kxi_1090519987.runCount = addInt(kxi_1090519987.runCount, 1);
    newtree_1090519992.id = kxi_1090519987.rootId;
    kxi_1090519987.toFocus = null;
    if ((kxi_1090519987.currentTree == null)) {
    var asdom_1090520001 = toDom_1090519326(newtree_1090519992, true, kxi_1090519987);
    replaceById_1090519539(kxi_1090519987.rootId, asdom_1090520001);
    }
    else {
      if (!(same_1090519480(kxi_1090519987.currentTree, document.getElementById(kxi_1090519987.rootId), 0))) {
      failedAssertImpl_251658296(makeNimstrLit("karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_1090520007 = document.getElementById(kxi_1090519987.rootId);
      diff_1090519797(newtree_1090519992, kxi_1090519987.currentTree, null, olddom_1090520007, kxi_1090519987);
    }
    
    applyComponents_1090519893(kxi_1090519987);
    applyPatch_1090519746(kxi_1090519987);
    kxi_1090519987.currentTree = newtree_1090519992;
    if (!(same_1090519480(kxi_1090519987.currentTree, document.getElementById(kxi_1090519987.rootId), 0))) {
    failedAssertImpl_251658296(makeNimstrLit("karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_1090519987.postRenderCallback == null))) {
    kxi_1090519987.postRenderCallback(rdata_1090519991);
    }
    
    if (!((kxi_1090519987.toFocus == null))) {
    kxi_1090519987.toFocus.focus();
    }
    
    kxi_1090519987.renderId = 0;
  } while (false);

  
}

function redraw_1090520045(kxi_1090520046) {
    
function HEX3Aanonymous_1090520047() {
        dodraw_1090519986(kxi_1090520046);

      
    }

    if ((kxi_1090520046.renderId == 0)) {
    kxi_1090520046.renderId = window.requestAnimationFrame(HEX3Aanonymous_1090520047);
    }
    

  
}

function reprEnum(e_50334601, typ_50334602) {
  var result_50334603 = [];

    var tmp_50334604 = false;
    var item_50334605 = typ_50334602.node.sons[e_50334601];
    tmp_50334604 = item_50334605 !== undefined
    if (tmp_50334604) {
    result_50334603 = nimCopy(null, makeNimstrLit(item_50334605.name), NTI50331655);
    }
    else {
      result_50334603 = nimCopy(null, (HEX24_369098755(e_50334601) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI50331655);
    }
    

  return result_50334603;

}

function HEX3DHEX3D_1291847714(x_1291847716, y_1291847717) {
  var result_1291847718 = false;

  BeforeRet: do {
    var sameObject_1291847726 = false;
    sameObject_1291847726 = x_1291847716 === y_1291847717
    if (sameObject_1291847726) {
    result_1291847718 = true;
    break BeforeRet;
    }
    
    if (!(((x_1291847716).length == (y_1291847717).length))) {
    result_1291847718 = false;
    break BeforeRet;
    }
    
    Label1: do {
      var i_1291847740 = 0;
      var colontmp__33554968 = 0;
      colontmp__33554968 = subInt((x_1291847716).length, 1);
      var res_33554969 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_33554969 <= colontmp__33554968)) break Label3;
            i_1291847740 = res_33554969;
            if (!(HEX3DHEX3D_1291847697(x_1291847716[chckIndx(i_1291847740, 0, (x_1291847716).length - 1)], y_1291847717[chckIndx(i_1291847740, 0, (y_1291847717).length - 1)]))) {
            result_1291847718 = false;
            break BeforeRet;
            }
            
            res_33554969 = addInt(res_33554969, 1);
          }
      } while (false);
    } while (false);
    result_1291847718 = true;
    break BeforeRet;
  } while (false);

  return result_1291847718;

}

function len_1291847785(t_1291847788) {
  var result_1291847789 = 0;

    result_1291847789 = t_1291847788.counter;

  return result_1291847789;

}

function isFilled_1157627935(hcode_1157627936) {
  var result_1157627937 = false;

    result_1157627937 = !((hcode_1157627936 == 0));

  return result_1157627937;

}

function imul_1174405410(a_1174405411, b_1174405412) {
  var result_1174405413 = 0;

    var mask_1174405414 = 65535;
    var aHi_1174405419 = ((a_1174405411 >>> 16) & mask_1174405414);
    var aLo_1174405420 = (a_1174405411 & mask_1174405414);
    var bHi_1174405425 = ((b_1174405412 >>> 16) & mask_1174405414);
    var bLo_1174405426 = (b_1174405412 & mask_1174405414);
    result_1174405413 = ((((aLo_1174405420 * bLo_1174405426) >>> 0) + (((((aHi_1174405419 * bLo_1174405426) >>> 0) + ((aLo_1174405420 * bHi_1174405425) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1174405413;

}

function rotl32_1174405431(x_1174405432, r_1174405433) {
  var result_1174405434 = 0;

    result_1174405434 = ((x_1174405432 << r_1174405433) | (x_1174405432 >>> subInt(32, r_1174405433)));

  return result_1174405434;

}

function murmurHash_1174405443(x_1174405444) {
  var result_1174405445 = 0;

  BeforeRet: do {
    var size_1174405454 = (x_1174405444).length;
    var stepSize_1174405455 = 4;
    var n_1174405456 = divInt(size_1174405454, stepSize_1174405455);
    var h1_1174405457 = 0;
    var i_1174405458 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1174405458 < mulInt(n_1174405456, stepSize_1174405455))) break Label2;
          var k1_1174405459 = 0;
          var j_1174405460 = stepSize_1174405455;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_1174405460)) break Label4;
                j_1174405460 = subInt(j_1174405460, 1);
                k1_1174405459 = ((k1_1174405459 << 8) | x_1174405444[chckIndx(addInt(i_1174405458, j_1174405460), 0, (x_1174405444).length - 1)]);
              }
          } while (false);
          i_1174405458 = addInt(i_1174405458, stepSize_1174405455);
          k1_1174405459 = imul_1174405410(k1_1174405459, 3432918353);
          k1_1174405459 = rotl32_1174405431(k1_1174405459, 15);
          k1_1174405459 = imul_1174405410(k1_1174405459, 461845907);
          h1_1174405457 = (h1_1174405457 ^ k1_1174405459);
          h1_1174405457 = rotl32_1174405431(h1_1174405457, 13);
          h1_1174405457 = ((((h1_1174405457 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_1174405477 = 0;
    var rem_1174405478 = modInt(size_1174405454, stepSize_1174405455);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_1174405478)) break Label6;
          rem_1174405478 = subInt(rem_1174405478, 1);
          k1_1174405477 = ((k1_1174405477 << 8) | x_1174405444[chckIndx(addInt(i_1174405458, rem_1174405478), 0, (x_1174405444).length - 1)]);
        }
    } while (false);
    k1_1174405477 = imul_1174405410(k1_1174405477, 3432918353);
    k1_1174405477 = rotl32_1174405431(k1_1174405477, 15);
    k1_1174405477 = imul_1174405410(k1_1174405477, 461845907);
    h1_1174405457 = (h1_1174405457 ^ k1_1174405477);
    h1_1174405457 = (h1_1174405457 ^ size_1174405454);
    h1_1174405457 = (h1_1174405457 ^ (h1_1174405457 >>> 16));
    h1_1174405457 = imul_1174405410(h1_1174405457, 2246822507);
    h1_1174405457 = (h1_1174405457 ^ (h1_1174405457 >>> 13));
    h1_1174405457 = imul_1174405410(h1_1174405457, 3266489909);
    h1_1174405457 = (h1_1174405457 ^ (h1_1174405457 >>> 16));
    result_1174405445 = (h1_1174405457 | 0);
    break BeforeRet;
  } while (false);

  return result_1174405445;

}

function hash_1174405542(x_1174405543) {
  var result_1174405544 = 0;

    result_1174405544 = murmurHash_1174405443((x_1174405543.slice(0, (x_1174405543).length - 1 + 1)));

  return result_1174405544;

}

function nextTry_1157627938(h_1157627939, maxHash_1157627940) {
  var result_1157627941 = 0;

    result_1157627941 = (addInt(h_1157627939, 1) & maxHash_1157627940);

  return result_1157627941;

}

function rawGet_1291845992(t_1291845995, key_1291845996, hc_1291845997, hc_1291845997_Idx) {
            var Temporary3;

  var result_1291845998 = 0;

  BeforeRet: do {
    hc_1291845997[hc_1291845997_Idx] = hash_1174405542(key_1291845996);
    if ((hc_1291845997[hc_1291845997_Idx] == 0)) {
    hc_1291845997[hc_1291845997_Idx] = 314159265;
    }
    
    if (((t_1291845995.data).length == 0)) {
    result_1291845998 = -1;
    break BeforeRet;
    }
    
    var h_1291846049 = (hc_1291845997[hc_1291845997_Idx] & (t_1291845995.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1291845995.data[chckIndx(h_1291846049, 0, (t_1291845995.data).length - 1)].Field0)) break Label2;
            if (!(t_1291845995.data[chckIndx(h_1291846049, 0, (t_1291845995.data).length - 1)].Field0 == hc_1291845997[hc_1291845997_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1291845995.data[chckIndx(h_1291846049, 0, (t_1291845995.data).length - 1)].Field2, key_1291845996);            }          if (Temporary3) {
          result_1291845998 = h_1291846049;
          break BeforeRet;
          }
          
          h_1291846049 = nextTry_1157627938(h_1291846049, (t_1291845995.data).length - 1);
        }
    } while (false);
    result_1291845998 = subInt(-1, h_1291846049);
  } while (false);

  return result_1291845998;

}

function hasKey_1291848209(t_1291848212, key_1291848213) {
  var result_1291848214 = false;

    var hc_1291848215 = [0];
    result_1291848214 = (0 <= rawGet_1291845992(t_1291848212, key_1291848213, hc_1291848215, 0));

  return result_1291848214;

}

function rawGet_1291848290(t_1291848293, key_1291848294, hc_1291848295, hc_1291848295_Idx) {
            var Temporary3;

  var result_1291848296 = 0;

  BeforeRet: do {
    hc_1291848295[hc_1291848295_Idx] = hash_1174405542(key_1291848294);
    if ((hc_1291848295[hc_1291848295_Idx] == 0)) {
    hc_1291848295[hc_1291848295_Idx] = 314159265;
    }
    
    if (((t_1291848293.data).length == 0)) {
    result_1291848296 = -1;
    break BeforeRet;
    }
    
    var h_1291848347 = (hc_1291848295[hc_1291848295_Idx] & (t_1291848293.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1291848293.data[chckIndx(h_1291848347, 0, (t_1291848293.data).length - 1)].Field0)) break Label2;
            if (!(t_1291848293.data[chckIndx(h_1291848347, 0, (t_1291848293.data).length - 1)].Field0 == hc_1291848295[hc_1291848295_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1291848293.data[chckIndx(h_1291848347, 0, (t_1291848293.data).length - 1)].Field2, key_1291848294);            }          if (Temporary3) {
          result_1291848296 = h_1291848347;
          break BeforeRet;
          }
          
          h_1291848347 = nextTry_1157627938(h_1291848347, (t_1291848293.data).length - 1);
        }
    } while (false);
    result_1291848296 = subInt(-1, h_1291848347);
  } while (false);

  return result_1291848296;

}

function raiseKeyError_1275070183(key_1275070185) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_1275070185 || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291848283(t_1291848286, key_1291848287) {
  var result_1291848288 = null;
  var result_1291848288_Idx = 0;

    var hcHEX60gensym89_1291848289 = [0];
    var indexHEX60gensym89_1291848510 = rawGet_1291848290(t_1291848286, key_1291848287, hcHEX60gensym89_1291848289, 0);
    if ((0 <= indexHEX60gensym89_1291848510)) {
    result_1291848288 = t_1291848286.data[chckIndx(indexHEX60gensym89_1291848510, 0, (t_1291848286.data).length - 1)]; result_1291848288_Idx = "Field3";
    }
    else {
    raiseKeyError_1275070183(key_1291848287);
    }
    

  return [result_1291848288, result_1291848288_Idx];

}

function HEX3DHEX3D_1291847697(a_1291847698, b_1291847699) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
          var Temporary12;
          var Temporary13;
          var Temporary15;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;

  var result_1291847700 = false;

  BeforeRet: do {
    if ((a_1291847698 == null)) {
    if ((b_1291847699 == null)) {
    result_1291847700 = true;
    break BeforeRet;
    }
    
    result_1291847700 = false;
    break BeforeRet;
    }
    else {
      if ((b_1291847699 == null)) Temporary1 = true; else {        Temporary1 = !((a_1291847698.kind == b_1291847699.kind));      }    if (Temporary1) {
    result_1291847700 = false;
    break BeforeRet;
    }
    else {
      switch (a_1291847698.kind) {
      case 4:
        var Temporary2 = a_1291847698;
        if (ConstSet4[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1291845635)); }
        var Temporary3 = b_1291847699;
        if (ConstSet5[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1291845635)); }
        result_1291847700 = eqStrings(Temporary2.str, Temporary3.str);
        break;
      case 2:
        var Temporary4 = a_1291847698;
        if (ConstSet6[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1291845635)); }
        var Temporary5 = b_1291847699;
        if (ConstSet7[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1291845635)); }
        result_1291847700 = (Temporary4.num == Temporary5.num);
        break;
      case 3:
        var Temporary6 = a_1291847698;
        if (ConstSet8[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1291845635)); }
        var Temporary7 = b_1291847699;
        if (ConstSet9[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1291845635)); }
        result_1291847700 = (Temporary6.fnum == Temporary7.fnum);
        break;
      case 1:
        var Temporary8 = a_1291847698;
        if (ConstSet10[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1291845635)); }
        var Temporary9 = b_1291847699;
        if (ConstSet11[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1291845635)); }
        result_1291847700 = (Temporary8.bval == Temporary9.bval);
        break;
      case 0:
        result_1291847700 = true;
        break;
      case 6:
        var Temporary10 = a_1291847698;
        if (ConstSet12[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1291845635)); }
        var Temporary11 = b_1291847699;
        if (ConstSet13[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1291845635)); }
        result_1291847700 = HEX3DHEX3D_1291847714(Temporary10.elems, Temporary11.elems);
        break;
      case 5:
          var Temporary12 = a_1291847698;
          if (ConstSet14[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1291845635)); }
          var Temporary13 = b_1291847699;
          if (ConstSet15[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI1291845635)); }
        if (!((len_1291847785(Temporary12.fields) == len_1291847785(Temporary13.fields)))) {
        result_1291847700 = false;
        break BeforeRet;
        }
        
        Label14: do {
          var key_1291848167 = [];
          var val_1291848168 = null;
          var colontmp__33554961 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary15 = a_1291847698;
          if (ConstSet16[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1291845635)); }
          colontmp__33554961 = nimCopy(colontmp__33554961, Temporary15.fields, NTI1291845646);
          var L_33554963 = len_1291847785(colontmp__33554961);
          if ((0 < colontmp__33554961.counter)) {
          var h_33554964 = colontmp__33554961.first;
          Label16: do {
              Label17: while (true) {
              if (!(0 <= h_33554964)) break Label17;
                var nxt_33554966 = colontmp__33554961.data[chckIndx(h_33554964, 0, (colontmp__33554961.data).length - 1)].Field1;
                if (isFilled_1157627935(colontmp__33554961.data[chckIndx(h_33554964, 0, (colontmp__33554961.data).length - 1)].Field0)) {
                key_1291848167 = colontmp__33554961.data[chckIndx(h_33554964, 0, (colontmp__33554961.data).length - 1)].Field2;
                val_1291848168 = colontmp__33554961.data[chckIndx(h_33554964, 0, (colontmp__33554961.data).length - 1)].Field3;
                  var Temporary18 = b_1291847699;
                  if (ConstSet17[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1291845635)); }
                if (!(hasKey_1291848209(Temporary18.fields, key_1291848167))) {
                result_1291847700 = false;
                break BeforeRet;
                }
                
                  var Temporary19 = b_1291847699;
                  if (ConstSet18[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI1291845635)); }
                if (!(HEX3DHEX3D_1291847697((Temporary20 = HEX5BHEX5D_1291848283(Temporary19.fields, key_1291848167), Temporary20)[0][Temporary20[1]], val_1291848168))) {
                result_1291847700 = false;
                break BeforeRet;
                }
                
                if (!((len_1291847785(colontmp__33554961) == L_33554963))) {
                failedAssertImpl_251658296(makeNimstrLit("tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_33554964 = nxt_33554966;
              }
          } while (false);
          }
          
        } while (false);
        result_1291847700 = true;
        break;
      }
    }
    }
  } while (false);

  return result_1291847700;

}

function invalidFormatString_654313549() {
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI50332341, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_956301313(c_956301314) {
  var result_956301315 = 0;

    if ((ConstSet23[c_956301314] != undefined)) {
    result_956301315 = chckRange(addInt(c_956301314, 32), 0, 255);
    }
    else {
      result_956301315 = c_956301314;
    }
    

  return result_956301315;

}

function nsuCmpIgnoreStyle(a_654311614, b_654311615) {
          var Temporary7;
          var Temporary8;

  var result_654311616 = 0;

  BeforeRet: do {
    var aLenHEX60gensym25_654311625 = (a_654311614).length;
    var bLenHEX60gensym25_654311626 = (b_654311615).length;
    var iHEX60gensym25_654311627 = 0;
    var jHEX60gensym25_654311628 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: do {
              Label4: while (true) {
              if (!((iHEX60gensym25_654311627 < aLenHEX60gensym25_654311625) && (a_654311614[iHEX60gensym25_654311627] == 95))) break Label4;
                iHEX60gensym25_654311627 += 1;
              }
          } while (false);
          Label5: do {
              Label6: while (true) {
              if (!((jHEX60gensym25_654311628 < bLenHEX60gensym25_654311626) && (b_654311615[jHEX60gensym25_654311628] == 95))) break Label6;
                jHEX60gensym25_654311628 += 1;
              }
          } while (false);
          if ((iHEX60gensym25_654311627 < aLenHEX60gensym25_654311625)) {
          Temporary7 = toLowerAscii_956301313(a_654311614[iHEX60gensym25_654311627]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym25_654311637 = Temporary7;
          if ((jHEX60gensym25_654311628 < bLenHEX60gensym25_654311626)) {
          Temporary8 = toLowerAscii_956301313(b_654311615[jHEX60gensym25_654311628]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym25_654311638 = Temporary8;
          result_654311616 = (aaHEX60gensym25_654311637 - bbHEX60gensym25_654311638);
          if (!((result_654311616 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym25_654311625 <= iHEX60gensym25_654311627)) {
          if ((bLenHEX60gensym25_654311626 <= jHEX60gensym25_654311628)) {
          result_654311616 = 0;
          break BeforeRet;
          }
          
          result_654311616 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym25_654311626 <= jHEX60gensym25_654311628)) {
          result_654311616 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym25_654311627 += 1;
          jHEX60gensym25_654311628 += 1;
        }
    } while (false);
  } while (false);

  return result_654311616;

}

function findNormalized_654313537(x_654313538, inArray_654313539) {
  var result_654313540 = 0;

  BeforeRet: do {
    var i_654313541 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313541 < (inArray_654313539).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_654313538, inArray_654313539[chckIndx(i_654313541, 0, (inArray_654313539).length - 1)]) == 0)) {
          result_654313540 = i_654313541;
          break BeforeRet;
          }
          
          i_654313541 = addInt(i_654313541, 2);
        }
    } while (false);
    result_654313540 = -1;
    break BeforeRet;
  } while (false);

  return result_654313540;

}

function substr_50335122(s_50335123, first_50335124, last_50335125) {
  var result_50335126 = [];

    var first_50335127 = nimMax(first_50335124, 0);
    var L_50335128 = nimMax(addInt(subInt(nimMin(last_50335125, (s_50335123).length - 1), first_50335127), 1), 0);
    result_50335126 = nimCopy(null, mnewString(chckRange(L_50335128, 0, 2147483647)), NTI50331655);
    Label1: do {
      var i_50335133 = 0;
      var colontmp__1107296513 = 0;
      colontmp__1107296513 = subInt(L_50335128, 1);
      var res_1107296514 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_1107296514 <= colontmp__1107296513)) break Label3;
            i_50335133 = res_1107296514;
            result_50335126[chckIndx(i_50335133, 0, (result_50335126).length - 1)] = s_50335123[chckIndx(addInt(i_50335133, first_50335127), 0, (s_50335123).length - 1)];
            res_1107296514 = addInt(res_1107296514, 1);
          }
      } while (false);
    } while (false);

  return result_50335126;

}

function nsuAddf(s_654313552, s_654313552_Idx, formatstr_654313553, a_654313554) {
                  var Temporary5;
            var Temporary6;
              var Temporary7;
            var Temporary10;
              var Temporary11;
                var Temporary12;
                  var Temporary15;
              var Temporary16;

    var i_654313556 = 0;
    var num_654313557 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313556 < (formatstr_654313553).length)) break Label2;
          if (((formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)] == 36) && (addInt(i_654313556, 1) < (formatstr_654313553).length))) {
          switch (formatstr_654313553[chckIndx(addInt(i_654313556, 1), 0, (formatstr_654313553).length - 1)]) {
          case 35:
            if (((a_654313554).length - 1 < num_654313557)) {
            invalidFormatString_654313549();
            }
            
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(num_654313557, 0, (a_654313554).length - 1)]);;
            i_654313556 = addInt(i_654313556, 2);
            num_654313557 = addInt(num_654313557, 1);
            break;
          case 36:
            addChar(s_654313552[s_654313552_Idx], 36);;
            i_654313556 = addInt(i_654313556, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_654313573 = 0;
            i_654313556 = addInt(i_654313556, 1);
            var negative_654313578 = (formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)] == 45);
            if (negative_654313578) {
            i_654313556 = addInt(i_654313556, 1);
            }
            
            Label3: do {
                Label4: while (true) {
                  if (!(i_654313556 < (formatstr_654313553).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet20[formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_654313573 = subInt(addInt(mulInt(j_654313573, 10), formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)]), 48);
                  i_654313556 = addInt(i_654313556, 1);
                }
            } while (false);
            if (!(negative_654313578)) {
            Temporary6 = subInt(j_654313573, 1);
            }
            else {
            Temporary6 = subInt((a_654313554).length, j_654313573);
            }
            
            var idx_654313601 = Temporary6;
              if ((idx_654313601 < 0)) Temporary7 = true; else {                Temporary7 = ((a_654313554).length - 1 < idx_654313601);              }            if (Temporary7) {
            invalidFormatString_654313549();
            }
            
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(idx_654313601, 0, (a_654313554).length - 1)]);;
            break;
          case 123:
            var j_654313605 = addInt(i_654313556, 2);
            var k_654313606 = 0;
            var negative_654313607 = (formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)] == 45);
            if (negative_654313607) {
            j_654313605 = addInt(j_654313605, 1);
            }
            
            var isNumber_654313612 = 0;
            Label8: do {
                Label9: while (true) {
                if (!((j_654313605 < (formatstr_654313553).length) && !((ConstSet21[formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)]] != undefined)))) break Label9;
                  if ((ConstSet22[formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)]] != undefined)) {
                  k_654313606 = subInt(addInt(mulInt(k_654313606, 10), formatstr_654313553[chckIndx(j_654313605, 0, (formatstr_654313553).length - 1)]), 48);
                  if ((isNumber_654313612 == 0)) {
                  isNumber_654313612 = 1;
                  }
                  
                  }
                  else {
                    isNumber_654313612 = -1;
                  }
                  
                  j_654313605 = addInt(j_654313605, 1);
                }
            } while (false);
            if ((isNumber_654313612 == 1)) {
            if (!(negative_654313607)) {
            Temporary10 = subInt(k_654313606, 1);
            }
            else {
            Temporary10 = subInt((a_654313554).length, k_654313606);
            }
            
            var idx_654313634 = Temporary10;
              if ((idx_654313634 < 0)) Temporary11 = true; else {                Temporary11 = ((a_654313554).length - 1 < idx_654313634);              }            if (Temporary11) {
            invalidFormatString_654313549();
            }
            
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(idx_654313634, 0, (a_654313554).length - 1)]);;
            }
            else {
              var x_654313638 = findNormalized_654313537(substr_50335122(formatstr_654313553, addInt(i_654313556, 2), subInt(j_654313605, 1)), a_654313554);
                if (!(0 <= x_654313638)) Temporary12 = false; else {                  Temporary12 = (x_654313638 < (a_654313554).length - 1);                }              if (Temporary12) {
              s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(addInt(x_654313638, 1), 0, (a_654313554).length - 1)]);;
              }
              else {
              invalidFormatString_654313549();
              }
              
            }
            
            i_654313556 = addInt(j_654313605, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_654313642 = addInt(i_654313556, 1);
            Label13: do {
                Label14: while (true) {
                  if (!(j_654313642 < (formatstr_654313553).length)) Temporary15 = false; else {                    Temporary15 = (ConstSet24[formatstr_654313553[chckIndx(j_654313642, 0, (formatstr_654313553).length - 1)]] != undefined);                  }                if (!Temporary15) break Label14;
                  j_654313642 = addInt(j_654313642, 1);
                }
            } while (false);
            var x_654313651 = findNormalized_654313537(substr_50335122(formatstr_654313553, addInt(i_654313556, 1), subInt(j_654313642, 1)), a_654313554);
              if (!(0 <= x_654313651)) Temporary16 = false; else {                Temporary16 = (x_654313651 < (a_654313554).length - 1);              }            if (Temporary16) {
            s_654313552[s_654313552_Idx].push.apply(s_654313552[s_654313552_Idx], a_654313554[chckIndx(addInt(x_654313651, 1), 0, (a_654313554).length - 1)]);;
            }
            else {
            invalidFormatString_654313549();
            }
            
            i_654313556 = j_654313642;
            break;
          default: 
            invalidFormatString_654313549();
            break;
          }
          }
          else {
            addChar(s_654313552[s_654313552_Idx], formatstr_654313553[chckIndx(i_654313556, 0, (formatstr_654313553).length - 1)]);;
            i_654313556 = addInt(i_654313556, 1);
          }
          
        }
    } while (false);

  
}

function nsuFormatOpenArray(formatstr_654313660, a_654313661) {
  var result_654313662 = [[]];

    result_654313662[0] = nimCopy(null, mnewString(0), NTI50331655);
    nsuAddf(result_654313662, 0, formatstr_654313660, a_654313661);

  return result_654313662[0];

}

function addQuoted_1291851118(s_1291851120, s_1291851120_Idx, x_1291851121) {
    s_1291851120[s_1291851120_Idx].push.apply(s_1291851120[s_1291851120_Idx], reprEnum(x_1291851121, NTI1291845635));;

  
}

function collectionToString_1291851086(x_1291851088, prefix_1291851089, separator_1291851090, suffix_1291851091) {
  var result_1291851092 = [[]];

    result_1291851092[0] = nimCopy(null, prefix_1291851089, NTI50331655);
    var firstElement_1291851093 = true;
    Label1: do {
      var value_1291851114 = 0;
      var i_33554986 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33554986 <= 6)) break Label3;
            if ((x_1291851088[i_33554986] != undefined)) {
            value_1291851114 = i_33554986;
            if (firstElement_1291851093) {
            firstElement_1291851093 = false;
            }
            else {
            result_1291851092[0].push.apply(result_1291851092[0], separator_1291851090);;
            }
            
            addQuoted_1291851118(result_1291851092, 0, value_1291851114);
            }
            
            i_33554986 += 1;
          }
      } while (false);
    } while (false);
    result_1291851092[0].push.apply(result_1291851092[0], suffix_1291851091);;

  return result_1291851092[0];

}

function HEX24_1291851082(x_1291851084) {
  var result_1291851085 = [];

    result_1291851085 = nimCopy(null, collectionToString_1291851086(x_1291851084, makeNimstrLit("{"), makeNimstrLit(", "), makeNimstrLit("}")), NTI50331655);

  return result_1291851085;

}

function initFromJson_1728053515(dst_1728053517, dst_1728053517_Idx, jsonNode_1728053518, jsonPath_1728053519, jsonPath_1728053519_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1291847697(jsonNode_1728053518, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_1728053519[jsonPath_1728053519_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet19[jsonNode_1728053518.kind] != undefined))) {
    var msgHEX60gensym31_1728053536 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet25), nimCopy(null, jsonPath_1728053519[jsonPath_1728053519_Idx], NTI50331655), reprEnum(jsonNode_1728053518.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym31_1728053536, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1728053518;
    if (ConstSet26[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
    dst_1728053517[dst_1728053517_Idx] = Temporary1.num;

  
}

function getOrDefault_1291849046(t_1291849049, key_1291849050) {
  var result_1291849051 = null;

    var hcHEX60gensym58_1291849054 = [0];
    var indexHEX60gensym58_1291849061 = rawGet_1291848290(t_1291849049, key_1291849050, hcHEX60gensym58_1291849054, 0);
    if ((0 <= indexHEX60gensym58_1291849061)) {
    result_1291849051 = t_1291849049.data[chckIndx(indexHEX60gensym58_1291849061, 0, (t_1291849049.data).length - 1)].Field3;
    }
    

  return result_1291849051;

}

function getOrDefault_1291849148(node_1291849149, key_1291849150) {
      var Temporary1;
    var Temporary2;

  var result_1291849151 = null;

      if (!!((node_1291849149 == null))) Temporary1 = false; else {        Temporary1 = (node_1291849149.kind == 5);      }    if (Temporary1) {
    var Temporary2 = node_1291849149;
    if (ConstSet27[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1291845635)); }
    result_1291849151 = getOrDefault_1291849046(Temporary2.fields, key_1291849150);
    }
    

  return result_1291849151;

}

function initFromJson_1291851003(dst_1291851004, dst_1291851004_Idx, jsonNode_1291851005, jsonPath_1291851006, jsonPath_1291851006_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1291847697(jsonNode_1291851005, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_1291851006[jsonPath_1291851006_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet28[jsonNode_1291851005.kind] != undefined))) {
    var msgHEX60gensym98_1291851139 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet29), nimCopy(null, jsonPath_1291851006[jsonPath_1291851006_Idx], NTI50331655), reprEnum(jsonNode_1291851005.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym98_1291851139, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1291851005.kind == 0)) {
    dst_1291851004[dst_1291851004_Idx] = nimCopy(null, [], NTI50331655);
    }
    else {
      var Temporary1 = jsonNode_1291851005;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
      dst_1291851004[dst_1291851004_Idx] = nimCopy(null, Temporary1.str, NTI50331655);
    }
    

  
}

function initFromJson_1728053496(dst_1728053498, jsonNode_1728053499, jsonPath_1728053500, jsonPath_1728053500_Idx) {
    var originalJsonPathLen_1728053502 = (jsonPath_1728053500[jsonPath_1728053500_Idx]).length;
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".id"));;
    initFromJson_1728053515(dst_1728053498, "id", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("id")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".corpus_id"));;
    initFromJson_1728053515(dst_1728053498, "corpus_id", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("corpus_id")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".firstname"));;
    initFromJson_1291851003(dst_1728053498, "firstname", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("firstname")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".lastname"));;
    initFromJson_1291851003(dst_1728053498, "lastname", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("lastname")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".email"));;
    initFromJson_1291851003(dst_1728053498, "email", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("email")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".role_id"));;
    initFromJson_1728053515(dst_1728053498, "role_id", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("role_id")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".role"));;
    initFromJson_1291851003(dst_1728053498, "role", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("role")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".password"));;
    initFromJson_1291851003(dst_1728053498, "password", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("password")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".active"));;
    initFromJson_1728053515(dst_1728053498, "active", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("active")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".token"));;
    initFromJson_1291851003(dst_1728053498, "token", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("token")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));
    jsonPath_1728053500[jsonPath_1728053500_Idx].push.apply(jsonPath_1728053500[jsonPath_1728053500_Idx], makeNimstrLit(".apiKey"));;
    initFromJson_1291851003(dst_1728053498, "apiKey", getOrDefault_1291849148(jsonNode_1728053499, makeNimstrLit("apiKey")), jsonPath_1728053500, jsonPath_1728053500_Idx);
    (jsonPath_1728053500[jsonPath_1728053500_Idx].length = chckRange(originalJsonPathLen_1728053502, 0, 2147483647));

  
}

function to_33554719(node_33554722) {
  var result_33554724 = [({id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []})];

    var jsonPath_33554725 = [[]];
    initFromJson_1728053496(result_33554724[0], node_33554722, jsonPath_33554725, 0);

  return result_33554724[0];

}

function HEX5BHEX5D_1291848688(node_1291848689, name_1291848690) {
    var Temporary1;
    var Temporary2;

  var result_1291848691 = null;

    if (!(!((node_1291848689 == null)))) {
    failedAssertImpl_251658296(makeNimstrLit("json.nim(513, 9) `not isNil(node)` "));
    }
    
    if (!((node_1291848689.kind == 5))) {
    failedAssertImpl_251658296(makeNimstrLit("json.nim(514, 9) `node.kind == JObject` "));
    }
    
    var Temporary1 = node_1291848689;
    if (ConstSet31[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
    result_1291848691 = (Temporary2 = HEX5BHEX5D_1291848283(Temporary1.fields, name_1291848690), Temporary2)[0][Temporary2[1]];

  return result_1291848691;

}

function getVarType_1291850925(x_1291850926, isRawNumber_1291850927, isRawNumber_1291850927_Idx) {
        var Temporary1;

  var result_1291850928 = 0;

  BeforeRet: do {
    result_1291850928 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1291850926)))) {
    case "[object Array]":
      result_1291850928 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1291850928 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1291850926)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1291850926) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1291850926)) {
      result_1291850928 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1291850927[isRawNumber_1291850927_Idx] = true;
        result_1291850928 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1291850928 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1291850928 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1291850928 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1291850928 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_251658296(makeNimstrLit("json.nim(980, 18) `false` "));
      }
      
      break;
    }
  } while (false);

  return result_1291850928;

}

function newJArray_1291845755() {
  var result_1291845756 = null;

    result_1291845756 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1291845756;

}

function len_1291850946(x_1291850947) {
  var result_1291850948 = 0;

          result_1291850948 = x_1291850947.length;
    

  return result_1291850948;

}

function add_1291845854(father_1291845855, child_1291845856) {
    var Temporary1;

    if (!((father_1291845855.kind == 6))) {
    failedAssertImpl_251658296(makeNimstrLit("json.nim(302, 10) `father.kind == JArray` "));
    }
    
    var Temporary1 = father_1291845855;
    if (ConstSet32[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
    Temporary1.elems.push(child_1291845856);;

  
}

function nextPowerOfTwo_687866059(x_687866060) {
  var result_687866061 = 0;

    result_687866061 = (x_687866060 - 1);
    result_687866061 = (result_687866061 | (result_687866061 >> 16));
    result_687866061 = (result_687866061 | (result_687866061 >> 8));
    result_687866061 = (result_687866061 | (result_687866061 >> 4));
    result_687866061 = (result_687866061 | (result_687866061 >> 2));
    result_687866061 = (result_687866061 | (result_687866061 >> 1));
    result_687866061 += (1 + ((x_687866060 <= 0) ? 1 : 0));

  return result_687866061;

}

function slotsNeeded_1157627946(count_1157627947) {
  var result_1157627948 = 0;

    result_1157627948 = nextPowerOfTwo_687866059(addInt(divInt(mulInt(count_1157627947, 3), 2), 4));

  return result_1157627948;

}

function initOrderedTable_1291845726(initialSize_1291845729) {
  var result_1291845730 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1291845732 = slotsNeeded_1157627946(chckRange(initialSize_1291845729, 0, 2147483647));
    result_1291845730.counter = 0;
    result_1291845730.data = new Array(chckRange(correctSizeHEX60gensym0_1291845732, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1291845732, 0, 2147483647) ; ++i) { result_1291845730.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1291845730.first = -1;
    result_1291845730.last = -1;

  return result_1291845730;

}

function newJObject_1291845724() {
  var result_1291845725 = null;

    result_1291845725 = {kind: 5, fields: initOrderedTable_1291845726(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1291845725;

}

function mustRehash_1291846328(t_1291846330) {
  var result_1291846331 = false;

    if (!((t_1291846330.counter < (t_1291846330.data).length))) {
    failedAssertImpl_251658296(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1291846331 = ((mulInt((t_1291846330.data).length, 2) < mulInt(t_1291846330.counter, 3)) || (subInt((t_1291846330.data).length, t_1291846330.counter) < 4));

  return result_1291846331;

}

function rawInsert_1291846906(t_1291846909, data_1291846910, data_1291846910_Idx, key_1291846911, val_1291846912, hc_1291846913, h_1291846914) {
    data_1291846910[data_1291846910_Idx][chckIndx(h_1291846914, 0, (data_1291846910[data_1291846910_Idx]).length - 1)].Field2 = nimCopy(null, key_1291846911, NTI50331655);
    data_1291846910[data_1291846910_Idx][chckIndx(h_1291846914, 0, (data_1291846910[data_1291846910_Idx]).length - 1)].Field3 = val_1291846912;
    data_1291846910[data_1291846910_Idx][chckIndx(h_1291846914, 0, (data_1291846910[data_1291846910_Idx]).length - 1)].Field0 = hc_1291846913;
    data_1291846910[data_1291846910_Idx][chckIndx(h_1291846914, 0, (data_1291846910[data_1291846910_Idx]).length - 1)].Field1 = -1;
    if ((t_1291846909.first < 0)) {
    t_1291846909.first = h_1291846914;
    }
    
    if ((0 <= t_1291846909.last)) {
    data_1291846910[data_1291846910_Idx][chckIndx(t_1291846909.last, 0, (data_1291846910[data_1291846910_Idx]).length - 1)].Field1 = h_1291846914;
    }
    
    t_1291846909.last = h_1291846914;

  
}

function enlarge_1291846491(t_1291846494) {
          var Temporary6;
          var Temporary7;

    var n_1291846497 = [];
    n_1291846497 = new Array(chckRange(mulInt((t_1291846494.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846494.data).length, 2), 0, 2147483647) ; ++i) { n_1291846497[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1291846549 = t_1291846494.first;
    t_1291846494.first = -1;
    t_1291846494.last = -1;
    var Temporary1 = t_1291846494.data; t_1291846494.data = n_1291846497; n_1291846497 = Temporary1;    Label2: do {
        Label3: while (true) {
        if (!(0 <= h_1291846549)) break Label3;
          var nxt_1291846607 = n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field1;
          var eh_1291846661 = n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field0;
          if (isFilled_1157627935(eh_1291846661)) {
          var j_1291846665 = (eh_1291846661 & (t_1291846494.data).length - 1);
          Label4: do {
              Label5: while (true) {
              if (!isFilled_1157627935(t_1291846494.data[chckIndx(j_1291846665, 0, (t_1291846494.data).length - 1)].Field0)) break Label5;
                j_1291846665 = nextTry_1157627938(j_1291846665, (t_1291846494.data).length - 1);
              }
          } while (false);
          Temporary6 = n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field2;
          n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field2 = genericReset(n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field2, NTI50331655);
          Temporary7 = n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field3;
          n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field3 = genericReset(n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field3, NTI1291845636);
          rawInsert_1291846906(t_1291846494, t_1291846494, "data", Temporary6, Temporary7, n_1291846497[chckIndx(h_1291846549, 0, (n_1291846497).length - 1)].Field0, j_1291846665);
          }
          
          h_1291846549 = nxt_1291846607;
        }
    } while (false);

  
}

function rawGetKnownHC_1291847188(t_1291847191, key_1291847192, hc_1291847193) {
  var result_1291847194 = 0;

  BeforeRet: do {
    if (((t_1291847191.data).length == 0)) {
    result_1291847194 = -1;
    break BeforeRet;
    }
    
    var h_1291847245 = (hc_1291847193 & (t_1291847191.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1157627935(t_1291847191.data[chckIndx(h_1291847245, 0, (t_1291847191.data).length - 1)].Field0)) break Label2;
          if (((t_1291847191.data[chckIndx(h_1291847245, 0, (t_1291847191.data).length - 1)].Field0 == hc_1291847193) && eqStrings(t_1291847191.data[chckIndx(h_1291847245, 0, (t_1291847191.data).length - 1)].Field2, key_1291847192))) {
          result_1291847194 = h_1291847245;
          break BeforeRet;
          }
          
          h_1291847245 = nextTry_1157627938(h_1291847245, (t_1291847191.data).length - 1);
        }
    } while (false);
    result_1291847194 = subInt(-1, h_1291847245);
  } while (false);

  return result_1291847194;

}

function HEX5BHEX5DHEX3D_1291845923(t_1291845926, key_1291845927, val_1291845928) {
    if (((t_1291845926.data).length == 0)) {
    var correctSizeHEX60gensym13_1291845978 = slotsNeeded_1157627946(32);
    t_1291845926.counter = 0;
    t_1291845926.data = new Array(chckRange(correctSizeHEX60gensym13_1291845978, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1291845978, 0, 2147483647) ; ++i) { t_1291845926.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1291845926.first = -1;
    t_1291845926.last = -1;
    }
    
    var hc_1291845983 = [0];
    var index_1291846221 = rawGet_1291845992(t_1291845926, key_1291845927, hc_1291845983, 0);
    if ((0 <= index_1291846221)) {
    t_1291845926.data[chckIndx(index_1291846221, 0, (t_1291845926.data).length - 1)].Field3 = val_1291845928;
    }
    else {
      if (((t_1291845926.data).length == 0)) {
      var correctSizeHEX60gensym18_1291846323 = slotsNeeded_1157627946(32);
      t_1291845926.counter = 0;
      t_1291845926.data = new Array(chckRange(correctSizeHEX60gensym18_1291846323, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1291846323, 0, 2147483647) ; ++i) { t_1291845926.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1291845926.first = -1;
      t_1291845926.last = -1;
      }
      
      if (mustRehash_1291846328(t_1291845926)) {
      enlarge_1291846491(t_1291845926);
      index_1291846221 = rawGetKnownHC_1291847188(t_1291845926, key_1291845927, hc_1291845983[0]);
      }
      
      index_1291846221 = subInt(-1, index_1291846221);
      rawInsert_1291846906(t_1291845926, t_1291845926, "data", key_1291845927, val_1291845928, hc_1291845983[0], index_1291846221);
      t_1291845926.counter = addInt(t_1291845926.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1291847565(obj_1291847566, key_1291847567, val_1291847568) {
    var Temporary1;

    if (!((obj_1291847566.kind == 5))) {
    failedAssertImpl_251658296(makeNimstrLit("json.nim(391, 9) `obj.kind == JObject` "));
    }
    
    var Temporary1 = obj_1291847566;
    if (ConstSet33[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
    HEX5BHEX5DHEX3D_1291845923(Temporary1.fields, key_1291847567, val_1291847568);

  
}

function newJInt_1291845713(n_1291845714) {
  var result_1291845715 = null;

    result_1291845715 = {kind: 2, num: n_1291845714, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1291845715;

}

function newJFloat_1291845716(n_1291845717) {
  var result_1291845718 = null;

    result_1291845718 = {kind: 3, fnum: n_1291845717, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1291845718;

}

function newJRawNumber_1291845707(s_1291845708) {
  var result_1291845709 = null;

    result_1291845709 = {kind: 4, str: nimCopy(null, s_1291845708, NTI50331655), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1291845709;

}

function newJString_1291845674(s_1291845675) {
  var result_1291845676 = null;

    result_1291845676 = {kind: 4, str: nimCopy(null, s_1291845675, NTI50331655), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1291845676;

}

function newJBool_1291845719(b_1291845720) {
  var result_1291845721 = null;

    result_1291845721 = {kind: 1, bval: b_1291845720, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1291845721;

}

function newJNull_1291845722() {
  var result_1291845723 = null;

    result_1291845723 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1291845723;

}

function convertObject_1291850949(x_1291850950) {
  var result_1291850951 = null;

    var isRawNumber_1291850952 = [false];
    switch (getVarType_1291850925(x_1291850950, isRawNumber_1291850952, 0)) {
    case 6:
      result_1291850951 = newJArray_1291845755();
      Label1: do {
        var i_1291850957 = 0;
        var colontmp__33554989 = 0;
        colontmp__33554989 = len_1291850946(x_1291850950);
        var i_33554990 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(i_33554990 < colontmp__33554989)) break Label3;
              i_1291850957 = i_33554990;
              add_1291845854(result_1291850951, convertObject_1291850949(x_1291850950[i_1291850957]));
              i_33554990 = addInt(i_33554990, 1);
            }
        } while (false);
      } while (false);
      break;
    case 5:
      result_1291850951 = newJObject_1291845724();
      for (var property in x_1291850950) {
        if (x_1291850950.hasOwnProperty(property)) {
      
      var nimProperty_1291850958 = null;
      var nimValue_1291850959 = null;
      nimProperty_1291850958 = property; nimValue_1291850959 = x_1291850950[property];
      HEX5BHEX5DHEX3D_1291847565(result_1291850951, cstrToNimstr(nimProperty_1291850958), convertObject_1291850949(nimValue_1291850959));
      }}
      break;
    case 2:
      result_1291850951 = newJInt_1291845713((x_1291850950));
      break;
    case 3:
      result_1291850951 = newJFloat_1291845716((x_1291850950));
      break;
    case 4:
      if (isRawNumber_1291850952[0]) {
      var value_1291850968 = null;
      value_1291850968 = x_1291850950.toString();
      result_1291850951 = newJRawNumber_1291845707(cstrToNimstr(value_1291850968));
      }
      else {
        result_1291850951 = newJString_1291845674(cstrToNimstr((x_1291850950)));
      }
      
      break;
    case 1:
      result_1291850951 = newJBool_1291845719((x_1291850950));
      break;
    case 0:
      result_1291850951 = newJNull_1291845722();
      break;
    }

  return result_1291850951;

}

function parseJson_1291850977(buffer_1291850978) {
  var result_1291850979 = null;

  BeforeRet: do {
    result_1291850979 = convertObject_1291850949(JSON.parse(toJSStr(buffer_1291850978)));
    break BeforeRet;
  } while (false);

  return result_1291850979;

}

function handleHexChar_1375731713(c_1375731714, x_1375731715, x_1375731715_Idx) {
  var result_1375731716 = false;

    result_1375731716 = true;
    switch (c_1375731714) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1375731715[x_1375731715_Idx] = ((x_1375731715[x_1375731715_Idx] << 4) | subInt(c_1375731714, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1375731715[x_1375731715_Idx] = ((x_1375731715[x_1375731715_Idx] << 4) | addInt(subInt(c_1375731714, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1375731715[x_1375731715_Idx] = ((x_1375731715[x_1375731715_Idx] << 4) | addInt(subInt(c_1375731714, 65), 10));
      break;
    default: 
      result_1375731716 = false;
      break;
    }

  return result_1375731716;

}

function decodePercent_1375731768(s_1375731769, i_1375731770, i_1375731770_Idx) {
      var Temporary1;

  var result_1375731771 = 0;

    result_1375731771 = 37;
    if ((addInt(i_1375731770[i_1375731770_Idx], 2) < (s_1375731769).length)) {
    var x_1375731775 = [0];
      if (!handleHexChar_1375731713(s_1375731769[chckIndx(addInt(i_1375731770[i_1375731770_Idx], 1), 0, (s_1375731769).length - 1)], x_1375731775, 0)) Temporary1 = false; else {        Temporary1 = handleHexChar_1375731713(s_1375731769[chckIndx(addInt(i_1375731770[i_1375731770_Idx], 2), 0, (s_1375731769).length - 1)], x_1375731775, 0);      }    if (Temporary1) {
    result_1375731771 = chckRange(x_1375731775[0], 0, 255);
    i_1375731770[i_1375731770_Idx] = addInt(i_1375731770[i_1375731770_Idx], 2);
    }
    
    }
    

  return result_1375731771;

}

function decodeUrl_1660944441(s_1660944442, decodePlus_1660944443) {
  var result_1660944444 = [];

    result_1660944444 = nimCopy(null, mnewString(chckRange((s_1660944442).length, 0, 2147483647)), NTI50331655);
    var i_1660944445 = [0];
    var j_1660944446 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1660944445[0] < (s_1660944442).length)) break Label2;
          switch (s_1660944442[chckIndx(i_1660944445[0], 0, (s_1660944442).length - 1)]) {
          case 37:
            result_1660944444[chckIndx(j_1660944446, 0, (result_1660944444).length - 1)] = decodePercent_1375731768(s_1660944442, i_1660944445, 0);
            break;
          case 43:
            if (decodePlus_1660944443) {
            result_1660944444[chckIndx(j_1660944446, 0, (result_1660944444).length - 1)] = 32;
            }
            else {
              result_1660944444[chckIndx(j_1660944446, 0, (result_1660944444).length - 1)] = s_1660944442[chckIndx(i_1660944445[0], 0, (s_1660944442).length - 1)];
            }
            
            break;
          default: 
            result_1660944444[chckIndx(j_1660944446, 0, (result_1660944444).length - 1)] = s_1660944442[chckIndx(i_1660944445[0], 0, (s_1660944442).length - 1)];
            break;
          }
          i_1660944445[0] = addInt(i_1660944445[0], 1);
          j_1660944446 = addInt(j_1660944446, 1);
        }
    } while (false);
    (result_1660944444.length = chckRange(j_1660944446, 0, 2147483647));

  return result_1660944444;

}

function innerHEX60gensym88_33554804() {
  var result_33554805 = null;

  BeforeRet: do {
    var a_33554806 = null;
    a_33554806 = {};
    a_33554806.inpSearch = "";
    result_33554805 = a_33554806;
    break BeforeRet;
  } while (false);

  return result_33554805;

}

function HEX3Aanonymous_33554608(value_33554609) {
    drawInd_587202976();

  
}

function HEX3Aanonymous_33554640(value_33554641) {
    
function HEX3Aanonymous_33554643(value_33554644) {
        var old_33554645 = isInternet_587202682[0];
        isInternet_587202682[0] = true;
        if (!((old_33554645 == isInternet_587202682[0]))) {
        redraw_1090520045(kxi_1090519104[0]);
        }
        

      
    }
    
function HEX3Aanonymous_33554652(error_33554653) {
        var old_33554654 = isInternet_587202682[0];
        isInternet_587202682[0] = false;
        if (!((old_33554654 == isInternet_587202682[0]))) {
        redraw_1090520045(kxi_1090519104[0]);
        }
        

      
    }

    var stm_33554642 = sendRequest_587202696(makeNimstrLit("HEAD"), [], [], []);
    stm_33554642.observe((HEX3Aanonymous_33554643), (HEX3Aanonymous_33554652));

  
}
var Temporary3;
var pIndicator_33554587 = newPositionIndicator_587203030(20);
var currentPosM_33554588 = pIndicator_33554587.marker;
pIndicator_587202683[0] = nimCopy(pIndicator_587202683[0], pIndicator_33554587, NTI587202568);
var stmAnime_33554607 = Kefir.interval((20), (1));
stmAnime_33554607.observe((HEX3Aanonymous_33554608));
var stmCheckInternet_33554639 = Kefir.interval((5000), (1));
stmCheckInternet_33554639.observe((HEX3Aanonymous_33554640));
var token_33554691 = [cstrToNimstr(($(("#token")).val()))];
var vUser_33554703 = [($(("#user")).val())];
if ((vUser_33554703[0] == "")) {
++excHandler;
Temporary3 = framePtr;
try {
vUser_33554703[0] = (localStorage.getItem(("user")));
currUser_587202590[0] = nimCopy(currUser_587202590[0], to_33554719(HEX5BHEX5D_1291848688(parseJson_1291850977(decodeUrl_1660944441(cstrToNimstr(vUser_33554703[0]), true)), makeNimstrLit("resp"))), NTI1493172227);
console.log(("1.currUser.role:"), (toJSStr(currUser_587202590[0].role)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
framePtr = Temporary3;
lastJSError = prevJSError;
} finally {
framePtr = Temporary3;
}
}
else {
  localStorage.setItem(("user"), (vUser_33554703[0]));
  currUser_587202590[0] = nimCopy(currUser_587202590[0], to_33554719(HEX5BHEX5D_1291848688(parseJson_1291850977(decodeUrl_1660944441(cstrToNimstr(vUser_33554703[0]), true)), makeNimstrLit("resp"))), NTI1493172227);
console.log(("2.currUser.role:"), (toJSStr(currUser_587202590[0].role)));
}

currUser_587202590[0].token = nimCopy(null, token_33554691[0], NTI50331655);
var currProcess_33554790 = [({name: [], sector_internal_id: [], firstname: [], lastname: [], date_start: [], date_finish: [], id: 0, user_id: 0, sector_id: 0, totalFamilies: 0})];
var allSectProc_33554791 = [[]];
var currStreets_33554792 = [[]];
var currStreetsTmp_33554793 = [[]];
var showStreetsEnabled_33554794 = [false];
var spinnerOn_33554795 = [false];
var progressOn_33554796 = [false];
var progressProc_33554797 = [0];
var scrollToSectId_33554798 = [0];
var onlyMySectors_33554799 = [false];
var serchSectByName_33554800 = [[]];
var setEvtInpSearchSect_33554801 = [false];
var currUiSt_33554822 = [innerHEX60gensym88_33554804()];
var map = null;
var glbUi = null;
var sectStreetGrp_33554836 = [(new H.map.Group())];
var noMyMsgEl_33554837 = [null];

function bindGps_33556670() {
    
function getPos_33556671(position_33556672) {
        
function innerHEX60gensym372_33556679() {
          var result_33556680 = null;

          BeforeRet: do {
            var a_33556681 = null;
            a_33556681 = {};
            a_33556681.lat = position_33556672.coords.latitude;
            a_33556681.lng = position_33556672.coords.longitude;
            result_33556680 = a_33556681;
            break BeforeRet;
          } while (false);

          return result_33556680;

        }
          var Temporary1;
          var Temporary2;
          var Temporary3;

      BeforeRet: do {
        if ((map == null)) {
        break BeforeRet;
        }
        
        var newGeoPos_33556728 = innerHEX60gensym372_33556679();
        var dist_33556748 = (currentPosM_33554588.getGeometry().distance((newGeoPos_33556728)));
          if (!(curEngineType_587202619[0] == engineTypes_587202618[0].P2D)) Temporary2 = false; else {            Temporary2 = (10.0 < dist_33556748);          }          if (!Temporary2) Temporary1 = false; else {            Temporary1 = !(isInternet_587202682[0]);          }        if (Temporary1) {
        currentPosM_33554588.setGeometry((newGeoPos_33556728));
        }
        else {
          if (!(curEngineType_587202619[0] == engineTypes_587202618[0].P2D)) Temporary3 = false; else {            Temporary3 = isInternet_587202682[0];          }        if (Temporary3) {
        currentPosM_33554588.setGeometry((newGeoPos_33556728));
        }
        }
        if ((curEngineType_587202619[0] == engineTypes_587202618[0].WEBGL)) {
        currentPosM_33554588.setGeometry((newGeoPos_33556728));
        }
        
      } while (false);

      
    }
    
function errorHandler_33556806(errorObj_33556807) {
        console.log((toJSStr((HEX24_369098755((errorObj_33556807.code)) || []).concat(makeNimstrLit(": ") || [],cstrToNimstr((errorObj_33556807.message)) || []))));

      
    }

    navigator.geolocation.watchPosition((getPos_33556671), (errorHandler_33556806));

  
}
bindGps_33556670();
var stmClMap_33557005 = [null];

function newSeq_1090520082(len_1090520084) {
  var result_1090520085 = [];

    result_1090520085 = new Array(len_1090520084); for (var i = 0 ; i < len_1090520084 ; ++i) { result_1090520085[i] = ({k: 0, parent: null, current: null, newNode: null, oldNode: null}); }
  return result_1090520085;

}

function newSeq_1090520103(len_1090520105) {
  var result_1090520106 = [];

    result_1090520106 = new Array(len_1090520105); for (var i = 0 ; i < len_1090520105 ; ++i) { result_1090520106[i] = ({parent: null, newChild: null, pos: 0}); }
  return result_1090520106;

}

function init_1090520051(ev_1090520052) {
    
function HEX3Aanonymous_1090520053() {
        dodraw_1090519986(kxi_1090519104[0]);

      
    }

    kxi_1090519104[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_1090520053);

  
}

function setRenderer_1090520064(renderer_1090520067, root_1090520068, clientPostRenderCallback_1090520071) {
    
function HEX3Aanonymous_1090520130() {
        redraw_1090520045(kxi_1090519104[0]);

      
    }

  var result_1090520072 = null;

    if ((document.getElementById(root_1090520068) == null)) {
    var msg_1090520076 = (("Could not find a <div> with id=" + root_1090520068) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_1090520076), parent: null, m_type: NTI50332328, name: null, trace: [], up: null}, "Exception");
    }
    
    result_1090520072 = {rootId: root_1090520068, renderer: renderer_1090520067, postRenderCallback: clientPostRenderCallback_1090520071, patches: newSeq_1090520082(60), patchesV: newSeq_1090520103(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_1090519104[0] = result_1090520072;
    window.onload = init_1090520051;
    window.onhashchange = HEX3Aanonymous_1090520130;

  return result_1090520072;

}

function setRenderer_1090520176(renderer_1090520178, root_1090520179, clientPostRenderCallback_1090520181) {
    
function wrapRenderer_1090520183(data_1090520184) {
      var result_1090520185 = null;

        result_1090520185 = renderer_1090520178();

      return result_1090520185;

    }
    
function wrapPostRender_1090520186(data_1090520187) {
        if (!((clientPostRenderCallback_1090520181 == null))) {
        clientPostRenderCallback_1090520181();
        }
        

      
    }

  var result_1090520182 = null;

    result_1090520182 = setRenderer_1090520064(wrapRenderer_1090520183, root_1090520179, wrapPostRender_1090520186);

  return result_1090520182;

}

function newVNode_1107296942(kind_1107296943) {
  var result_1107296944 = null;

    result_1107296944 = {kind: kind_1107296943, index: -1, m_type: NTI1107296358, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_1107296944;

}

function add_1107296882(parent_1107296883, kid_1107296884) {
    parent_1107296883.kids.push(kid_1107296884);;

  
}

function tree_1107296945(kind_1107296946, kids_1107296947) {
  var result_1107296948 = null;

    result_1107296948 = newVNode_1107296942(kind_1107296946);
    Label1: do {
      var k_1107296960 = null;
      var i_33557754 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33557754 < (kids_1107296947).length)) break Label3;
            k_1107296960 = kids_1107296947[chckIndx(i_33557754, 0, (kids_1107296947).length - 1)];
            add_1107296882(result_1107296948, k_1107296960);
            i_33557754 = addInt(i_33557754, 1);
          }
      } while (false);
    } while (false);

  return result_1107296948;

}

function setAttr_1107296808(n_1107296809, key_1107296810, val_1107296811) {
  BeforeRet: do {
    if (((n_1107296809.attrs).length == 0)) {
    n_1107296809.attrs = nimCopy(null, [key_1107296810, val_1107296811], NTI1107296525);
    }
    else {
      Label1: do {
        var i_1107296828 = 0;
        var colontmp__33557757 = 0;
        colontmp__33557757 = subInt((n_1107296809.attrs).length, 2);
        var res_33557758 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(res_33557758 <= colontmp__33557757)) break Label3;
              i_1107296828 = res_33557758;
              if ((n_1107296809.attrs[chckIndx(i_1107296828, 0, (n_1107296809.attrs).length - 1)] == key_1107296810)) {
              n_1107296809.attrs[chckIndx(addInt(i_1107296828, 1), 0, (n_1107296809.attrs).length - 1)] = val_1107296811;
              break BeforeRet;
              }
              
              res_33557758 = addInt(res_33557758, 2);
            }
        } while (false);
      } while (false);
      n_1107296809.attrs.push(key_1107296810);;
      n_1107296809.attrs.push(val_1107296811);;
    }
    
  } while (false);

  
}

function text_1107296997(s_1107296998) {
  var result_1107296999 = null;

    result_1107296999 = {kind: 0, text: toJSStr(s_1107296998), index: -1, m_type: NTI1107296358, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_1107296999;

}

function toggleSpinner_33556384() {
  var result_33556385 = null;

    var tmp_33556386 = tree_1107296945(43, []);
    result_33556385 = tmp_33556386;
    if (spinnerOn_33554795[0]) {
    var tmp_33556387 = tree_1107296945(43, []);
    tmp_33556387.class = "d-flex justify-content-center mt-6";
    var tmp_33556388 = tree_1107296945(43, []);
    tmp_33556388.class = "spinner-border text-primary";
    setAttr_1107296808(tmp_33556388, "role", "status");
    var tmp_33556389 = tree_1107296945(70, []);
    tmp_33556389.class = "sr-only";
    add_1107296882(tmp_33556389, text_1107296997(makeNimstrLit("\xD0\x97\xD0\xB0\xD0\xB3\xD1\x80\xD1\x83\xD0\xB7\xD0\xBA\xD0\xB0...")));
    add_1107296882(tmp_33556388, tmp_33556389);
    add_1107296882(tmp_33556387, tmp_33556388);
    result_33556385 = tmp_33556387;
    }
    

  return result_33556385;

}

function setAttr_603980077(s_603980078, a_603980079, value_603980080) {
  BeforeRet: do {
    var i_603980081 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_603980081 < s_603980078.length)) break Label2;
          if ((s_603980078[i_603980081] == a_603980079)) {
          s_603980078[addInt(i_603980081, 1)] = value_603980080;
          break BeforeRet;
          }
          else {
          if ((a_603980079 < s_603980078[i_603980081])) {
          s_603980078.push("");
          s_603980078.push("");
          Label3: do {
            var j_603980122 = 0;
            var colontmp__33557766 = 0;
            var colontmp__33557767 = 0;
            colontmp__33557766 = subInt(s_603980078.length, 1);
            colontmp__33557767 = addInt(i_603980081, 3);
            var res_33557769 = colontmp__33557766;
            Label4: do {
                Label5: while (true) {
                if (!(colontmp__33557767 <= res_33557769)) break Label5;
                  j_603980122 = res_33557769;
                  s_603980078[j_603980122] = s_603980078[subInt(j_603980122, 2)];
                  s_603980078[subInt(j_603980122, 1)] = s_603980078[subInt(j_603980122, 3)];
                  res_33557769 = subInt(res_33557769, 2);
                }
            } while (false);
          } while (false);
          s_603980078[i_603980081] = a_603980079;
          s_603980078[addInt(i_603980081, 1)] = value_603980080;
          break BeforeRet;
          }
          }
          i_603980081 = addInt(i_603980081, 2);
        }
    } while (false);
    s_603980078.push(a_603980079);
    s_603980078.push(value_603980080);
  } while (false);

  
}

function setAttr_603980163(s_603980164, attr_603980165, value_603980166) {
    if (!(!((value_603980166 == null)))) {
    failedAssertImpl_251658296(makeNimstrLit("vstyles.nim(266, 12) `value != nil` value must not be nil"));
    }
    
    setAttr_603980077(s_603980164, toStyleAttrName_603980018[chckIndx(attr_603980165, 0, (toStyleAttrName_603980018).length - 1)], value_603980166);

  
}

function style_603980201(pairs_603980202) {
  var result_603980203 = null;

    result_603980203 = new Array(0);
    Label1: do {
      var x_603980219 = {Field0: 0, Field1: null};
      var i_33557762 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33557762 < (pairs_603980202).length)) break Label3;
            x_603980219 = pairs_603980202[chckIndx(i_33557762, 0, (pairs_603980202).length - 1)];
            setAttr_603980163(result_603980203, x_603980219["Field0"], x_603980219["Field1"]);
            i_33557762 = addInt(i_33557762, 1);
          }
      } while (false);
    } while (false);

  return result_603980203;

}

function toggleProgress_33556390() {
    var Temporary1;

  var result_33556391 = null;

    var tmp_33556392 = tree_1107296945(43, []);
    result_33556391 = tmp_33556392;
    if ((progressProc_33554797[0] < 5)) {
    Temporary1 = "text-dark";
    }
    else {
    Temporary1 = "";
    }
    
    var cText_33556393 = Temporary1;
    if (progressOn_33554796[0]) {
    var tmp_33556394 = tree_1107296945(43, []);
    tmp_33556394.class = "progress mt-6";
    var tmp_33556395 = tree_1107296945(43, []);
    tmp_33556395.class = ("progress-bar progress-bar-striped progress-bar-animated " + cText_33556393);
    setAttr_1107296808(tmp_33556395, "role", "progressbar");
    tmp_33556395.style = style_603980201([{Field0: 185, Field1: toJSStr((HEX24_369098755(progressProc_33554797[0]) || []).concat(makeNimstrLit("%") || []))}]);
    setAttr_1107296808(tmp_33556395, "aria-valuenow", toJSStr(HEX24_369098755(progressProc_33554797[0])));
    setAttr_1107296808(tmp_33556395, "aria-valuemin", "0");
    setAttr_1107296808(tmp_33556395, "aria-valuemax", "100");
    add_1107296882(tmp_33556395, text_1107296997((HEX24_369098755(progressProc_33554797[0]) || []).concat(makeNimstrLit("%") || [])));
    add_1107296882(tmp_33556394, tmp_33556395);
    result_33556391 = tmp_33556394;
    }
    

  return result_33556391;

}

function showConfirm_33555811(modalId_33555812, bdy_33555813) {
  var result_33555814 = null;

    var lblM_33555815 = toJSStr((modalId_33555812 || []).concat(makeNimstrLit("Label") || []));
    var tmp_33555816 = tree_1107296945(43, []);
    tmp_33555816.class = "modal fade";
    tmp_33555816.id = toJSStr(modalId_33555812);
    setAttr_1107296808(tmp_33555816, "tabindex", "-1");
    setAttr_1107296808(tmp_33555816, "role", "dialog");
    setAttr_1107296808(tmp_33555816, "aria-labelledby", lblM_33555815);
    setAttr_1107296808(tmp_33555816, "aria-hidden", "true");
    var tmp_33555817 = tree_1107296945(43, []);
    tmp_33555817.class = "modal-dialog";
    setAttr_1107296808(tmp_33555817, "role", "document");
    var tmp_33555818 = tree_1107296945(43, []);
    tmp_33555818.class = "modal-content";
    var tmp_33555819 = tree_1107296945(43, []);
    tmp_33555819.class = "modal-header";
    var tmp_33555820 = tree_1107296945(26, []);
    tmp_33555820.class = "modal-title";
    tmp_33555820.id = lblM_33555815;
    add_1107296882(tmp_33555820, text_1107296997(currProcess_33554790[0].name));
    add_1107296882(tmp_33555819, tmp_33555820);
    var tmp_33555821 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555821, "type", "button");
    tmp_33555821.class = "close";
    setAttr_1107296808(tmp_33555821, "data-dismiss", "modal");
    setAttr_1107296808(tmp_33555821, "aria-label", "Close");
    var tmp_33555822 = tree_1107296945(70, []);
    setAttr_1107296808(tmp_33555822, "aria-hidden", "true");
    add_1107296882(tmp_33555822, text_1107296997(makeNimstrLit("x")));
    add_1107296882(tmp_33555821, tmp_33555822);
    add_1107296882(tmp_33555819, tmp_33555821);
    add_1107296882(tmp_33555818, tmp_33555819);
    add_1107296882(tmp_33555818, bdy_33555813);
    add_1107296882(tmp_33555817, tmp_33555818);
    add_1107296882(tmp_33555816, tmp_33555817);
    result_33555814 = tmp_33555816;

  return result_33555814;

}

function addEventListener_1107297048(n_1107297049, event_1107297050, handler_1107297051) {
    n_1107297049.events.push({Field0: event_1107297050, Field1: handler_1107297051, Field2: null});;

  
}

function addEventHandler_1090520233(n_1090520234, k_1090520235, action_1090520237, kxi_1090520238) {
    
function wrapper_1090520239(ev_1090520240, n_1090520241) {
        action_1090520237();
        if (!(kxi_1090520238.surpressRedraws)) {
        redraw_1090520045(kxi_1090520238);
        }
        

      
    }

    addEventListener_1107297048(n_1090520234, k_1090520235, wrapper_1090520239);

  
}

function newSeq_33555076(len_33555078) {
  var result_33555079 = [];

    result_33555079 = new Array(len_33555078); for (var i = 0 ; i < len_33555078 ; ++i) { result_33555079[i] = ({name: [], sector_internal_id: [], firstname: [], lastname: [], date_start: [], date_finish: [], id: 0, user_id: 0, sector_id: 0, totalFamilies: 0}); }
  return result_33555079;

}

function HEX24_369098758(x_369098759) {
  var result_369098760 = [[]];

    addInt_285212868(result_369098760, 0, x_369098759);

  return result_369098760[0];

}

function toUnix_1509950376(t_1509950377) {
  var result_1509950378 = 0;

    result_1509950378 = t_1509950377.seconds;

  return result_1509950378;

}

function setTs_33555026() {
    timeStamp_587202591[0] = nimCopy(null, HEX24_369098758(toUnix_1509950376(getTime_1509950423())), NTI50331655);

  
}

function parseSaturatedNatural_671088956(s_671088957, b_671088958, b_671088958_Idx, start_671088959) {
      var Temporary1;
          var Temporary4;

  var result_671088960 = 0;

    var i_671088961 = start_671088959;
    if (((i_671088961 < (s_671088957).length) && (s_671088957[chckIndx(i_671088961, 0, (s_671088957).length - 1)] == 43))) {
    i_671088961 = addInt(i_671088961, 1);
    }
    
      if (!(i_671088961 < (s_671088957).length)) Temporary1 = false; else {        Temporary1 = (ConstSet38[s_671088957[chckIndx(i_671088961, 0, (s_671088957).length - 1)]] != undefined);      }    if (Temporary1) {
    b_671088958[b_671088958_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_671088961 < (s_671088957).length)) Temporary4 = false; else {            Temporary4 = (ConstSet39[s_671088957[chckIndx(i_671088961, 0, (s_671088957).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_671088980 = subInt(s_671088957[chckIndx(i_671088961, 0, (s_671088957).length - 1)], 48);
          if ((b_671088958[b_671088958_Idx] <= divInt(subInt(2147483647, c_671088980), 10))) {
          b_671088958[b_671088958_Idx] = addInt(mulInt(b_671088958[b_671088958_Idx], 10), c_671088980);
          }
          else {
            b_671088958[b_671088958_Idx] = 2147483647;
          }
          
          i_671088961 = addInt(i_671088961, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_671088961 < (s_671088957).length) && (s_671088957[chckIndx(i_671088961, 0, (s_671088957).length - 1)] == 95))) break Label6;
                i_671088961 = addInt(i_671088961, 1);
              }
          } while (false);
        }
    } while (false);
    result_671088960 = subInt(i_671088961, start_671088959);
    }
    

  return result_671088960;

}

function HEX5BHEX5D_922750106(s_922750109, x_922750110) {
  var result_922750111 = [];

    var a_922750113 = x_922750110.a;
    var L_922750115 = addInt(subInt(subInt((s_922750109).length, x_922750110.b), a_922750113), 1);
    result_922750111 = nimCopy(null, mnewString(chckRange(L_922750115, 0, 2147483647)), NTI50331655);
    Label1: do {
      var i_922750120 = 0;
      var i_33557774 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33557774 < L_922750115)) break Label3;
            i_922750120 = i_33557774;
            result_922750111[chckIndx(i_922750120, 0, (result_922750111).length - 1)] = s_922750109[chckIndx(addInt(i_922750120, a_922750113), 0, (s_922750109).length - 1)];
            i_33557774 = addInt(i_33557774, 1);
          }
      } while (false);
    } while (false);

  return result_922750111;

}

function HEX2EHEX2E_855638096(a_855638099, b_855638100) {
  var result_855638103 = ({a: 0, b: 0});

    result_855638103 = nimCopy(result_855638103, {a: a_855638099, b: b_855638100}, NTI855638095);

  return result_855638103;

}

function parseStandardFormatSpecifier_1459617850(s_1459617851, start_1459617852, ignoreUnknownSuffix_1459617853) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1459617854 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1459617854.fill = 32;
    result_1459617854.align = 0;
    result_1459617854.sign = 45;
    var i_1459617856 = start_1459617852;
    if (((addInt(i_1459617856, 1) < (s_1459617851).length) && (ConstSet34[s_1459617851[chckIndx(addInt(i_1459617856, 1), 0, (s_1459617851).length - 1)]] != undefined))) {
    result_1459617854.fill = s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)];
    result_1459617854.align = s_1459617851[chckIndx(addInt(i_1459617856, 1), 0, (s_1459617851).length - 1)];
    i_1459617856 = addInt(i_1459617856, 2);
    }
    else {
    if (((i_1459617856 < (s_1459617851).length) && (ConstSet35[s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)]] != undefined))) {
    result_1459617854.align = s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)];
    i_1459617856 = addInt(i_1459617856, 1);
    }
    }
    if (((i_1459617856 < (s_1459617851).length) && (ConstSet36[s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)]] != undefined))) {
    result_1459617854.sign = s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)];
    i_1459617856 = addInt(i_1459617856, 1);
    }
    
    if (((i_1459617856 < (s_1459617851).length) && (s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)] == 35))) {
    result_1459617854.alternateForm = true;
    i_1459617856 = addInt(i_1459617856, 1);
    }
    
      if (!((addInt(i_1459617856, 1) < (s_1459617851).length) && (s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet37[s_1459617851[chckIndx(addInt(i_1459617856, 1), 0, (s_1459617851).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1459617854.padWithZero = true;
    i_1459617856 = addInt(i_1459617856, 1);
    }
    
    var parsedLength_1459617893 = parseSaturatedNatural_671088956(s_1459617851, result_1459617854, "minimumWidth", i_1459617856);
    i_1459617856 = addInt(i_1459617856, parsedLength_1459617893);
    if (((i_1459617856 < (s_1459617851).length) && (s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)] == 46))) {
    i_1459617856 = addInt(i_1459617856, 1);
    var parsedLengthB_1459617902 = parseSaturatedNatural_671088956(s_1459617851, result_1459617854, "precision", i_1459617856);
    i_1459617856 = addInt(i_1459617856, parsedLengthB_1459617902);
    }
    else {
      result_1459617854.precision = -1;
    }
    
      if (!(i_1459617856 < (s_1459617851).length)) Temporary2 = false; else {        Temporary2 = (ConstSet40[s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1459617854.typ = s_1459617851[chckIndx(i_1459617856, 0, (s_1459617851).length - 1)];
    i_1459617856 = addInt(i_1459617856, 1);
    }
    
    result_1459617854.endPosition = i_1459617856;
      if (!!((i_1459617856 == (s_1459617851).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1459617853);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_922750106(s_1459617851, HEX2EHEX2E_855638096(i_1459617856, 1)) || []), parent: null, m_type: NTI50332341, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1459617854;

}

function nucruneLen(s_922746890) {
  var result_922746891 = 0;

    result_922746891 = 0;
    var i_922746892 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_922746892 < (s_922746890).length)) break Label2;
          if ((s_922746890[chckIndx(i_922746892, 0, (s_922746890).length - 1)] <= 127)) {
          i_922746892 = addInt(i_922746892, 1);
          }
          else {
          if (((s_922746890[chckIndx(i_922746892, 0, (s_922746890).length - 1)] >>> 5) == 6)) {
          i_922746892 = addInt(i_922746892, 2);
          }
          else {
          if (((s_922746890[chckIndx(i_922746892, 0, (s_922746890).length - 1)] >>> 4) == 14)) {
          i_922746892 = addInt(i_922746892, 3);
          }
          else {
          if (((s_922746890[chckIndx(i_922746892, 0, (s_922746890).length - 1)] >>> 3) == 30)) {
          i_922746892 = addInt(i_922746892, 4);
          }
          else {
          if (((s_922746890[chckIndx(i_922746892, 0, (s_922746890).length - 1)] >>> 2) == 62)) {
          i_922746892 = addInt(i_922746892, 5);
          }
          else {
          if (((s_922746890[chckIndx(i_922746892, 0, (s_922746890).length - 1)] >>> 1) == 126)) {
          i_922746892 = addInt(i_922746892, 6);
          }
          else {
          i_922746892 = addInt(i_922746892, 1);
          }
          }}}}}
          result_922746891 = addInt(result_922746891, 1);
        }
    } while (false);

  return result_922746891;

}

function runeLenAt_922746945(s_922746946, i_922746947) {
  var result_922746948 = 0;

    if ((s_922746946[chckIndx(i_922746947, 0, (s_922746946).length - 1)] <= 127)) {
    result_922746948 = 1;
    }
    else {
    if (((s_922746946[chckIndx(i_922746947, 0, (s_922746946).length - 1)] >>> 5) == 6)) {
    result_922746948 = 2;
    }
    else {
    if (((s_922746946[chckIndx(i_922746947, 0, (s_922746946).length - 1)] >>> 4) == 14)) {
    result_922746948 = 3;
    }
    else {
    if (((s_922746946[chckIndx(i_922746947, 0, (s_922746946).length - 1)] >>> 3) == 30)) {
    result_922746948 = 4;
    }
    else {
    if (((s_922746946[chckIndx(i_922746947, 0, (s_922746946).length - 1)] >>> 2) == 62)) {
    result_922746948 = 5;
    }
    else {
    if (((s_922746946[chckIndx(i_922746947, 0, (s_922746946).length - 1)] >>> 1) == 126)) {
    result_922746948 = 6;
    }
    else {
      result_922746948 = 1;
    }
    }}}}}

  return result_922746948;

}

function runeOffset_922747517(s_922747518, pos_922747519, start_922747520) {
  var result_922747521 = 0;

  BeforeRet: do {
    var i_922747522 = 0;
    var o_922747523 = start_922747520;
    Label1: do {
        Label2: while (true) {
        if (!(i_922747522 < pos_922747519)) break Label2;
          o_922747523 = addInt(o_922747523, chckRange(runeLenAt_922746945(s_922747518, o_922747523), 0, 2147483647));
          if (((s_922747518).length <= o_922747523)) {
          result_922747521 = -1;
          break BeforeRet;
          }
          
          i_922747522 = addInt(i_922747522, 1);
        }
    } while (false);
    result_922747521 = o_922747523;
    break BeforeRet;
  } while (false);

  return result_922747521;

}

function validateUtf8_922747157(s_922747158) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_922747159 = 0;

  BeforeRet: do {
    var i_922747160 = 0;
    var L_922747161 = (s_922747158).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_922747160 < L_922747161)) break Label2;
          if ((s_922747158[chckIndx(i_922747160, 0, (s_922747158).length - 1)] <= 127)) {
          i_922747160 = addInt(i_922747160, 1);
          }
          else {
          if (((s_922747158[chckIndx(i_922747160, 0, (s_922747158).length - 1)] >>> 5) == 6)) {
          if ((s_922747158[chckIndx(i_922747160, 0, (s_922747158).length - 1)] < 194)) {
          result_922747159 = i_922747160;
          break BeforeRet;
          }
          
            if (!(addInt(i_922747160, 1) < L_922747161)) Temporary3 = false; else {              Temporary3 = ((s_922747158[chckIndx(addInt(i_922747160, 1), 0, (s_922747158).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_922747160 = addInt(i_922747160, 2);
          }
          else {
            result_922747159 = i_922747160;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_922747158[chckIndx(i_922747160, 0, (s_922747158).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_922747160, 2) < L_922747161)) Temporary5 = false; else {              Temporary5 = ((s_922747158[chckIndx(addInt(i_922747160, 1), 0, (s_922747158).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_922747158[chckIndx(addInt(i_922747160, 2), 0, (s_922747158).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_922747160 = addInt(i_922747160, 3);
          }
          else {
            result_922747159 = i_922747160;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_922747158[chckIndx(i_922747160, 0, (s_922747158).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_922747160, 3) < L_922747161)) Temporary8 = false; else {              Temporary8 = ((s_922747158[chckIndx(addInt(i_922747160, 1), 0, (s_922747158).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_922747158[chckIndx(addInt(i_922747160, 2), 0, (s_922747158).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_922747158[chckIndx(addInt(i_922747160, 3), 0, (s_922747158).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_922747160 = addInt(i_922747160, 4);
          }
          else {
            result_922747159 = i_922747160;
            break BeforeRet;
          }
          
          }
          else {
            result_922747159 = i_922747160;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_922747159 = -1;
    break BeforeRet;
  } while (false);

  return result_922747159;

}

function nsuRepeatChar(c_654312443, count_654312444) {
  var result_654312445 = [];

    result_654312445 = nimCopy(null, mnewString(count_654312444), NTI50331655);
    Label1: do {
      var i_654312450 = 0;
      var colontmp__33557780 = 0;
      colontmp__33557780 = subInt(count_654312444, 1);
      var res_33557781 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_33557781 <= colontmp__33557780)) break Label3;
            i_654312450 = res_33557781;
            result_654312445[chckIndx(i_654312450, 0, (result_654312445).length - 1)] = c_654312443;
            res_33557781 = addInt(res_33557781, 1);
          }
      } while (false);
    } while (false);

  return result_654312445;

}

function alignString_1459617812(s_1459617813, minimumWidth_1459617814, align_1459617815, fill_1459617816) {
      var Temporary1;

  var result_1459617817 = [];

    if ((minimumWidth_1459617814 == 0)) {
    result_1459617817 = nimCopy(null, s_1459617813, NTI50331655);
    }
    else {
      if ((validateUtf8_922747157(s_1459617813) == -1)) {
      Temporary1 = nucruneLen(s_1459617813);
      }
      else {
      Temporary1 = (s_1459617813).length;
      }
      
      var sRuneLen_1459617818 = Temporary1;
      var toFill_1459617819 = subInt(minimumWidth_1459617814, sRuneLen_1459617818);
      if ((toFill_1459617819 <= 0)) {
      result_1459617817 = nimCopy(null, s_1459617813, NTI50331655);
      }
      else {
      if (((align_1459617815 == 60) || (align_1459617815 == 0))) {
      result_1459617817 = nimCopy(null, (s_1459617813 || []).concat(nsuRepeatChar(fill_1459617816, chckRange(toFill_1459617819, 0, 2147483647)) || []), NTI50331655);
      }
      else {
      if ((align_1459617815 == 94)) {
      var half_1459617820 = divInt(toFill_1459617819, 2);
      result_1459617817 = nimCopy(null, (nsuRepeatChar(fill_1459617816, chckRange(half_1459617820, 0, 2147483647)) || []).concat(s_1459617813 || [],nsuRepeatChar(fill_1459617816, chckRange(subInt(toFill_1459617819, half_1459617820), 0, 2147483647)) || []), NTI50331655);
      }
      else {
        result_1459617817 = nimCopy(null, (nsuRepeatChar(fill_1459617816, chckRange(toFill_1459617819, 0, 2147483647)) || []).concat(s_1459617813 || []), NTI50331655);
      }
      }}
    }
    

  return result_1459617817;

}

function formatValue_1459617954(result_1459617955, result_1459617955_Idx, value_1459617956, specifier_1459617957) {
    var spec_1459617958 = parseStandardFormatSpecifier_1459617850(specifier_1459617957, 0, false);
    var value_1459617959 = nimCopy(null, value_1459617956, NTI50331655);
    switch (spec_1459617958.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_1459617958.typ]), parent: null, m_type: NTI50332341, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1459617958.precision == -1))) {
    if ((spec_1459617958.precision < nucruneLen(value_1459617959))) {
    (value_1459617959.length = chckRange(runeOffset_922747517(value_1459617959, chckRange(spec_1459617958.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_1459617955[result_1459617955_Idx].push.apply(result_1459617955[result_1459617955_Idx], alignString_1459617812(value_1459617959, spec_1459617958.minimumWidth, spec_1459617958.align, spec_1459617958.fill));;

  
}

function mkDigit_1459617797(v_1459617798, typ_1459617799) {
      var Temporary1;

  var result_1459617800 = [];

    if (!((v_1459617798 < 26))) {
    failedAssertImpl_251658296(makeNimstrLit("strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_1459617798 < 10)) {
    result_1459617800 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1459617798), 0, 255)), NTI50331655);
    }
    else {
      if ((typ_1459617799 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1459617800 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1459617798), 10), 0, 255)), NTI50331655);
    }
    

  return result_1459617800;

}

function formatInt_1728053319(n_1728053321, radix_1728053322, spec_1728053323) {
    var Temporary1;
    var Temporary8;

  var result_1728053324 = [];

    var n_1728053327 = n_1728053321;
    var negative_1728053328 = (n_1728053327 < 0);
    if (negative_1728053328) {
    Temporary1 = ((~(n_1728053327) + 1) );
    }
    else {
    Temporary1 = n_1728053327;
    }
    
    var v_1728053329 = Temporary1;
    var xx_1728053330 = [];
    if (spec_1728053323.alternateForm) {
    switch (spec_1728053323.typ) {
    case 88:
      xx_1728053330 = nimCopy(null, makeNimstrLit("0x"), NTI50331655);
      break;
    case 120:
      xx_1728053330 = nimCopy(null, makeNimstrLit("0x"), NTI50331655);
      break;
    case 98:
      xx_1728053330 = nimCopy(null, makeNimstrLit("0b"), NTI50331655);
      break;
    case 111:
      xx_1728053330 = nimCopy(null, makeNimstrLit("0o"), NTI50331655);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1728053329 == 0)) {
    result_1728053324 = nimCopy(null, makeNimstrLit("0"), NTI50331655);
    }
    else {
      result_1728053324 = nimCopy(null, [], NTI50331655);
      Label2: do {
          Label3: while (true) {
          if (!(0 < v_1728053329)) break Label3;
            var d_1728053331 = (v_1728053329 % radix_1728053322);
            v_1728053329 = Math.trunc(((v_1728053329 / radix_1728053322) ));
            result_1728053324.push.apply(result_1728053324, mkDigit_1459617797(chckRange(d_1728053331, -2147483648, 2147483647), spec_1728053323.typ));;
          }
      } while (false);
      Label4: do {
        var idx_1728053336 = 0;
        var colontmp__33557785 = 0;
        colontmp__33557785 = divInt((result_1728053324).length, 2);
        var i_33557786 = 0;
        Label5: do {
            Label6: while (true) {
            if (!(i_33557786 < colontmp__33557785)) break Label6;
              idx_1728053336 = i_33557786;
              var Temporary7 = result_1728053324[chckIndx(idx_1728053336, 0, (result_1728053324).length - 1)]; result_1728053324[chckIndx(idx_1728053336, 0, (result_1728053324).length - 1)] = result_1728053324[chckIndx(subInt(subInt((result_1728053324).length, idx_1728053336), 1), 0, (result_1728053324).length - 1)]; result_1728053324[chckIndx(subInt(subInt((result_1728053324).length, idx_1728053336), 1), 0, (result_1728053324).length - 1)] = Temporary7;              i_33557786 = addInt(i_33557786, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_1728053323.padWithZero) {
    if (negative_1728053328) Temporary8 = true; else {      Temporary8 = !((spec_1728053323.sign == 45));    }    var sign_1728053341 = Temporary8;
    var toFill_1728053345 = subInt(subInt(subInt(spec_1728053323.minimumWidth, (result_1728053324).length), (xx_1728053330).length), (sign_1728053341 ? 1 : 0));
    if ((0 < toFill_1728053345)) {
    result_1728053324 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1728053345, 0, 2147483647)) || []).concat(result_1728053324 || []), NTI50331655);
    }
    
    }
    
    if (negative_1728053328) {
    result_1728053324 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_1728053330 || [],result_1728053324 || []), NTI50331655);
    }
    else {
    if (!((spec_1728053323.sign == 45))) {
    result_1728053324 = nimCopy(null, [spec_1728053323.sign].concat(xx_1728053330 || [],result_1728053324 || []), NTI50331655);
    }
    else {
      result_1728053324 = nimCopy(null, (xx_1728053330 || []).concat(result_1728053324 || []), NTI50331655);
    }
    }
    if ((spec_1728053323.align == 60)) {
    Label9: do {
      var i_1728053350 = 0;
      var colontmp__33557789 = 0;
      colontmp__33557789 = (result_1728053324).length;
      var i_33557790 = colontmp__33557789;
      Label10: do {
          Label11: while (true) {
          if (!(i_33557790 < spec_1728053323.minimumWidth)) break Label11;
            i_1728053350 = i_33557790;
            addChar(result_1728053324, spec_1728053323.fill);;
            i_33557790 = addInt(i_33557790, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_1728053351 = subInt(spec_1728053323.minimumWidth, (result_1728053324).length);
      if ((spec_1728053323.align == 94)) {
      var half_1728053352 = divInt(toFill_1728053351, 2);
      result_1728053324 = nimCopy(null, (nsuRepeatChar(spec_1728053323.fill, chckRange(half_1728053352, 0, 2147483647)) || []).concat(result_1728053324 || [],nsuRepeatChar(spec_1728053323.fill, chckRange(subInt(toFill_1728053351, half_1728053352), 0, 2147483647)) || []), NTI50331655);
      }
      else {
        if ((0 < toFill_1728053351)) {
        result_1728053324 = nimCopy(null, (nsuRepeatChar(spec_1728053323.fill, chckRange(toFill_1728053351, 0, 2147483647)) || []).concat(result_1728053324 || []), NTI50331655);
        }
        
      }
      
    }
    

  return result_1728053324;

}

function formatValue_1728053311(result_1728053313, result_1728053313_Idx, value_1728053314, specifier_1728053315) {
  BeforeRet: do {
    if (((specifier_1728053315).length == 0)) {
    result_1728053313[result_1728053313_Idx].push.apply(result_1728053313[result_1728053313_Idx], HEX24_369098755(value_1728053314));;
    break BeforeRet;
    }
    
    var spec_1728053316 = parseStandardFormatSpecifier_1459617850(specifier_1728053315, 0, false);
    var radix_1728053317 = 10;
    switch (spec_1728053316.typ) {
    case 120:
    case 88:
      radix_1728053317 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_1728053317 = 2;
      break;
    case 111:
      radix_1728053317 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1728053316.typ]), parent: null, m_type: NTI50332341, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1728053313[result_1728053313_Idx].push.apply(result_1728053313[result_1728053313_Idx], formatInt_1728053319(value_1728053314, radix_1728053317, spec_1728053316));;
  } while (false);

  
}

function closeMap_33555000() {
    isShowNavMap_587202594[0] = false;
    var mC_33555874 = $((".main-container"))[0];
    var elMap_33555878 = $(("#map-container"))[0];
    mC_33555874.classList.remove(("map-nav"));
    elMap_33555878.classList.remove(("show-map"));
    spinnerOn_33554795[0] = false;

  
}

function nimIdentNormalize_654311529(s_654311530) {
  var result_654311531 = [];

    result_654311531 = nimCopy(null, mnewString(chckRange((s_654311530).length, 0, 2147483647)), NTI50331655);
    if ((0 < (s_654311530).length)) {
    result_654311531[chckIndx(0, 0, (result_654311531).length - 1)] = s_654311530[chckIndx(0, 0, (s_654311530).length - 1)];
    }
    
    var j_654311532 = 1;
    Label1: do {
      var i_654311537 = 0;
      var colontmp__1728053473 = 0;
      colontmp__1728053473 = subInt((s_654311530).length, 1);
      var res_1728053474 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_1728053474 <= colontmp__1728053473)) break Label3;
            i_654311537 = res_1728053474;
            if ((ConstSet43[s_654311530[chckIndx(i_654311537, 0, (s_654311530).length - 1)]] != undefined)) {
            result_654311531[chckIndx(j_654311532, 0, (result_654311531).length - 1)] = chckRange(addInt(s_654311530[chckIndx(i_654311537, 0, (s_654311530).length - 1)], 32), 0, 255);
            j_654311532 = addInt(j_654311532, 1);
            }
            else {
            if (!((s_654311530[chckIndx(i_654311537, 0, (s_654311530).length - 1)] == 95))) {
            result_654311531[chckIndx(j_654311532, 0, (result_654311531).length - 1)] = s_654311530[chckIndx(i_654311537, 0, (s_654311530).length - 1)];
            j_654311532 = addInt(j_654311532, 1);
            }
            }
            res_1728053474 = addInt(res_1728053474, 1);
          }
      } while (false);
    } while (false);
    if (!((j_654311532 == (s_654311530).length))) {
    (result_654311531.length = chckRange(j_654311532, 0, 2147483647));
    }
    

  return result_654311531;

}

function parseEnum_1728053435(s_1728053437) {
    var Temporary1;

  var result_1728053438 = 0;

    switch (toJSStr(nimIdentNormalize_654311529(s_1728053437))) {
    case "Ok":
      Temporary1 = 0;
      break;
    case "unknown":
      Temporary1 = 1;
      break;
    case "loggedout":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: (makeNimstrLit("Invalid enum value: ") || []).concat(s_1728053437 || []), parent: null, m_type: NTI50332341, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1728053438 = Temporary1;

  return result_1728053438;

}

function getStr_1291845770(n_1291845771, default_1291845772) {
      var Temporary1;
      var Temporary2;

  var result_1291845773 = [];

  BeforeRet: do {
      if ((n_1291845771 == null)) Temporary1 = true; else {        Temporary1 = !((n_1291845771.kind == 4));      }    if (Temporary1) {
    result_1291845773 = nimCopy(null, default_1291845772, NTI50331655);
    break BeforeRet;
    }
    else {
      var Temporary2 = n_1291845771;
      if (ConstSet44[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1291845635)); }
      result_1291845773 = nimCopy(null, Temporary2.str, NTI50331655);
      break BeforeRet;
    }
    
  } while (false);

  return result_1291845773;

}

function initFromJson_1728053416(dst_1728053418, dst_1728053418_Idx, jsonNode_1728053419, jsonPath_1728053420, jsonPath_1728053420_Idx) {
    if (HEX3DHEX3D_1291847697(jsonNode_1728053419, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_1728053420[jsonPath_1728053420_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet41[jsonNode_1728053419.kind] != undefined))) {
    var msgHEX60gensym12_1728053433 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet42), nimCopy(null, jsonPath_1728053420[jsonPath_1728053420_Idx], NTI50331655), reprEnum(jsonNode_1728053419.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym12_1728053433, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    dst_1728053418[dst_1728053418_Idx] = parseEnum_1728053435(getStr_1291845770(jsonNode_1728053419, []));

  
}

function len_1291848634(n_1291848635) {
      var Temporary1;
      var Temporary2;

  var result_1291848636 = 0;

    switch (n_1291848635.kind) {
    case 6:
      var Temporary1 = n_1291848635;
      if (ConstSet47[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
      result_1291848636 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1291848635;
      if (ConstSet48[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1291845635)); }
      result_1291848636 = len_1291847785(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1291848636;

}

function initFromJson_33555180(dst_33555182, jsonNode_33555183, jsonPath_33555184, jsonPath_33555184_Idx) {
    var originalJsonPathLen_33555186 = (jsonPath_33555184[jsonPath_33555184_Idx]).length;
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".name"));;
    initFromJson_1291851003(dst_33555182, "name", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("name")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".sector_internal_id"));;
    initFromJson_1291851003(dst_33555182, "sector_internal_id", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("sector_internal_id")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".firstname"));;
    initFromJson_1291851003(dst_33555182, "firstname", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("firstname")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".lastname"));;
    initFromJson_1291851003(dst_33555182, "lastname", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("lastname")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".date_start"));;
    initFromJson_1291851003(dst_33555182, "date_start", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("date_start")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".date_finish"));;
    initFromJson_1291851003(dst_33555182, "date_finish", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("date_finish")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".id"));;
    initFromJson_1728053515(dst_33555182, "id", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("id")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".user_id"));;
    initFromJson_1728053515(dst_33555182, "user_id", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("user_id")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".sector_id"));;
    initFromJson_1728053515(dst_33555182, "sector_id", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("sector_id")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));
    jsonPath_33555184[jsonPath_33555184_Idx].push.apply(jsonPath_33555184[jsonPath_33555184_Idx], makeNimstrLit(".totalFamilies"));;
    initFromJson_1728053515(dst_33555182, "totalFamilies", getOrDefault_1291849148(jsonNode_33555183, makeNimstrLit("totalFamilies")), jsonPath_33555184, jsonPath_33555184_Idx);
    (jsonPath_33555184[jsonPath_33555184_Idx].length = chckRange(originalJsonPathLen_33555186, 0, 2147483647));

  
}

function HEX5BHEX5D_1291848767(node_1291848768, index_1291848769) {
    var Temporary1;
    var Temporary2;

  var result_1291848770 = null;

  BeforeRet: do {
    if (!(!((node_1291848768 == null)))) {
    failedAssertImpl_251658296(makeNimstrLit("json.nim(523, 9) `not isNil(node)` "));
    }
    
    if (!((node_1291848768.kind == 6))) {
    failedAssertImpl_251658296(makeNimstrLit("json.nim(524, 9) `node.kind == JArray` "));
    }
    
    var Temporary1 = node_1291848768;
    if (ConstSet49[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
    result_1291848770 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1291848769, 0, (Temporary2).length - 1)];
    break BeforeRet;
  } while (false);

  return result_1291848770;

}

function initFromJson_33555151(dst_33555153, dst_33555153_Idx, jsonNode_33555154, jsonPath_33555155, jsonPath_33555155_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1291847697(jsonNode_33555154, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_33555155[jsonPath_33555155_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet45[jsonNode_33555154.kind] != undefined))) {
    var msgHEX60gensym104_33555168 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet46), nimCopy(null, jsonPath_33555155[jsonPath_33555155_Idx], NTI50331655), reprEnum(jsonNode_33555154.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym104_33555168, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if (dst_33555153[dst_33555153_Idx].length < (Temporary1 = chckRange(len_1291848634(jsonNode_33555154), 0, 2147483647), Temporary1)) { for (var i = dst_33555153[dst_33555153_Idx].length ; i < Temporary1 ; ++i) dst_33555153[dst_33555153_Idx].push(({name: [], sector_internal_id: [], firstname: [], lastname: [], date_start: [], date_finish: [], id: 0, user_id: 0, sector_id: 0, totalFamilies: 0})); }
               else { dst_33555153[dst_33555153_Idx].length = Temporary1; };
    var orignalJsonPathLen_33555174 = (jsonPath_33555155[jsonPath_33555155_Idx]).length;
    Label2: do {
      var i_33555179 = 0;
      var colontmp__33557793 = 0;
      colontmp__33557793 = len_1291848634(jsonNode_33555154);
      var i_33557794 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(i_33557794 < colontmp__33557793)) break Label4;
            i_33555179 = i_33557794;
            addChar(jsonPath_33555155[jsonPath_33555155_Idx], 91);;
            addInt_285212889(jsonPath_33555155, jsonPath_33555155_Idx, i_33555179);
            addChar(jsonPath_33555155[jsonPath_33555155_Idx], 93);;
            initFromJson_33555180(dst_33555153[dst_33555153_Idx][chckIndx(i_33555179, 0, (dst_33555153[dst_33555153_Idx]).length - 1)], HEX5BHEX5D_1291848767(jsonNode_33555154, i_33555179), jsonPath_33555155, jsonPath_33555155_Idx);
            (jsonPath_33555155[jsonPath_33555155_Idx].length = chckRange(orignalJsonPathLen_33555174, 0, 2147483647));
            i_33557794 = addInt(i_33557794, 1);
          }
      } while (false);
    } while (false);

  
}

function initFromJson_33555127(dst_33555129, jsonNode_33555130, jsonPath_33555131, jsonPath_33555131_Idx) {
    var originalJsonPathLen_33555134 = (jsonPath_33555131[jsonPath_33555131_Idx]).length;
    jsonPath_33555131[jsonPath_33555131_Idx].push.apply(jsonPath_33555131[jsonPath_33555131_Idx], makeNimstrLit(".status"));;
    initFromJson_1728053416(dst_33555129, "status", getOrDefault_1291849148(jsonNode_33555130, makeNimstrLit("status")), jsonPath_33555131, jsonPath_33555131_Idx);
    (jsonPath_33555131[jsonPath_33555131_Idx].length = chckRange(originalJsonPathLen_33555134, 0, 2147483647));
    jsonPath_33555131[jsonPath_33555131_Idx].push.apply(jsonPath_33555131[jsonPath_33555131_Idx], makeNimstrLit(".message"));;
    initFromJson_1291851003(dst_33555129, "message", getOrDefault_1291849148(jsonNode_33555130, makeNimstrLit("message")), jsonPath_33555131, jsonPath_33555131_Idx);
    (jsonPath_33555131[jsonPath_33555131_Idx].length = chckRange(originalJsonPathLen_33555134, 0, 2147483647));
    jsonPath_33555131[jsonPath_33555131_Idx].push.apply(jsonPath_33555131[jsonPath_33555131_Idx], makeNimstrLit(".resp"));;
    initFromJson_33555151(dst_33555129, "resp", getOrDefault_1291849148(jsonNode_33555130, makeNimstrLit("resp")), jsonPath_33555131, jsonPath_33555131_Idx);
    (jsonPath_33555131[jsonPath_33555131_Idx].length = chckRange(originalJsonPathLen_33555134, 0, 2147483647));

  
}

function to_33555103(node_33555106) {
  var result_33555108 = [({status: 0, message: [], resp: []})];

    var jsonPath_33555109 = [[]];
    initFromJson_33555127(result_33555108[0], node_33555106, jsonPath_33555109, 0);

  return result_33555108[0];

}

function parseResp_33555098(bdy_33555100) {
  var result_33555102 = ({status: 0, message: [], resp: []});

    result_33555102 = nimCopy(result_33555102, to_33555103(parseJson_1291850977(bdy_33555100)), NTI33554848);
    if (eqStrings(reprEnum(result_33555102.status, NTI1493172229), makeNimstrLit("loggedOut"))) {
    currUser_587202590[0].token = nimCopy(null, [], NTI50331655);
    isShowNavMap_587202594[0] = false;
    var elMap_33555258 = $(("#map-container"))[0];
    elMap_33555258.classList.remove(("show-map"));
    redraw_1090520045(kxi_1090519104[0]);
    }
    

  return result_33555102;

}

function hndlUpdOwnSect_33554999() {
    var ownS_33556224 = $(("#ownSectors"))[0];
    if (!((ownS_33556224 == null))) {
    onlyMySectors_33554799[0] = (ownS_33556224.checked);
    }
    
    getAllProccess_33554996(onlyMySectors_33554799[0], []);

  
}

function confirmTakeSect_33555677() {
    
function HEX3Aanonymous_33555680() {
        
function HEX3Aanonymous_33555696(value_33555697) {
            closeMap_33555000();
            var respSect_33555703 = parseResp_33555098(value_33555697.Field2);
            if ((respSect_33555703.status == 1)) {
            errMsg_587202592[0] = nimCopy(null, respSect_33555703.message, NTI50331655);
            }
            
            var ownSEl_33555719 = document.getElementById(("ownSectors"));
            if (!((ownSEl_33555719 == null))) {
            ownSEl_33555719.checked = true;
            }
            
            onlyMySectors_33554799[0] = true;
            hndlUpdOwnSect_33554999();

          
        }
        
function HEX3Aanonymous_33555741(error_33555742) {
            console.log(("error:"), (error_33555742.Field0));

          
        }
        
function HEX3Aanonymous_33555767() {
            redraw_1090520045(kxi_1090519104[0]);

          
        }

        spinnerOn_33554795[0] = true;
        allSectProc_33554791[0] = nimCopy(null, newSeq_33555076(0), NTI33554829);
        var p_33555688 = nimCopy(null, currProcess_33554790[0], NTI1493172232);
        setTs_33555026();
        var fmtRes_33555689 = [mnewString(0)];
        fmtRes_33555689[0].push.apply(fmtRes_33555689[0], makeNimstrLit("token="));;
        formatValue_1459617954(fmtRes_33555689, 0, currUser_587202590[0].token, []);
        fmtRes_33555689[0].push.apply(fmtRes_33555689[0], makeNimstrLit("&sectorId="));;
        formatValue_1728053311(fmtRes_33555689, 0, p_33555688.sector_id, []);
        var stmNewPrc_33555695 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/sector/process/new?") || []).concat(fmtRes_33555689[0] || []), [], []);
        stmNewPrc_33555695.observe((HEX3Aanonymous_33555696), (HEX3Aanonymous_33555741), (HEX3Aanonymous_33555767));

      
    }

  var result_33555679 = null;

    result_33555679 = HEX3Aanonymous_33555680;

  return result_33555679;

}

function takeSectModalBody_33555784() {
  var result_33555785 = null;

    var tmp_33555786 = tree_1107296945(43, []);
    tmp_33555786.class = "modal-body";
    var tmp_33555787 = tree_1107296945(43, []);
    add_1107296882(tmp_33555787, text_1107296997(makeNimstrLit("\xD0\x92\xD0\xB7\xD1\x8F\xD1\x82\xD1\x8C \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA \xD0\xBD\xD0\xB0 \xD0\xBE\xD0\xB1\xD1\x80\xD0\xB0\xD0\xB1\xD0\xBE\xD1\x82\xD0\xBA\xD1\x83?")));
    add_1107296882(tmp_33555786, tmp_33555787);
    var tmp_33555788 = tree_1107296945(43, []);
    tmp_33555788.class = "mx-auto";
    var tmp_33555789 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555789, "type", "button");
    tmp_33555789.class = "btn btn-success float-left";
    setAttr_1107296808(tmp_33555789, "data-dismiss", "modal");
    addEventHandler_1090520233(tmp_33555789, 0, confirmTakeSect_33555677(), kxi_1090519104[0]);
    add_1107296882(tmp_33555789, text_1107296997(makeNimstrLit("\xD0\x94\xD0\xB0")));
    add_1107296882(tmp_33555788, tmp_33555789);
    var tmp_33555790 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555790, "type", "button");
    tmp_33555790.class = "btn btn-danger float-right";
    setAttr_1107296808(tmp_33555790, "data-dismiss", "modal");
    add_1107296882(tmp_33555790, text_1107296997(makeNimstrLit("\xD0\x9D\xD0\xB5\xD1\x82")));
    add_1107296882(tmp_33555788, tmp_33555790);
    add_1107296882(tmp_33555786, tmp_33555788);
    result_33555785 = tmp_33555786;

  return result_33555785;

}

function giveBackModalBody_33555792() {
  var result_33555793 = null;

    var tmp_33555794 = tree_1107296945(43, []);
    tmp_33555794.class = "modal-body";
    var tmp_33555795 = tree_1107296945(43, []);
    add_1107296882(tmp_33555795, text_1107296997(makeNimstrLit("\xD0\xA3\xD0\xB2\xD0\xB5\xD1\x80\xD0\xB5\xD0\xBD, \xD1\x87\xD1\x82\xD0\xBE \xD1\x85\xD0\xBE\xD1\x87\xD0\xB5\xD1\x88\xD1\x8C \xD1\x81\xD0\xB4\xD0\xB0\xD1\x82\xD1\x8C \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA?")));
    add_1107296882(tmp_33555794, tmp_33555795);
    var tmp_33555796 = tree_1107296945(43, []);
    tmp_33555796.class = "mx-auto";
    var tmp_33555797 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555797, "type", "button");
    tmp_33555797.class = "btn btn-success float-left";
    setAttr_1107296808(tmp_33555797, "data-dismiss", "modal");
    setAttr_1107296808(tmp_33555797, "data-toggle", "modal");
    setAttr_1107296808(tmp_33555797, "data-target", "#isProccessedModal");
    add_1107296882(tmp_33555797, text_1107296997(makeNimstrLit("\xD0\x94\xD0\xB0")));
    add_1107296882(tmp_33555796, tmp_33555797);
    var tmp_33555798 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555798, "type", "button");
    tmp_33555798.class = "btn btn-danger float-right";
    setAttr_1107296808(tmp_33555798, "data-dismiss", "modal");
    add_1107296882(tmp_33555798, text_1107296997(makeNimstrLit("\xD0\x9D\xD0\xB5\xD1\x82")));
    add_1107296882(tmp_33555796, tmp_33555798);
    add_1107296882(tmp_33555794, tmp_33555796);
    result_33555793 = tmp_33555794;

  return result_33555793;

}

function updProcc_33555068() {
    
function HEX3Aanonymous_33555071() {
        
function HEX3Aanonymous_33555092(value_33555093) {
            var respSect_33555283 = parseResp_33555098(value_33555093.Field2);
            if ((respSect_33555283.status == 1)) {
            errMsg_587202592[0] = nimCopy(null, respSect_33555283.message, NTI50331655);
            }
            
            var ownSEl_33555300 = document.getElementById(("ownSectors"));
            if (!((ownSEl_33555300 == null))) {
            ownSEl_33555300.checked = true;
            }
            
            onlyMySectors_33554799[0] = true;
            hndlUpdOwnSect_33554999();

          
        }
        
function HEX3Aanonymous_33555322(error_33555323) {
            console.log(("error:"), (error_33555323.Field0));

          
        }
        
function HEX3Aanonymous_33555348() {
            redraw_1090520045(kxi_1090519104[0]);

          
        }

        spinnerOn_33554795[0] = true;
        allSectProc_33554791[0] = nimCopy(null, newSeq_33555076(0), NTI33554829);
        var p_33555084 = nimCopy(null, currProcess_33554790[0], NTI1493172232);
        setTs_33555026();
        var fmtRes_33555085 = [mnewString(0)];
        fmtRes_33555085[0].push.apply(fmtRes_33555085[0], makeNimstrLit("token="));;
        formatValue_1459617954(fmtRes_33555085, 0, currUser_587202590[0].token, []);
        fmtRes_33555085[0].push.apply(fmtRes_33555085[0], makeNimstrLit("&processId="));;
        formatValue_1728053311(fmtRes_33555085, 0, p_33555084.id, []);
        var stmUpdPrc_33555091 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/sector/process/update?") || []).concat(fmtRes_33555085[0] || []), [], []);
        stmUpdPrc_33555091.observe((HEX3Aanonymous_33555092), (HEX3Aanonymous_33555322), (HEX3Aanonymous_33555348));

      
    }

  var result_33555070 = null;

    result_33555070 = HEX3Aanonymous_33555071;

  return result_33555070;

}

function initFromJson_33555419(dst_33555421, jsonNode_33555422, jsonPath_33555423, jsonPath_33555423_Idx) {
    var originalJsonPathLen_33555425 = (jsonPath_33555423[jsonPath_33555423_Idx]).length;
    jsonPath_33555423[jsonPath_33555423_Idx].push.apply(jsonPath_33555423[jsonPath_33555423_Idx], makeNimstrLit(".status"));;
    initFromJson_1728053416(dst_33555421, "status", getOrDefault_1291849148(jsonNode_33555422, makeNimstrLit("status")), jsonPath_33555423, jsonPath_33555423_Idx);
    (jsonPath_33555423[jsonPath_33555423_Idx].length = chckRange(originalJsonPathLen_33555425, 0, 2147483647));
    jsonPath_33555423[jsonPath_33555423_Idx].push.apply(jsonPath_33555423[jsonPath_33555423_Idx], makeNimstrLit(".message"));;
    initFromJson_1291851003(dst_33555421, "message", getOrDefault_1291849148(jsonNode_33555422, makeNimstrLit("message")), jsonPath_33555423, jsonPath_33555423_Idx);
    (jsonPath_33555423[jsonPath_33555423_Idx].length = chckRange(originalJsonPathLen_33555425, 0, 2147483647));
    jsonPath_33555423[jsonPath_33555423_Idx].push.apply(jsonPath_33555423[jsonPath_33555423_Idx], makeNimstrLit(".resp"));;
    initFromJson_1728053515(dst_33555421, "resp", getOrDefault_1291849148(jsonNode_33555422, makeNimstrLit("resp")), jsonPath_33555423, jsonPath_33555423_Idx);
    (jsonPath_33555423[jsonPath_33555423_Idx].length = chckRange(originalJsonPathLen_33555425, 0, 2147483647));

  
}

function to_33555395(node_33555398) {
  var result_33555400 = [({status: 0, message: [], resp: 0})];

    var jsonPath_33555401 = [[]];
    initFromJson_33555419(result_33555400[0], node_33555398, jsonPath_33555401, 0);

  return result_33555400[0];

}

function parseResp_33555390(bdy_33555392) {
  var result_33555394 = ({status: 0, message: [], resp: 0});

    result_33555394 = nimCopy(result_33555394, to_33555395(parseJson_1291850977(bdy_33555392)), NTI33555020);
    if (eqStrings(reprEnum(result_33555394.status, NTI1493172229), makeNimstrLit("loggedOut"))) {
    currUser_587202590[0].token = nimCopy(null, [], NTI50331655);
    isShowNavMap_587202594[0] = false;
    var elMap_33555457 = $(("#map-container"))[0];
    elMap_33555457.classList.remove(("show-map"));
    redraw_1090520045(kxi_1090519104[0]);
    }
    

  return result_33555394;

}

function delProcc_33555365() {
    
function HEX3Aanonymous_33555368() {
        
function HEX3Aanonymous_33555384(value_33555385) {
            var respSect_33555482 = parseResp_33555390(value_33555385.Field2);
            if ((respSect_33555482.status == 1)) {
            errMsg_587202592[0] = nimCopy(null, respSect_33555482.message, NTI50331655);
            }
            
            var ownSEl_33555498 = document.getElementById(("ownSectors"));
            if (!((ownSEl_33555498 == null))) {
            ownSEl_33555498.checked = true;
            }
            
            onlyMySectors_33554799[0] = true;
            hndlUpdOwnSect_33554999();

          
        }
        
function HEX3Aanonymous_33555520(error_33555521) {
            console.log(("error:"), (error_33555521.Field0));

          
        }
        
function HEX3Aanonymous_33555546() {
            redraw_1090520045(kxi_1090519104[0]);

          
        }

        spinnerOn_33554795[0] = true;
        allSectProc_33554791[0] = nimCopy(null, newSeq_33555076(0), NTI33554829);
        var p_33555376 = nimCopy(null, currProcess_33554790[0], NTI1493172232);
        setTs_33555026();
        var fmtRes_33555377 = [mnewString(0)];
        fmtRes_33555377[0].push.apply(fmtRes_33555377[0], makeNimstrLit("token="));;
        formatValue_1459617954(fmtRes_33555377, 0, currUser_587202590[0].token, []);
        fmtRes_33555377[0].push.apply(fmtRes_33555377[0], makeNimstrLit("&processId="));;
        formatValue_1728053311(fmtRes_33555377, 0, p_33555376.id, []);
        var stmDelPrc_33555383 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/sector/process/delete?") || []).concat(fmtRes_33555377[0] || []), [], []);
        stmDelPrc_33555383.observe((HEX3Aanonymous_33555384), (HEX3Aanonymous_33555520), (HEX3Aanonymous_33555546));

      
    }

  var result_33555367 = null;

    result_33555367 = HEX3Aanonymous_33555368;

  return result_33555367;

}

function proccessedModalBody_33555799() {
  var result_33555800 = null;

    var tmp_33555801 = tree_1107296945(43, []);
    tmp_33555801.class = "modal-body";
    var tmp_33555802 = tree_1107296945(43, []);
    add_1107296882(tmp_33555802, text_1107296997(makeNimstrLit("\xD0\x91\xD1\x8B\xD0\xBB \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA \xD0\xBE\xD0\xB1\xD1\x80\xD0\xB0\xD0\xB1\xD0\xBE\xD1\x82\xD0\xB0\xD0\xBD?")));
    add_1107296882(tmp_33555801, tmp_33555802);
    var tmp_33555803 = tree_1107296945(43, []);
    tmp_33555803.class = "mx-auto";
    var tmp_33555804 = tree_1107296945(43, []);
    tmp_33555804.class = "clearfix";
    var tmp_33555805 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555805, "type", "button");
    tmp_33555805.class = "btn btn-success float-left";
    setAttr_1107296808(tmp_33555805, "data-dismiss", "modal");
    addEventHandler_1090520233(tmp_33555805, 0, updProcc_33555068(), kxi_1090519104[0]);
    add_1107296882(tmp_33555805, text_1107296997(makeNimstrLit("\xD0\xA1\xD0\xB4\xD0\xB0\xD1\x82\xD1\x8C, \xD0\xBA\xD0\xB0\xD0\xBA \xD0\xBE\xD0\xB1\xD1\x80\xD0\xB0\xD0\xB1\xD0\xBE\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBD\xD1\x8B\xD0\xB9")));
    add_1107296882(tmp_33555804, tmp_33555805);
    var tmp_33555806 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555806, "type", "button");
    tmp_33555806.class = "btn btn-danger float-right";
    setAttr_1107296808(tmp_33555806, "data-dismiss", "modal");
    addEventHandler_1090520233(tmp_33555806, 0, delProcc_33555365(), kxi_1090519104[0]);
    add_1107296882(tmp_33555806, text_1107296997(makeNimstrLit("\xD0\xA1\xD0\xB4\xD0\xB0\xD1\x82\xD1\x8C, \xD0\xBA\xD0\xB0\xD0\xBA \xD0\xBD\xD0\xB5 \xD0\xBE\xD0\xB1\xD1\x80\xD0\xB0\xD0\xB1\xD0\xBE\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBD\xD1\x8B\xD0\xB9")));
    add_1107296882(tmp_33555804, tmp_33555806);
    add_1107296882(tmp_33555803, tmp_33555804);
    var tmp_33555807 = tree_1107296945(43, []);
    tmp_33555807.class = "clearfix";
    add_1107296882(tmp_33555807, text_1107296997(makeNimstrLit("\xD0\xB8\xD0\xBB\xD0\xB8")));
    add_1107296882(tmp_33555803, tmp_33555807);
    var tmp_33555808 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33555808, "type", "button");
    tmp_33555808.class = "btn btn-secondary";
    setAttr_1107296808(tmp_33555808, "data-dismiss", "modal");
    add_1107296882(tmp_33555808, text_1107296997(makeNimstrLit("\xD0\x9D\xD0\xB5 \xD1\x81\xD0\xB4\xD0\xB0\xD0\xB2\xD0\xB0\xD1\x82\xD1\x8C")));
    add_1107296882(tmp_33555803, tmp_33555808);
    add_1107296882(tmp_33555801, tmp_33555803);
    result_33555800 = tmp_33555801;

  return result_33555800;

}

function text_1107297000(s_1107297001) {
  var result_1107297002 = null;

    result_1107297002 = {kind: 0, text: s_1107297001, index: -1, m_type: NTI1107296358, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_1107297002;

}

function login_33555027(btnClass_33555028) {
    
function HEX3Aanonymous_33555031() {
        spinnerOn_33554795[0] = true;
        var btn_33555035 = $((btnClass_33555028))[0];
        btn_33555035.style.display = "none";

      
    }

  var result_33555030 = null;

    result_33555030 = HEX3Aanonymous_33555031;

  return result_33555030;

}

function loginDialog_33555051() {
  var result_33555052 = null;

    var plEmail_33555053 = "Пользователь";
    var plPass_33555054 = "Пароль";
    var tmp_33555055 = tree_1107296945(101, []);
    tmp_33555055.class = "form-signin";
    setAttr_1107296808(tmp_33555055, "action", "");
    setAttr_1107296808(tmp_33555055, "method", "post");
    var tmp_33555056 = tree_1107296945(43, []);
    tmp_33555056.class = "text-center mb-4";
    var tmp_33555057 = tree_1107296945(21, []);
    tmp_33555057.class = "h3 mb-3 font-weight-normal";
    add_1107296882(tmp_33555057, text_1107296997(makeNimstrLit("\xD0\x92\xD0\xBE\xD0\xB9\xD1\x82\xD0\xB8")));
    add_1107296882(tmp_33555056, tmp_33555057);
    add_1107296882(tmp_33555055, tmp_33555056);
    var tmp_33555058 = tree_1107296945(43, []);
    tmp_33555058.class = "form-label-group";
    var tmp_33555059 = tree_1107296945(105, []);
    setAttr_1107296808(tmp_33555059, "type", "text");
    setAttr_1107296808(tmp_33555059, "name", "email");
    tmp_33555059.id = "inputEmail";
    tmp_33555059.class = "form-control";
    setAttr_1107296808(tmp_33555059, "placeholder", plEmail_33555053);
    setAttr_1107296808(tmp_33555059, "required", "");
    setAttr_1107296808(tmp_33555059, "autofocus", "");
    add_1107296882(tmp_33555058, tmp_33555059);
    var tmp_33555060 = tree_1107296945(104, []);
    setAttr_1107296808(tmp_33555060, "for", "inputEmail");
    add_1107296882(tmp_33555060, text_1107297000(plEmail_33555053));
    add_1107296882(tmp_33555058, tmp_33555060);
    add_1107296882(tmp_33555055, tmp_33555058);
    var tmp_33555061 = tree_1107296945(43, []);
    tmp_33555061.class = "form-label-group";
    var tmp_33555062 = tree_1107296945(105, []);
    setAttr_1107296808(tmp_33555062, "type", "password");
    setAttr_1107296808(tmp_33555062, "name", "pass");
    tmp_33555062.id = "inputPassword";
    tmp_33555062.class = "form-control";
    setAttr_1107296808(tmp_33555062, "placeholder", plPass_33555054);
    setAttr_1107296808(tmp_33555062, "required", "");
    add_1107296882(tmp_33555061, tmp_33555062);
    var tmp_33555063 = tree_1107296945(104, []);
    setAttr_1107296808(tmp_33555063, "for", "inputPassword");
    add_1107296882(tmp_33555063, text_1107297000(plPass_33555054));
    add_1107296882(tmp_33555061, tmp_33555063);
    add_1107296882(tmp_33555055, tmp_33555061);
    var tmp_33555064 = tree_1107296945(43, []);
    tmp_33555064.class = "checkbox mb-3";
    var tmp_33555065 = tree_1107296945(106, []);
    tmp_33555065.class = "btn btn-lg btn-primary btn-block";
    setAttr_1107296808(tmp_33555065, "type", "submit");
    addEventHandler_1090520233(tmp_33555065, 0, login_33555027(".form-signin .btn"), kxi_1090519104[0]);
    add_1107296882(tmp_33555065, text_1107296997(makeNimstrLit("\xD0\x92\xD0\xBE\xD0\xB9\xD1\x82\xD0\xB8")));
    add_1107296882(tmp_33555064, tmp_33555065);
    var tmp_33555066 = tree_1107296945(31, []);
    tmp_33555066.class = "mt-5 mb-3 text-muted text-center";
    add_1107296882(tmp_33555066, text_1107296997(makeNimstrLit("\xC2\xA9 2019-2022")));
    add_1107296882(tmp_33555064, tmp_33555066);
    add_1107296882(tmp_33555055, tmp_33555064);
    result_33555052 = tmp_33555055;

  return result_33555052;

}

function showNoMyMsg_33555003() {
    if (!(onlyMySectors_33554799[0])) {
    noMyMsgEl_33554837[0].innerHTML = "<span>Внимание: этот участок&nbsp;</span><strong>не твой!</strong>";
    }
    else {
      noMyMsgEl_33554837[0].innerHTML = "";
    }
    

  
}

function ntSubDuration(a_1509950276, b_1509950277) {
  var result_1509950278 = ({seconds: 0, nanosecond: 0});

    result_1509950278 = nimCopy(result_1509950278, normalize_1509949899(HEX2D_1509949466(a_1509950276.seconds, b_1509950277.seconds), HEX2D_1509949470(a_1509950276.nanosecond, b_1509950277.nanosecond)), NTI1509949472);

  return result_1509950278;

}

function ntAddDuration(a_1509950265, b_1509950266) {
  var result_1509950267 = ({seconds: 0, nanosecond: 0});

    result_1509950267 = nimCopy(result_1509950267, normalize_1509949899(HEX2B_1509949458(a_1509950265.seconds, b_1509950266.seconds), HEX2B_1509949462(a_1509950265.nanosecond, b_1509950266.nanosecond)), NTI1509949472);

  return result_1509950267;

}

function evaluateInterval_1509952728(dt_1509952729, interval_1509952730) {
  var result_1509952733 = {Field0: ({seconds: 0, nanosecond: 0}), Field1: ({seconds: 0, nanosecond: 0})};

    var months_1509952734 = HEX2B_1509949462(HEX2A_1509949454(interval_1509952730.years, 12), interval_1509952730.months);
    var curYear_1509952735 = dt_1509952729.year;
    var curMonth_1509952736 = month_1509950602(dt_1509952729);
    result_1509952733 = nimCopy(result_1509952733, {Field0: ({seconds: 0, nanosecond: 0}), Field1: ({seconds: 0, nanosecond: 0})}, NTI1509951525);
    if ((months_1509952734 < 0)) {
    Label1: do {
      var mth_1509952749 = 0;
      var colontmp__33557798 = 0;
      colontmp__33557798 = HEX2A_1509949454(-1, months_1509952734);
      var res_33557799 = colontmp__33557798;
      Label2: do {
          Label3: while (true) {
          if (!(1 <= res_33557799)) break Label3;
            mth_1509952749 = res_33557799;
            if ((curMonth_1509952736 == 1)) {
            curMonth_1509952736 = 12;
            curYear_1509952735 = subInt(curYear_1509952735, 1);
            }
            else {
            curMonth_1509952736 = subInt(curMonth_1509952736, 1);
            }
            
            var days_1509952762 = getDaysInMonth_1509949612(curMonth_1509952736, curYear_1509952735);
            result_1509952733.Field0 = nimCopy(result_1509952733.Field0, ntSubDuration(result_1509952733.Field0, initDuration_1509949832(0, 0, 0, 0, 0, 0, days_1509952762, 0)), NTI1509949472);
            res_33557799 = subInt(res_33557799, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      Label4: do {
        var mth_1509952767 = 0;
        var res_33557802 = 1;
        Label5: do {
            Label6: while (true) {
            if (!(res_33557802 <= months_1509952734)) break Label6;
              mth_1509952767 = res_33557802;
              var days_1509952768 = getDaysInMonth_1509949612(curMonth_1509952736, curYear_1509952735);
              result_1509952733.Field0 = nimCopy(result_1509952733.Field0, ntAddDuration(result_1509952733.Field0, initDuration_1509949832(0, 0, 0, 0, 0, 0, days_1509952768, 0)), NTI1509949472);
              if ((curMonth_1509952736 == 12)) {
              curMonth_1509952736 = 1;
              curYear_1509952735 = addInt(curYear_1509952735, 1);
              }
              else {
              curMonth_1509952736 = addInt(curMonth_1509952736, 1);
              }
              
              res_33557802 = addInt(res_33557802, 1);
            }
        } while (false);
      } while (false);
    }
    
    result_1509952733.Field0 = nimCopy(result_1509952733.Field0, ntAddDuration(result_1509952733.Field0, initDuration_1509949832(0, 0, 0, 0, 0, 0, interval_1509952730.days, interval_1509952730.weeks)), NTI1509949472);
    result_1509952733.Field1 = nimCopy(result_1509952733.Field1, initDuration_1509949832(interval_1509952730.nanoseconds, interval_1509952730.microseconds, interval_1509952730.milliseconds, interval_1509952730.seconds, interval_1509952730.minutes, interval_1509952730.hours, 0, 0), NTI1509949472);

  return result_1509952733;

}

function ntEqDuration(a_1509950306, b_1509950307) {
    var Temporary1;

  var result_1509950308 = false;

    if (!(a_1509950306.seconds == b_1509950307.seconds)) Temporary1 = false; else {      Temporary1 = (a_1509950306.nanosecond == b_1509950307.nanosecond);    }    result_1509950308 = Temporary1;

  return result_1509950308;

}

function zonedTimeFromAdjTime_1509950772(zone_1509950773, adjTime_1509950774) {
  var result_1509950775 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1509950775 = nimCopy(result_1509950775, zone_1509950773.zonedTimeFromAdjTimeImpl(adjTime_1509950774), NTI1509949477);

  return result_1509950775;

}

function toAdjTime_1509950811(dt_1509950812) {
  var result_1509950813 = ({seconds: 0, nanosecond: 0});

    var epochDay_1509950814 = toEpochDay_1509949638(monthday_1509950594(dt_1509950812), month_1509950602(dt_1509950812), dt_1509950812.year);
    var seconds_1509950815 = [HEX2A_1509949450(epochDay_1509950814, 86400)];
    inc_1509949481(seconds_1509950815, 0, HEX2A_1509949454(dt_1509950812.hour, 3600));
    inc_1509949481(seconds_1509950815, 0, HEX2A_1509949454(dt_1509950812.minute, 60));
    inc_1509949481(seconds_1509950815, 0, dt_1509950812.second);
    result_1509950813 = nimCopy(result_1509950813, initTime_1509950357(seconds_1509950815[0], dt_1509950812.nanosecond), NTI1509949470);

  return result_1509950813;

}

function toTime_1509950691(dt_1509950692) {
  var result_1509950693 = ({seconds: 0, nanosecond: 0});

    if (!(!((dt_1509950692.monthdayZero == 0)))) {
    failedAssertImpl_251658296(makeNimstrLit("times.nim(1075, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    var epochDay_1509950699 = toEpochDay_1509949638(monthday_1509950594(dt_1509950692), month_1509950602(dt_1509950692), dt_1509950692.year);
    var seconds_1509950700 = [HEX2A_1509949450(epochDay_1509950699, 86400)];
    inc_1509949481(seconds_1509950700, 0, HEX2A_1509949454(dt_1509950692.hour, 3600));
    inc_1509949481(seconds_1509950700, 0, HEX2A_1509949454(dt_1509950692.minute, 60));
    inc_1509949481(seconds_1509950700, 0, dt_1509950692.second);
    inc_1509949481(seconds_1509950700, 0, dt_1509950692.utcOffset);
    result_1509950693 = nimCopy(result_1509950693, initTime_1509950357(seconds_1509950700[0], dt_1509950692.nanosecond), NTI1509949470);

  return result_1509950693;

}

function HEX2B_1509952790(dt_1509952791, interval_1509952792) {
  var result_1509952793 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var colontmp__33557796 = evaluateInterval_1509952728(dt_1509952791, interval_1509952792);
    var adjDur_1509952794 = nimCopy(null, colontmp__33557796["Field0"], NTI1509949472);
    var absDur_1509952795 = nimCopy(null, colontmp__33557796["Field1"], NTI1509949472);
    if (!(ntEqDuration(adjDur_1509952794, DurationZero_1509949813))) {
    var zt_1509952796 = zonedTimeFromAdjTime_1509950772(dt_1509952791.timezone, ntAddTime(toAdjTime_1509950811(dt_1509952791), adjDur_1509952794));
    if (!(ntEqDuration(absDur_1509952795, DurationZero_1509949813))) {
    zt_1509952796 = nimCopy(zt_1509952796, zonedTimeFromTime_1509950758(dt_1509952791.timezone, ntAddTime(zt_1509952796.time, absDur_1509952795)), NTI1509949477);
    result_1509952793 = nimCopy(result_1509952793, initDateTime_1509950701(zt_1509952796, dt_1509952791.timezone), NTI1509949471);
    }
    else {
      result_1509952793 = nimCopy(result_1509952793, initDateTime_1509950701(zt_1509952796, dt_1509952791.timezone), NTI1509949471);
    }
    
    }
    else {
      var zt_1509952797 = zonedTimeFromTime_1509950758(dt_1509952791.timezone, ntAddTime(toTime_1509950691(dt_1509952791), absDur_1509952795));
      result_1509952793 = nimCopy(result_1509952793, initDateTime_1509950701(zt_1509952797, dt_1509952791.timezone), NTI1509949471);
    }
    

  return result_1509952793;

}

function HEX2D_1509952476(ti_1509952477) {
  var result_1509952478 = ({nanoseconds: 0, microseconds: 0, milliseconds: 0, seconds: 0, minutes: 0, hours: 0, days: 0, weeks: 0, months: 0, years: 0});

    result_1509952478 = nimCopy(result_1509952478, {nanoseconds: negInt(ti_1509952477.nanoseconds), microseconds: negInt(ti_1509952477.microseconds), milliseconds: negInt(ti_1509952477.milliseconds), seconds: negInt(ti_1509952477.seconds), minutes: negInt(ti_1509952477.minutes), hours: negInt(ti_1509952477.hours), days: negInt(ti_1509952477.days), weeks: negInt(ti_1509952477.weeks), months: negInt(ti_1509952477.months), years: negInt(ti_1509952477.years)}, NTI1509949475);

  return result_1509952478;

}

function HEX2D_1509952798(dt_1509952799, interval_1509952800) {
  var result_1509952801 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1509952801 = nimCopy(result_1509952801, HEX2B_1509952790(dt_1509952799, HEX2D_1509952476(interval_1509952800)), NTI1509949471);

  return result_1509952801;

}

function initTimeInterval_1509952460(nanoseconds_1509952461, microseconds_1509952462, milliseconds_1509952463, seconds_1509952464, minutes_1509952465, hours_1509952466, days_1509952467, weeks_1509952468, months_1509952469, years_1509952470) {
  var result_1509952471 = ({nanoseconds: 0, microseconds: 0, milliseconds: 0, seconds: 0, minutes: 0, hours: 0, days: 0, weeks: 0, months: 0, years: 0});

    result_1509952471.nanoseconds = nanoseconds_1509952461;
    result_1509952471.microseconds = microseconds_1509952462;
    result_1509952471.milliseconds = milliseconds_1509952463;
    result_1509952471.seconds = seconds_1509952464;
    result_1509952471.minutes = minutes_1509952465;
    result_1509952471.hours = hours_1509952466;
    result_1509952471.days = days_1509952467;
    result_1509952471.weeks = weeks_1509952468;
    result_1509952471.months = months_1509952469;
    result_1509952471.years = years_1509952470;

  return result_1509952471;

}

function months_1509952722(m_1509952723) {
  var result_1509952724 = ({nanoseconds: 0, microseconds: 0, milliseconds: 0, seconds: 0, minutes: 0, hours: 0, days: 0, weeks: 0, months: 0, years: 0});

    result_1509952724 = nimCopy(result_1509952724, initTimeInterval_1509952460(0, 0, 0, 0, 0, 0, 0, 0, m_1509952723, 0), NTI1509949475);

  return result_1509952724;

}

function allowTake_33556271(p_33556272) {
  var result_33556273 = false;

  BeforeRet: do {
    showNoMyMsg_33555003();
    result_33556273 = false;
    if (eqStrings(p_33556272.date_start, [])) {
    result_33556273 = true;
    break BeforeRet;
    }
    
    if (eqStrings(p_33556272.date_finish, [])) {
    result_33556273 = false;
    break BeforeRet;
    }
    
    if ((cmpStrings(p_33556272.date_finish, format_1509952244(HEX2D_1509952798(now_1509950882(), months_1509952722(4)), normalDateFmt_33554451, DefaultLocale_1509951047)) < 0)) {
    result_33556273 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_33556273;

}

function showStreetsEnable_33555920() {
    showStreetsEnabled_33554794[0] = true;

  
}

function count_33556643(s_33556645, x_33556646) {
  var result_33556647 = 0;

    Label1: do {
      var itm_33556651 = [];
      var i_33557805 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_33557805 < (s_33556645).length)) break Label3;
            itm_33556651 = s_33556645[chckIndx(i_33557805, 0, (s_33556645).length - 1)];
            if (eqStrings(itm_33556651, x_33556646)) {
            result_33556647 = addInt(result_33556647, 1);
            }
            
            i_33557805 = addInt(i_33557805, 1);
          }
      } while (false);
    } while (false);

  return result_33556647;

}

function mapDownload_33556414() {
    
function HEX3Aanonymous_33556432(r_33556433) {
        var prgsT_33556442 = (r_33556433.getTotal());
        var prgsP_33556451 = (r_33556433.getProcessed());
        progressOn_33554796[0] = (prgsP_33556451 < prgsT_33556442);
        if (!(progressOn_33554796[0])) {
        var Temporary1 = nimCopy(null, currProcess_33554790[0].sector_internal_id, NTI50331655);
        dwnloadedMaps_587202620[0].push(Temporary1);;
        localStorage.setItem(("dwnloadedMaps"), (JSON.stringify(dwnloadedMaps_587202620[0])));
        }
        
        progressProc_33554797[0] = ((HEX2F_50334791(mulInt(prgsP_33556451, 100), prgsT_33556442)) | 0);
        redraw_1090520045(kxi_1090519104[0]);

      
    }

    var max_33556431 = (map.getBaseLayer().getProvider().max);
    map.storeContent((HEX3Aanonymous_33556432), (sectStreetGrp_33554836[0].getBoundingBox()), (subInt(max_33556431, 4)), (max_33556431));

  
}

function noInternet_33555909() {
  var result_33555910 = null;

  BeforeRet: do {
    var tmp_33555911 = tree_1107296945(70, []);
    result_33555910 = tmp_33555911;
    if (isInternet_587202682[0]) {
    break BeforeRet;
    }
    
    var tmp_33555912 = tree_1107296945(70, []);
    tmp_33555912.class = "badge badge-pill badge-danger";
    add_1107296882(tmp_33555912, text_1107296997(makeNimstrLit("\xD0\x9D\xD0\xB5\xD1\x82 \xD0\xB8\xD0\xBD\xD1\x82\xD0\xB5\xD1\x80\xD0\xBD\xD0\xB5\xD1\x82\xD0\xB0")));
    result_33555910 = tmp_33555912;
  } while (false);

  return result_33555910;

}

function onMsgClck_33555001() {
    
function HEX3Aanonymous_33556240() {
        errMsg_587202592[0] = nimCopy(null, [], NTI50331655);

      
    }

  var result_33556239 = null;

    result_33556239 = HEX3Aanonymous_33556240;

  return result_33556239;

}

function showErrMsg_33555913() {
  var result_33555914 = null;

  BeforeRet: do {
    var tmp_33555915 = tree_1107296945(70, []);
    result_33555914 = tmp_33555915;
    if (eqStrings(errMsg_587202592[0], [])) {
    break BeforeRet;
    }
    
    var tmp_33555916 = tree_1107296945(43, []);
    tmp_33555916.class = "alert alert-danger fade show";
    setAttr_1107296808(tmp_33555916, "role", "alert");
    addEventHandler_1090520233(tmp_33555916, 0, onMsgClck_33555001(), kxi_1090519104[0]);
    add_1107296882(tmp_33555916, text_1107296997(errMsg_587202592[0]));
    var tmp_33555917 = tree_1107296945(59, []);
    var tmp_33555918 = tree_1107296945(51, []);
    add_1107296882(tmp_33555918, text_1107296997(makeNimstrLit(" \xD0\x9D\xD0\xB0\xD0\xB6\xD0\xBC\xD0\xB8 \xD1\x87\xD1\x82\xD0\xBE\xD0\xB1 \xD1\x83\xD0\xB1\xD1\x80\xD0\xB0\xD1\x82\xD1\x8C")));
    add_1107296882(tmp_33555917, tmp_33555918);
    add_1107296882(tmp_33555916, tmp_33555917);
    result_33555914 = tmp_33555916;
  } while (false);

  return result_33555914;

}

function parseEnum_33555926(s_33555928) {
    var Temporary1;

  var result_33555929 = 0;

    switch (toJSStr(nimIdentNormalize_654311529(s_33555928))) {
    case "strnotstarted":
      Temporary1 = 0;
      break;
    case "strstarted":
      Temporary1 = 1;
      break;
    case "strfinished":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: (makeNimstrLit("Invalid enum value: ") || []).concat(s_33555928 || []), parent: null, m_type: NTI50332341, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_33555929 = Temporary1;

  return result_33555929;

}

function substrEq_654311653(s_654311654, pos_654311655, substr_654311656) {
  var result_654311657 = false;

  BeforeRet: do {
    var i_654311658 = 0;
    var length_654311659 = (substr_654311656).length;
    Label1: do {
        Label2: while (true) {
        if (!(((i_654311658 < length_654311659) && (addInt(pos_654311655, i_654311658) < (s_654311654).length)) && (s_654311654[chckIndx(addInt(pos_654311655, i_654311658), 0, (s_654311654).length - 1)] == substr_654311656[chckIndx(i_654311658, 0, (substr_654311656).length - 1)]))) break Label2;
          i_654311658 = addInt(i_654311658, 1);
        }
    } while (false);
    result_654311657 = (i_654311658 == length_654311659);
    break BeforeRet;
  } while (false);

  return result_654311657;

}

function nsuSplitString(s_654311945, sep_654311946, maxsplit_654311947) {
  var result_654311948 = [];

    if (!((0 < (sep_654311946).length))) {
    failedAssertImpl_251658296(makeNimstrLit("strutils.nim(739, 11) `sep.len > 0` "));
    }
    
    result_654311948 = nimCopy(null, [], NTI654311798);
    Label1: do {
      var xHEX60gensym72_654311959 = [];
      var lastHEX60gensym41_33557821 = 0;
      var splitsHEX60gensym41_33557822 = maxsplit_654311947;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym41_33557821 <= (s_654311945).length)) break Label3;
            var firstHEX60gensym41_33557824 = lastHEX60gensym41_33557821;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym41_33557821 < (s_654311945).length) && !(substrEq_654311653(s_654311945, lastHEX60gensym41_33557821, sep_654311946)))) break Label5;
                  lastHEX60gensym41_33557821 = addInt(lastHEX60gensym41_33557821, 1);
                }
            } while (false);
            if ((splitsHEX60gensym41_33557822 == 0)) {
            lastHEX60gensym41_33557821 = (s_654311945).length;
            }
            
            xHEX60gensym72_654311959 = substr_50335122(s_654311945, firstHEX60gensym41_33557824, subInt(lastHEX60gensym41_33557821, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym72_654311959, NTI50331655);
            result_654311948.push(Temporary6);;
            if ((splitsHEX60gensym41_33557822 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym41_33557822 = subInt(splitsHEX60gensym41_33557822, 1);
            lastHEX60gensym41_33557821 = addInt(lastHEX60gensym41_33557821, (sep_654311946).length);
          }
      } while (false);
    } while (false);

  return result_654311948;

}

function toHexImpl_654312141(x_654312142, len_654312143, handleNegative_654312144) {
  var result_654312145 = [];

    var n_654312147 = x_654312142;
    result_654312145 = nimCopy(null, mnewString(len_654312143), NTI50331655);
    Label1: do {
      var j_654312153 = 0;
      var colontmp__33557832 = 0;
      colontmp__33557832 = subInt(len_654312143, 1);
      var res_33557833 = colontmp__33557832;
      Label2: do {
          Label3: while (true) {
          if (!(0 <= res_33557833)) break Label3;
            j_654312153 = res_33557833;
            result_654312145[chckIndx(j_654312153, 0, (result_654312145).length - 1)] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_654312147 & 15), 0, (makeNimstrLit("0123456789ABCDEF")).length - 1)];
            n_654312147 = (n_654312147 >>> 4);
            if (((n_654312147 == 0) && handleNegative_654312144)) {
            n_654312147 = 4294967295;
            }
            
            res_33557833 = subInt(res_33557833, 1);
          }
      } while (false);
    } while (false);

  return result_654312145;

}

function toHex_654313272(x_654313274, len_654313275) {
  var result_654313276 = [];

    result_654313276 = nimCopy(null, toHexImpl_654312141((x_654313274 >>> 0), len_654313275, (x_654313274 < 0)), NTI50331655);

  return result_654313276;

}

function encodeUrl_1660944424(s_1660944425, usePlus_1660944426) {
    var Temporary1;

  var result_1660944427 = [];

    result_1660944427 = nimCopy(null, mnewString(0), NTI50331655);
    if (usePlus_1660944426) {
    Temporary1 = makeNimstrLit("+");
    }
    else {
    Temporary1 = makeNimstrLit("%20");
    }
    
    var fromSpace_1660944432 = nimCopy(null, Temporary1, NTI50331655);
    Label2: do {
      var c_1660944433 = 0;
      var i_33557828 = 0;
      var L_33557829 = (s_1660944425).length;
      Label3: do {
          Label4: while (true) {
          if (!(i_33557828 < L_33557829)) break Label4;
            c_1660944433 = s_1660944425[chckIndx(i_33557828, 0, (s_1660944425).length - 1)];
            switch (c_1660944433) {
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 45:
            case 46:
            case 95:
            case 126:
              addChar(result_1660944427, c_1660944433);;
              break;
            case 32:
              result_1660944427.push.apply(result_1660944427, fromSpace_1660944432);;
              break;
            default: 
              addChar(result_1660944427, 37);;
              result_1660944427.push.apply(result_1660944427, toHex_654313272(c_1660944433, 2));;
              break;
            }
            i_33557828 = addInt(i_33557828, 1);
            if (!(((s_1660944425).length == L_33557829))) {
            failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_1660944427;

}

function setStrStatus_33555921(iStr_33555922) {
    
function HEX3Aanonymous_33555925() {
        var curSt_33555987 = parseEnum_33555926(reprEnum(currStreets_33554792[0][chckIndx(iStr_33555922, 0, (currStreets_33554792[0]).length - 1)].status, NTI1493172230));
        if ((curSt_33555987 == 2)) {
        currStreets_33554792[0][chckIndx(iStr_33555922, 0, (currStreets_33554792[0]).length - 1)].status = 0;
        }
        else {
          currStreets_33554792[0][chckIndx(iStr_33555922, 0, (currStreets_33554792[0]).length - 1)].status = addInt(curSt_33555987, 1);
        }
        

      
    }

  var result_33555924 = null;

    result_33555924 = HEX3Aanonymous_33555925;

  return result_33555924;

}

function nsuJoinSep(a_654312849, sep_654312850) {
  var result_654312851 = [];

    if ((0 < (a_654312849).length)) {
    var L_654312858 = mulInt((sep_654312850).length, subInt((a_654312849).length, 1));
    Label1: do {
      var i_654312866 = 0;
      var colontmp__33557836 = 0;
      colontmp__33557836 = (a_654312849).length - 1;
      var res_33557837 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_33557837 <= colontmp__33557836)) break Label3;
            i_654312866 = res_33557837;
            L_654312858 = addInt(L_654312858, (a_654312849[chckIndx(i_654312866, 0, (a_654312849).length - 1)]).length);
            res_33557837 = addInt(res_33557837, 1);
          }
      } while (false);
    } while (false);
    result_654312851 = nimCopy(null, mnewString(0), NTI50331655);
    result_654312851.push.apply(result_654312851, a_654312849[chckIndx(0, 0, (a_654312849).length - 1)]);;
    Label4: do {
      var i_654312878 = 0;
      var colontmp__33557840 = 0;
      colontmp__33557840 = (a_654312849).length - 1;
      var res_33557841 = 1;
      Label5: do {
          Label6: while (true) {
          if (!(res_33557841 <= colontmp__33557840)) break Label6;
            i_654312878 = res_33557841;
            result_654312851.push.apply(result_654312851, sep_654312850);;
            result_654312851.push.apply(result_654312851, a_654312849[chckIndx(i_654312878, 0, (a_654312849).length - 1)]);;
            res_33557841 = addInt(res_33557841, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      result_654312851 = nimCopy(null, [], NTI50331655);
    }
    

  return result_654312851;

}

function addEventHandler_1090520225(n_1090520226, k_1090520227, action_1090520228, kxi_1090520229) {
    
function wrapper_1090520230(ev_1090520231, n_1090520232) {
        action_1090520228(ev_1090520231, n_1090520232);
        if (!(kxi_1090520229.surpressRedraws)) {
        redraw_1090520045(kxi_1090520229);
        }
        

      
    }

    addEventListener_1107297048(n_1090520226, k_1090520227, wrapper_1090520230);

  
}

function setStrTotFam_33555997(iStr_33555998) {
    
function HEX3Aanonymous_33556003(ev_33556004, n_33556005) {
        var Temporary1;

        if ((n_33556005.text == "")) {
        Temporary1 = 0;
        }
        else {
        Temporary1 = parseInt(n_33556005.text, 10);
        }
        
        currStreetsTmp_33554793[0][chckIndx(iStr_33555998, 0, (currStreetsTmp_33554793[0]).length - 1)].totalFamilies = chckRange(Temporary1, 0, 2147483647);

      
    }

  var result_33556002 = null;

    result_33556002 = HEX3Aanonymous_33556003;

  return result_33556002;

}

function setPolyStyleByStat_587203190(p_587203191, stat_587203192) {
    var Temporary1;
    var Temporary2;
    
function innerHEX60gensym116_587203214() {
      var result_587203215 = null;

      BeforeRet: do {
        var a_587203216 = null;
        a_587203216 = {};
        var fmtRes_587203229 = [mnewString(0)];
        fmtRes_587203229[0].push.apply(fmtRes_587203229[0], makeNimstrLit("rgba("));;
        formatValue_1459617954(fmtRes_587203229, 0, mClr_587203202, []);
        fmtRes_587203229[0].push.apply(fmtRes_587203229[0], makeNimstrLit(", "));;
        formatValue_1459617954(fmtRes_587203229, 0, opas_587203211, []);
        fmtRes_587203229[0].push.apply(fmtRes_587203229[0], makeNimstrLit(")"));;
        a_587203216.strokeColor = toJSStr(fmtRes_587203229[0]);
        a_587203216.lineWidth = 10;
        result_587203215 = a_587203216;
        break BeforeRet;
      } while (false);

      return result_587203215;

    }

    if ((stat_587203192 == 0)) {
    Temporary1 = makeNimstrLit("255, 0, 0");
    }
    else {
    if ((stat_587203192 == 1)) {
    Temporary1 = makeNimstrLit("0, 0, 255");
    }
    else {
    Temporary1 = makeNimstrLit("0, 255, 0");
    }
    }
    var mClr_587203202 = nimCopy(null, Temporary1, NTI50331655);
    if ((curEngineType_587202619[0] == engineTypes_587202618[0].P2D)) {
    Temporary2 = makeNimstrLit("0.3");
    }
    else {
    Temporary2 = makeNimstrLit("0.5");
    }
    
    var opas_587203211 = nimCopy(null, Temporary2, NTI50331655);
    p_587203191.setStyle((innerHEX60gensym116_587203214()));

  
}

function saveStreets_33556006() {
    
function HEX3Aanonymous_33556009() {
        
function HEX3Aanonymous_33556091(value_33556092) {
          
        }
        
function HEX3Aanonymous_33556099(error_33556100) {
            console.log(("error:"), (error_33556100.Field0));

          
        }
        
function HEX3Aanonymous_33556125() {
            redraw_1090520045(kxi_1090519104[0]);

          
        }

        showStreetsEnabled_33554794[0] = false;
        var streets_33556010 = [];
        var polyStrts_33556015 = sectStreetGrp_33554836[0].getObjects();
        Label1: do {
          var i_33556057 = 0;
          var str_33556058 = ({id: 0, sector_id: 0, name: [], geometry: [], totalFamilies: 0, sectorName: [], status: 0});
          var i_33557846 = 0;
          var L_33557847 = (currStreets_33554792[0]).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_33557846 < L_33557847)) break Label3;
                i_33556057 = i_33557846;
                str_33556058 = nimCopy(str_33556058, currStreets_33554792[0][chckIndx(i_33557846, 0, (currStreets_33554792[0]).length - 1)], NTI1493172233);
                var id_33556059 = str_33556058.id;
                var nSt_33556073 = parseEnum_33555926(reprEnum(str_33556058.status, NTI1493172230));
                currStreets_33554792[0][chckIndx(i_33556057, 0, (currStreets_33554792[0]).length - 1)].totalFamilies = currStreetsTmp_33554793[0][chckIndx(i_33556057, 0, (currStreetsTmp_33554793[0]).length - 1)].totalFamilies;
                streets_33556010.push(nsuJoinSep([HEX24_369098755(str_33556058.id), HEX24_369098755(str_33556058.sector_id), HEX24_369098755(nSt_33556073), HEX24_369098755(currStreets_33554792[0][chckIndx(i_33556057, 0, (currStreets_33554792[0]).length - 1)].totalFamilies)], makeNimstrLit(",")));;
                Label4: do {
                  var p_33556078 = null;
                  var v_33557845 = null;
                  for (var k in polyStrts_33556015) {
                    if (!polyStrts_33556015.hasOwnProperty(k)) continue;
                    v_33557845=polyStrts_33556015[k];
                  p_33556078 = v_33557845;
                  var pStrtId_33556087 = (p_33556078.getData());
                  if ((id_33556059 == pStrtId_33556087)) {
                  setPolyStyleByStat_587203190(p_33556078, str_33556058.status);
                  }
                  
                  }
                } while (false);
                i_33557846 = addInt(i_33557846, 1);
                if (!(((currStreets_33554792[0]).length == L_33557847))) {
                failedAssertImpl_251658296(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        var setStr_33556088 = nsuJoinSep(streets_33556010, makeNimstrLit(";"));
        setTs_33555026();
        var fmtRes_33556089 = [mnewString(0)];
        fmtRes_33556089[0].push.apply(fmtRes_33556089[0], makeNimstrLit("token="));;
        formatValue_1459617954(fmtRes_33556089, 0, currUser_587202590[0].token, []);
        fmtRes_33556089[0].push.apply(fmtRes_33556089[0], makeNimstrLit("&streets="));;
        formatValue_1459617954(fmtRes_33556089, 0, setStr_33556088, []);
        var stmUpd_33556090 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/streets/status/update?") || []).concat(fmtRes_33556089[0] || []), [], []);
        stmUpd_33556090.observe((HEX3Aanonymous_33556091), (HEX3Aanonymous_33556099), (HEX3Aanonymous_33556125));

      
    }

  var result_33556008 = null;

    result_33556008 = HEX3Aanonymous_33556009;

  return result_33556008;

}

function showStreets_33556141() {
            var Temporary4;

  var result_33556142 = null;

    var strSt_33556145 = {Field0: "danger", Field1: " - не пройдена"};
    var tmp_33556146 = tree_1107296945(43, []);
    var tmp_33556147 = tree_1107296945(43, []);
    tmp_33556147.class = "d-flex justify-content-center mt-6";
    var tmp_33556148 = tree_1107296945(43, []);
    tmp_33556148.class = "overflow-auto px-3 vh-75 w-75 bg-light shadow-lg border rounded-lg";
    Label1: do {
      var i_33556163 = 0;
      var str_33556164 = ({id: 0, sector_id: 0, name: [], geometry: [], totalFamilies: 0, sectorName: [], status: 0});
      var i_33557815 = 0;
      var L_33557816 = (currStreets_33554792[0]).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_33557815 < L_33557816)) break Label3;
            i_33556163 = i_33557815;
            str_33556164 = nimCopy(str_33556164, currStreets_33554792[0][chckIndx(i_33557815, 0, (currStreets_33554792[0]).length - 1)], NTI1493172233);
            var tf_33556165 = toJSStr(HEX24_369098755(str_33556164.totalFamilies));
            var sSt_33556176 = parseEnum_33555926(reprEnum(str_33556164.status, NTI1493172230));
            var arrSectName_33556177 = nsuSplitString(str_33556164.sectorName, makeNimstrLit(" "), -1);
            var pc_33556178 = nimCopy(null, (Temporary4 = nsuSplitString(arrSectName_33556177[chckIndx(0, 0, (arrSectName_33556177).length - 1)], makeNimstrLit("-"), -1), Temporary4)[chckIndx(0, 0, (Temporary4).length - 1)], NTI50331655);
            var cityName_33556179 = nimCopy(null, arrSectName_33556177[chckIndx(1, 0, (arrSectName_33556177).length - 1)], NTI50331655);
            var fmtRes_33556184 = [mnewString(0)];
            formatValue_1459617954(fmtRes_33556184, 0, pc_33556178, []);
            fmtRes_33556184[0].push.apply(fmtRes_33556184[0], makeNimstrLit(" "));;
            formatValue_1459617954(fmtRes_33556184, 0, cityName_33556179, []);
            var ci_33556185 = encodeUrl_1660944424(fmtRes_33556184[0], true);
            var st_33556186 = encodeUrl_1660944424(str_33556164.name, true);
            var fmtRes_33556191 = [mnewString(0)];
            fmtRes_33556191[0].push.apply(fmtRes_33556191[0], makeNimstrLit("https://www.dasoertliche.de/?zvo_ok=0&ci="));;
            formatValue_1459617954(fmtRes_33556191, 0, ci_33556185, []);
            fmtRes_33556191[0].push.apply(fmtRes_33556191[0], makeNimstrLit("&st="));;
            formatValue_1459617954(fmtRes_33556191, 0, st_33556186, []);
            fmtRes_33556191[0].push.apply(fmtRes_33556191[0], makeNimstrLit("&radius=0&form_name=search_nat_ext"));;
            var dasOertl_33556192 = nimCopy(null, fmtRes_33556191[0], NTI50331655);
            if ((sSt_33556176 == 1)) {
            var colontmp__33557808 = "primary";
            var colontmp__33557809 = " - не закончена";
            strSt_33556145 = nimCopy(strSt_33556145, {Field0: colontmp__33557808, Field1: colontmp__33557809}, NTI33555503);
            }
            else {
            if ((sSt_33556176 == 2)) {
            var colontmp__33557810 = "success";
            var colontmp__33557811 = " - пройдена";
            strSt_33556145 = nimCopy(strSt_33556145, {Field0: colontmp__33557810, Field1: colontmp__33557811}, NTI33555503);
            }
            else {
              var colontmp__33557812 = "danger";
              var colontmp__33557813 = " - не начата";
              strSt_33556145 = nimCopy(strSt_33556145, {Field0: colontmp__33557812, Field1: colontmp__33557813}, NTI33555503);
            }
            }
            var tmp_33556149 = tree_1107296945(43, []);
            tmp_33556149.class = "py-2 row border-bottom";
            var tmp_33556150 = tree_1107296945(106, []);
            setAttr_1107296808(tmp_33556150, "type", "button");
            var fmtRes_33556211 = [mnewString(0)];
            fmtRes_33556211[0].push.apply(fmtRes_33556211[0], makeNimstrLit("text-nowrap overflow-auto ml-2 mr-2 btn btn-outline-"));;
            add_50333635(fmtRes_33556211, 0, strSt_33556145.Field0);
            fmtRes_33556211[0].push.apply(fmtRes_33556211[0], makeNimstrLit(" btn-sm"));;
            tmp_33556150.class = toJSStr(fmtRes_33556211[0]);
            addEventHandler_1090520233(tmp_33556150, 0, setStrStatus_33555921(i_33556163), kxi_1090519104[0]);
            add_1107296882(tmp_33556150, text_1107296997(str_33556164.name));
            add_1107296882(tmp_33556149, tmp_33556150);
            var tmp_33556151 = tree_1107296945(70, []);
            tmp_33556151.class = "tel-book";
            var tmp_33556152 = tree_1107296945(44, []);
            tmp_33556152.class = "pl-2";
            setAttr_1107296808(tmp_33556152, "href", toJSStr(dasOertl_33556192));
            setAttr_1107296808(tmp_33556152, "target", "_blank");
            add_1107296882(tmp_33556152, text_1107296997(makeNimstrLit("Alle")));
            add_1107296882(tmp_33556151, tmp_33556152);
            var tmp_33556153 = tree_1107296945(44, []);
            tmp_33556153.class = "pl-2";
            setAttr_1107296808(tmp_33556153, "href", toJSStr(nsuJoinSep([nimCopy(null, dasOertl_33556192, NTI50331655), makeNimstrLit("atfilter=1")], makeNimstrLit("&"))));
            setAttr_1107296808(tmp_33556153, "target", "_blank");
            add_1107296882(tmp_33556153, text_1107296997(makeNimstrLit("Private")));
            add_1107296882(tmp_33556151, tmp_33556153);
            add_1107296882(tmp_33556149, tmp_33556151);
            var tmp_33556154 = tree_1107296945(70, []);
            tmp_33556154.class = "ml-1";
            add_1107296882(tmp_33556154, text_1107296997(makeNimstrLit("- \xD1\x81\xD0\xB5\xD0\xBC\xD0\xB5\xD0\xB9:")));
            add_1107296882(tmp_33556149, tmp_33556154);
            var tmp_33556155 = tree_1107296945(105, []);
            setAttr_1107296808(tmp_33556155, "type", "number");
            setAttr_1107296808(tmp_33556155, "inputmode", "numeric");
            tmp_33556155.class = "col-2 ml-1 mr-2 px-1";
            setAttr_1107296808(tmp_33556155, "min", "0");
            setAttr_1107296808(tmp_33556155, "max", "100");
            tmp_33556155.id = ("strfam" + toJSStr((HEX24_369098755(i_33556163) || []).concat(cstrToNimstr(tf_33556165) || [])));
            valueHEX3D_1107296586(tmp_33556155, tf_33556165);
            setAttr_1107296808(tmp_33556155, "value", tf_33556165);
            addEventHandler_1090520225(tmp_33556155, 25, setStrTotFam_33555997(i_33556163), kxi_1090519104[0]);
            add_1107296882(tmp_33556149, tmp_33556155);
            add_1107296882(tmp_33556148, tmp_33556149);
            i_33557815 = addInt(i_33557815, 1);
            if (!(((currStreets_33554792[0]).length == L_33557816))) {
            failedAssertImpl_251658296(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    add_1107296882(tmp_33556147, tmp_33556148);
    var tmp_33556156 = tree_1107296945(43, []);
    var tmp_33556157 = tree_1107296945(106, []);
    setAttr_1107296808(tmp_33556157, "type", "button");
    tmp_33556157.class = "btn btn-success btn";
    addEventHandler_1090520233(tmp_33556157, 0, saveStreets_33556006(), kxi_1090519104[0]);
    add_1107296882(tmp_33556157, text_1107296997(makeNimstrLit("ok")));
    add_1107296882(tmp_33556156, tmp_33556157);
    add_1107296882(tmp_33556147, tmp_33556156);
    add_1107296882(tmp_33556146, tmp_33556147);
    result_33556142 = tmp_33556146;

  return result_33556142;

}

function initFromJson_1728053876(dst_1728053878, dst_1728053878_Idx, jsonNode_1728053879, jsonPath_1728053880, jsonPath_1728053880_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1291847697(jsonNode_1728053879, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_1728053880[jsonPath_1728053880_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet50[jsonNode_1728053879.kind] != undefined))) {
    var msgHEX60gensym62_1728053893 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet51), nimCopy(null, jsonPath_1728053880[jsonPath_1728053880_Idx], NTI50331655), reprEnum(jsonNode_1728053879.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym62_1728053893, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if (dst_1728053878[dst_1728053878_Idx].length < (Temporary1 = chckRange(len_1291848634(jsonNode_1728053879), 0, 2147483647), Temporary1)) { for (var i = dst_1728053878[dst_1728053878_Idx].length ; i < Temporary1 ; ++i) dst_1728053878[dst_1728053878_Idx].push(({id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []})); }
               else { dst_1728053878[dst_1728053878_Idx].length = Temporary1; };
    var orignalJsonPathLen_1728053899 = (jsonPath_1728053880[jsonPath_1728053880_Idx]).length;
    Label2: do {
      var i_1728053904 = 0;
      var colontmp__33557855 = 0;
      colontmp__33557855 = len_1291848634(jsonNode_1728053879);
      var i_33557856 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(i_33557856 < colontmp__33557855)) break Label4;
            i_1728053904 = i_33557856;
            addChar(jsonPath_1728053880[jsonPath_1728053880_Idx], 91);;
            addInt_285212889(jsonPath_1728053880, jsonPath_1728053880_Idx, i_1728053904);
            addChar(jsonPath_1728053880[jsonPath_1728053880_Idx], 93);;
            initFromJson_1728053496(dst_1728053878[dst_1728053878_Idx][chckIndx(i_1728053904, 0, (dst_1728053878[dst_1728053878_Idx]).length - 1)], HEX5BHEX5D_1291848767(jsonNode_1728053879, i_1728053904), jsonPath_1728053880, jsonPath_1728053880_Idx);
            (jsonPath_1728053880[jsonPath_1728053880_Idx].length = chckRange(orignalJsonPathLen_1728053899, 0, 2147483647));
            i_33557856 = addInt(i_33557856, 1);
          }
      } while (false);
    } while (false);

  
}

function initFromJson_1728053852(dst_1728053854, jsonNode_1728053855, jsonPath_1728053856, jsonPath_1728053856_Idx) {
    var originalJsonPathLen_1728053859 = (jsonPath_1728053856[jsonPath_1728053856_Idx]).length;
    jsonPath_1728053856[jsonPath_1728053856_Idx].push.apply(jsonPath_1728053856[jsonPath_1728053856_Idx], makeNimstrLit(".status"));;
    initFromJson_1728053416(dst_1728053854, "status", getOrDefault_1291849148(jsonNode_1728053855, makeNimstrLit("status")), jsonPath_1728053856, jsonPath_1728053856_Idx);
    (jsonPath_1728053856[jsonPath_1728053856_Idx].length = chckRange(originalJsonPathLen_1728053859, 0, 2147483647));
    jsonPath_1728053856[jsonPath_1728053856_Idx].push.apply(jsonPath_1728053856[jsonPath_1728053856_Idx], makeNimstrLit(".message"));;
    initFromJson_1291851003(dst_1728053854, "message", getOrDefault_1291849148(jsonNode_1728053855, makeNimstrLit("message")), jsonPath_1728053856, jsonPath_1728053856_Idx);
    (jsonPath_1728053856[jsonPath_1728053856_Idx].length = chckRange(originalJsonPathLen_1728053859, 0, 2147483647));
    jsonPath_1728053856[jsonPath_1728053856_Idx].push.apply(jsonPath_1728053856[jsonPath_1728053856_Idx], makeNimstrLit(".resp"));;
    initFromJson_1728053876(dst_1728053854, "resp", getOrDefault_1291849148(jsonNode_1728053855, makeNimstrLit("resp")), jsonPath_1728053856, jsonPath_1728053856_Idx);
    (jsonPath_1728053856[jsonPath_1728053856_Idx].length = chckRange(originalJsonPathLen_1728053859, 0, 2147483647));

  
}

function to_1728053828(node_1728053831) {
  var result_1728053833 = [({status: 0, message: [], resp: []})];

    var jsonPath_1728053834 = [[]];
    initFromJson_1728053852(result_1728053833[0], node_1728053831, jsonPath_1728053834, 0);

  return result_1728053833[0];

}

function parseResp_1728053823(bdy_1728053825) {
  var result_1728053827 = ({status: 0, message: [], resp: []});

    result_1728053827 = nimCopy(result_1728053827, to_1728053828(parseJson_1291850977(bdy_1728053825)), NTI1728053659);
    if (eqStrings(reprEnum(result_1728053827.status, NTI1493172229), makeNimstrLit("loggedOut"))) {
    currUser_587202590[0].token = nimCopy(null, [], NTI50331655);
    isShowNavMap_587202594[0] = false;
    var elMap_1728053921 = $(("#map-container"))[0];
    elMap_1728053921.classList.remove(("show-map"));
    redraw_1090520045(kxi_1090519104[0]);
    }
    

  return result_1728053827;

}

function editUsers_1728053260() {
    
function HEX3Aanonymous_1728053814() {
        
function HEX3Aanonymous_1728053817(value_1728053818) {
            var respUsers_1728053946 = parseResp_1728053823(value_1728053818.Field2);
            errMsg_587202592[0] = nimCopy(null, respUsers_1728053946.message, NTI50331655);
            allUsers_587202595[0] = nimCopy(null, respUsers_1728053946.resp, NTI1728053654);
            isShowUsers_587202593[0] = true;
            redraw_1090520045(kxi_1090519104[0]);

          
        }
        
function HEX3Aanonymous_1728053953(error_1728053954) {
            console.log(("error:"), (error_1728053954.Field0));

          
        }

        var fmtRes_1728053815 = [mnewString(0)];
        fmtRes_1728053815[0].push.apply(fmtRes_1728053815[0], makeNimstrLit("token="));;
        formatValue_1459617954(fmtRes_1728053815, 0, currUser_587202590[0].token, []);
        var rStm_1728053816 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/user/list?") || []).concat(fmtRes_1728053815[0] || []), [], []);
        rStm_1728053816.observe((HEX3Aanonymous_1728053817), (HEX3Aanonymous_1728053953));

      
    }

  var result_1728053813 = null;

    result_1728053813 = HEX3Aanonymous_1728053814;

  return result_1728053813;

}

function logout_33556244() {
    currUser_587202590[0].token = nimCopy(null, [], NTI50331655);
    document.cookie = "token=none;path=/";
    document.location.replace(("/"));

  
}

function initFromJson_1728053390(dst_1728053392, jsonNode_1728053393, jsonPath_1728053394, jsonPath_1728053394_Idx) {
    var originalJsonPathLen_1728053396 = (jsonPath_1728053394[jsonPath_1728053394_Idx]).length;
    jsonPath_1728053394[jsonPath_1728053394_Idx].push.apply(jsonPath_1728053394[jsonPath_1728053394_Idx], makeNimstrLit(".status"));;
    initFromJson_1728053416(dst_1728053392, "status", getOrDefault_1291849148(jsonNode_1728053393, makeNimstrLit("status")), jsonPath_1728053394, jsonPath_1728053394_Idx);
    (jsonPath_1728053394[jsonPath_1728053394_Idx].length = chckRange(originalJsonPathLen_1728053396, 0, 2147483647));
    jsonPath_1728053394[jsonPath_1728053394_Idx].push.apply(jsonPath_1728053394[jsonPath_1728053394_Idx], makeNimstrLit(".message"));;
    initFromJson_1291851003(dst_1728053392, "message", getOrDefault_1291849148(jsonNode_1728053393, makeNimstrLit("message")), jsonPath_1728053394, jsonPath_1728053394_Idx);
    (jsonPath_1728053394[jsonPath_1728053394_Idx].length = chckRange(originalJsonPathLen_1728053396, 0, 2147483647));
    jsonPath_1728053394[jsonPath_1728053394_Idx].push.apply(jsonPath_1728053394[jsonPath_1728053394_Idx], makeNimstrLit(".resp"));;
    initFromJson_1728053496(dst_1728053392.resp, getOrDefault_1291849148(jsonNode_1728053393, makeNimstrLit("resp")), jsonPath_1728053394, jsonPath_1728053394_Idx);
    (jsonPath_1728053394[jsonPath_1728053394_Idx].length = chckRange(originalJsonPathLen_1728053396, 0, 2147483647));

  
}

function to_1728053366(node_1728053369) {
  var result_1728053371 = [({status: 0, message: [], resp: ({id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []})})];

    var jsonPath_1728053372 = [[]];
    initFromJson_1728053390(result_1728053371[0], node_1728053369, jsonPath_1728053372, 0);

  return result_1728053371[0];

}

function parseResp_1728053361(bdy_1728053363) {
  var result_1728053365 = ({status: 0, message: [], resp: ({id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []})});

    result_1728053365 = nimCopy(result_1728053365, to_1728053366(parseJson_1291850977(bdy_1728053363)), NTI1728053322);
    if (eqStrings(reprEnum(result_1728053365.status, NTI1493172229), makeNimstrLit("loggedOut"))) {
    currUser_587202590[0].token = nimCopy(null, [], NTI50331655);
    isShowNavMap_587202594[0] = false;
    var elMap_1728053594 = $(("#map-container"))[0];
    elMap_1728053594.classList.remove(("show-map"));
    redraw_1090520045(kxi_1090519104[0]);
    }
    

  return result_1728053365;

}

function chgUser_1728053262(u_1728053263) {
    u_1728053263 = nimCopy(null, u_1728053263, NTI1493172227);
    
function HEX3Aanonymous_1728053266() {
        
function HEX3Aanonymous_1728053355(value_1728053356) {
            var respUser_1728053619 = parseResp_1728053361(value_1728053356.Field2);
            var respU_1728053620 = nimCopy(null, respUser_1728053619.resp, NTI1493172227);
            errMsg_587202592[0] = nimCopy(null, respUser_1728053619.message, NTI50331655);
            Label1: do {
              var i_1728053653 = 0;
              var u_1728053654 = ({id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []});
              var i_33557865 = 0;
              var L_33557866 = (allUsers_587202595[0]).length;
              Label2: do {
                  Label3: while (true) {
                  if (!(i_33557865 < L_33557866)) break Label3;
                    i_1728053653 = i_33557865;
                    u_1728053654 = nimCopy(u_1728053654, allUsers_587202595[0][chckIndx(i_33557865, 0, (allUsers_587202595[0]).length - 1)], NTI1493172227);
                    if ((u_1728053654.id == respU_1728053620.id)) {
                    allUsers_587202595[0][chckIndx(i_1728053653, 0, (allUsers_587202595[0]).length - 1)] = nimCopy(allUsers_587202595[0][chckIndx(i_1728053653, 0, (allUsers_587202595[0]).length - 1)], respU_1728053620, NTI1493172227);
                    break Label1;
                    }
                    
                    i_33557865 = addInt(i_33557865, 1);
                    if (!(((allUsers_587202595[0]).length == L_33557866))) {
                    failedAssertImpl_251658296(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            redraw_1090520045(kxi_1090519104[0]);

          
        }
        
function HEX3Aanonymous_1728053661(error_1728053662) {
            console.log(("error:"), (error_1728053662.Field0));

          
        }

        var edU_1728053267 = nimCopy(null, u_1728053263, NTI1493172227);
        var cntr_1728053268 = (makeNimstrLit(".list-users .frm") || []).concat(HEX24_369098755(u_1728053263.id) || []);
        var inpFirstNameId_1728053269 = toJSStr(nsuJoinSep([nimCopy(null, cntr_1728053268, NTI50331655), (makeNimstrLit("#inputFirstName") || []).concat(HEX24_369098755(u_1728053263.id) || [])], makeNimstrLit(" ")));
        var inpLastNameId_1728053270 = toJSStr(nsuJoinSep([nimCopy(null, cntr_1728053268, NTI50331655), (makeNimstrLit("#inputLastName") || []).concat(HEX24_369098755(u_1728053263.id) || [])], makeNimstrLit(" ")));
        var inpApiKeyId_1728053271 = toJSStr(nsuJoinSep([nimCopy(null, cntr_1728053268, NTI50331655), (makeNimstrLit("#inpApiKey") || []).concat(HEX24_369098755(u_1728053263.id) || [])], makeNimstrLit(" ")));
        edU_1728053267.firstname = nimCopy(null, cstrToNimstr(($((inpFirstNameId_1728053269))[0].value)), NTI50331655);
        edU_1728053267.lastname = nimCopy(null, cstrToNimstr(($((inpLastNameId_1728053270))[0].value)), NTI50331655);
        edU_1728053267.apiKey = nimCopy(null, cstrToNimstr(($((inpApiKeyId_1728053271))[0].value)), NTI50331655);
        var uName_1728053305 = nsuJoinSep([nimCopy(null, edU_1728053267.firstname, NTI50331655), nimCopy(null, edU_1728053267.lastname, NTI50331655)], makeNimstrLit(" "));
        var uNameEnc_1728053306 = encodeUrl_1660944424(uName_1728053305, true);
        var firstNameEnc_1728053307 = encodeUrl_1660944424(edU_1728053267.firstname, true);
        var lastNameEnc_1728053308 = encodeUrl_1660944424(edU_1728053267.lastname, true);
        var apiKeyEnc_1728053309 = encodeUrl_1660944424(edU_1728053267.apiKey, true);
        var fmtRes_1728053310 = [mnewString(0)];
        fmtRes_1728053310[0].push.apply(fmtRes_1728053310[0], makeNimstrLit("/user/update?id="));;
        formatValue_1728053311(fmtRes_1728053310, 0, u_1728053263.id, []);
        fmtRes_1728053310[0].push.apply(fmtRes_1728053310[0], makeNimstrLit("&email="));;
        formatValue_1459617954(fmtRes_1728053310, 0, uNameEnc_1728053306, []);
        fmtRes_1728053310[0].push.apply(fmtRes_1728053310[0], makeNimstrLit("&firstname="));;
        formatValue_1459617954(fmtRes_1728053310, 0, firstNameEnc_1728053307, []);
        var fmtRes_1728053353 = [mnewString(0)];
        fmtRes_1728053353[0].push.apply(fmtRes_1728053353[0], makeNimstrLit("&apiKey="));;
        formatValue_1459617954(fmtRes_1728053353, 0, apiKeyEnc_1728053309, []);
        fmtRes_1728053353[0].push.apply(fmtRes_1728053353[0], makeNimstrLit("&lastname="));;
        formatValue_1459617954(fmtRes_1728053353, 0, lastNameEnc_1728053308, []);
        fmtRes_1728053353[0].push.apply(fmtRes_1728053353[0], makeNimstrLit("&token="));;
        formatValue_1459617954(fmtRes_1728053353, 0, currUser_587202590[0].token, []);
        var updStm_1728053354 = sendRequest_587202696(makeNimstrLit("GET"), (fmtRes_1728053310[0] || []).concat(fmtRes_1728053353[0] || []), [], []);
        updStm_1728053354.observe((HEX3Aanonymous_1728053355), (HEX3Aanonymous_1728053661));

      
    }

  var result_1728053265 = null;

    result_1728053265 = HEX3Aanonymous_1728053266;

  return result_1728053265;

}

function showUsers_1728053713() {
  var result_1728053714 = null;

    var tmp_1728053741 = tree_1107296945(43, []);
    tmp_1728053741.class = "accordion list-users";
    tmp_1728053741.id = "accordionUsers";
    Label1: do {
      var u_1728053783 = ({id: 0, corpus_id: 0, firstname: [], lastname: [], email: [], role_id: 0, role: [], password: [], active: 0, token: [], apiKey: []});
      var i_33557860 = 0;
      var L_33557861 = (allUsers_587202595[0]).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_33557860 < L_33557861)) break Label3;
            u_1728053783 = allUsers_587202595[0][chckIndx(i_33557860, 0, (allUsers_587202595[0]).length - 1)];
            var headingId_1728053784 = toJSStr((makeNimstrLit("heading") || []).concat(HEX24_369098755(u_1728053783.id) || []));
            var collapseId_1728053785 = toJSStr((makeNimstrLit("collapse") || []).concat(HEX24_369098755(u_1728053783.id) || []));
            var uName_1728053786 = nsuJoinSep([nimCopy(null, u_1728053783.firstname, NTI50331655), nimCopy(null, u_1728053783.lastname, NTI50331655)], makeNimstrLit(" "));
            var inpFirstNameId_1728053787 = toJSStr((makeNimstrLit("inputFirstName") || []).concat(HEX24_369098755(u_1728053783.id) || []));
            var inpLastNameId_1728053788 = toJSStr((makeNimstrLit("inputLastName") || []).concat(HEX24_369098755(u_1728053783.id) || []));
            var inpApiKeyId_1728053789 = toJSStr((makeNimstrLit("inpApiKey") || []).concat(HEX24_369098755(u_1728053783.id) || []));
            var frmId_1728053790 = toJSStr((makeNimstrLit("frm") || []).concat(HEX24_369098755(u_1728053783.id) || []));
            var tmp_1728053743 = tree_1107296945(43, []);
            tmp_1728053743.class = "card";
            var tmp_1728053744 = tree_1107296945(43, []);
            tmp_1728053744.class = "card-header";
            tmp_1728053744.id = headingId_1728053784;
            var tmp_1728053745 = tree_1107296945(22, []);
            tmp_1728053745.class = "mb-0";
            var tmp_1728053746 = tree_1107296945(106, []);
            tmp_1728053746.class = "btn btn-link collapsed";
            setAttr_1107296808(tmp_1728053746, "type", "button");
            setAttr_1107296808(tmp_1728053746, "data-toggle", "collapse");
            setAttr_1107296808(tmp_1728053746, "data-target", ("#" + collapseId_1728053785));
            setAttr_1107296808(tmp_1728053746, "aria-expanded", "false");
            setAttr_1107296808(tmp_1728053746, "aria-controls", collapseId_1728053785);
            add_1107296882(tmp_1728053746, text_1107296997(uName_1728053786));
            add_1107296882(tmp_1728053745, tmp_1728053746);
            add_1107296882(tmp_1728053744, tmp_1728053745);
            add_1107296882(tmp_1728053743, tmp_1728053744);
            add_1107296882(tmp_1728053741, tmp_1728053743);
            var tmp_1728053747 = tree_1107296945(43, []);
            tmp_1728053747.id = collapseId_1728053785;
            tmp_1728053747.class = "collapse";
            setAttr_1107296808(tmp_1728053747, "aria-labelledby", headingId_1728053784);
            setAttr_1107296808(tmp_1728053747, "data-parent", "#accordionUsers");
            var tmp_1728053748 = tree_1107296945(43, []);
            tmp_1728053748.class = "card-body";
            var tmp_1728053749 = tree_1107296945(43, []);
            tmp_1728053749.class = ("form " + frmId_1728053790);
            var tmp_1728053750 = tree_1107296945(43, []);
            tmp_1728053750.class = "form-group";
            var tmp_1728053751 = tree_1107296945(104, []);
            setAttr_1107296808(tmp_1728053751, "for", inpFirstNameId_1728053787);
            add_1107296882(tmp_1728053751, text_1107296997(makeNimstrLit("\xD0\x98\xD0\xBC\xD1\x8F")));
            add_1107296882(tmp_1728053750, tmp_1728053751);
            var tmp_1728053752 = tree_1107296945(105, []);
            setAttr_1107296808(tmp_1728053752, "type", "text");
            tmp_1728053752.class = "form-control";
            tmp_1728053752.id = inpFirstNameId_1728053787;
            setAttr_1107296808(tmp_1728053752, "placeholder", "Имя");
            valueHEX3D_1107296586(tmp_1728053752, toJSStr(u_1728053783.firstname));
            setAttr_1107296808(tmp_1728053752, "value", toJSStr(u_1728053783.firstname));
            add_1107296882(tmp_1728053750, tmp_1728053752);
            add_1107296882(tmp_1728053749, tmp_1728053750);
            var tmp_1728053753 = tree_1107296945(43, []);
            tmp_1728053753.class = "form-group";
            var tmp_1728053754 = tree_1107296945(104, []);
            setAttr_1107296808(tmp_1728053754, "for", inpLastNameId_1728053788);
            add_1107296882(tmp_1728053754, text_1107296997(makeNimstrLit("\xD0\xA4\xD0\xB0\xD0\xBC\xD0\xB8\xD0\xBB\xD0\xB8\xD1\x8F")));
            add_1107296882(tmp_1728053753, tmp_1728053754);
            var tmp_1728053755 = tree_1107296945(105, []);
            setAttr_1107296808(tmp_1728053755, "type", "text");
            tmp_1728053755.class = "form-control";
            tmp_1728053755.id = inpLastNameId_1728053788;
            setAttr_1107296808(tmp_1728053755, "placeholder", "Фамилия");
            valueHEX3D_1107296586(tmp_1728053755, toJSStr(u_1728053783.lastname));
            setAttr_1107296808(tmp_1728053755, "value", toJSStr(u_1728053783.lastname));
            add_1107296882(tmp_1728053753, tmp_1728053755);
            add_1107296882(tmp_1728053749, tmp_1728053753);
            var tmp_1728053756 = tree_1107296945(43, []);
            tmp_1728053756.class = "form-group";
            var tmp_1728053757 = tree_1107296945(104, []);
            setAttr_1107296808(tmp_1728053757, "for", inpApiKeyId_1728053789);
            add_1107296882(tmp_1728053757, text_1107296997(makeNimstrLit("apiKey")));
            add_1107296882(tmp_1728053756, tmp_1728053757);
            var tmp_1728053758 = tree_1107296945(105, []);
            setAttr_1107296808(tmp_1728053758, "type", "text");
            tmp_1728053758.class = "form-control";
            tmp_1728053758.id = inpApiKeyId_1728053789;
            setAttr_1107296808(tmp_1728053758, "placeholder", "HERE apiKey");
            valueHEX3D_1107296586(tmp_1728053758, toJSStr(u_1728053783.apiKey));
            setAttr_1107296808(tmp_1728053758, "value", toJSStr(u_1728053783.apiKey));
            add_1107296882(tmp_1728053756, tmp_1728053758);
            add_1107296882(tmp_1728053749, tmp_1728053756);
            if (!(eqStrings(u_1728053783.password, []))) {
            var tmp_1728053759 = tree_1107296945(43, []);
            tmp_1728053759.class = "form-group";
            var tmp_1728053760 = tree_1107296945(70, []);
            var fmtRes_1728053791 = [mnewString(0)];
            fmtRes_1728053791[0].push.apply(fmtRes_1728053791[0], makeNimstrLit("\xD0\x9F\xD0\xB0\xD1\x80\xD0\xBE\xD0\xBB\xD1\x8C: "));;
            formatValue_1459617954(fmtRes_1728053791, 0, u_1728053783.password, []);
            add_1107296882(tmp_1728053760, text_1107296997(fmtRes_1728053791[0]));
            add_1107296882(tmp_1728053759, tmp_1728053760);
            add_1107296882(tmp_1728053749, tmp_1728053759);
            }
            
            var tmp_1728053761 = tree_1107296945(43, []);
            tmp_1728053761.class = "form-group";
            var tmp_1728053762 = tree_1107296945(106, []);
            setAttr_1107296808(tmp_1728053762, "type", "button");
            tmp_1728053762.class = "btn btn-success";
            addEventHandler_1090520233(tmp_1728053762, 0, chgUser_1728053262(u_1728053783), kxi_1090519104[0]);
            add_1107296882(tmp_1728053762, text_1107296997(makeNimstrLit("\xD0\x9E\xD0\xB1\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C")));
            add_1107296882(tmp_1728053761, tmp_1728053762);
            add_1107296882(tmp_1728053749, tmp_1728053761);
            add_1107296882(tmp_1728053748, tmp_1728053749);
            add_1107296882(tmp_1728053747, tmp_1728053748);
            add_1107296882(tmp_1728053741, tmp_1728053747);
            i_33557860 = addInt(i_33557860, 1);
            if (!(((allUsers_587202595[0]).length == L_33557861))) {
            failedAssertImpl_251658296(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_1728053714 = tmp_1728053741;

  return result_1728053714;

}

function HEX24_1509951076(f_1509951077) {
  var result_1509951078 = [];

    result_1509951078 = nimCopy(null, f_1509951077.formatStr, NTI50331655);

  return result_1509951078;

}

function raiseParseException_1509951079(f_1509951080, input_1509951081, msg_1509951082) {
    raiseException({message: (makeNimstrLit("Failed to parse \'") || []).concat(input_1509951081 || [],makeNimstrLit("\' with format \'") || [],HEX24_1509951076(f_1509951080) || [],makeNimstrLit("\'. ") || [],msg_1509951082 || []), parent: null, m_type: NTI1509950350, name: null, trace: [], up: null}, "TimeParseError");

  
}

function parseInt_1509951102(s_1509951103, b_1509951104, b_1509951104_Idx, start_1509951105, maxLen_1509951110, allowSign_1509951111) {
      var Temporary1;
          var Temporary4;
      var Temporary5;

  var result_1509951112 = 0;

  BeforeRet: do {
    var sign_1509951113 = -1;
    var i_1509951114 = start_1509951105;
    var stop_1509951115 = HEX2D_1509949470(HEX2B_1509949462(start_1509951105, nimMin(HEX2B_1509949462(HEX2D_1509949470((s_1509951103).length - 1, start_1509951105), 1), maxLen_1509951110)), 1);
    if ((allowSign_1509951111 && (i_1509951114 <= stop_1509951115))) {
    if ((s_1509951103[chckIndx(i_1509951114, 0, (s_1509951103).length - 1)] == 43)) {
    i_1509951114 = addInt(i_1509951114, 1);
    }
    else {
    if ((s_1509951103[chckIndx(i_1509951114, 0, (s_1509951103).length - 1)] == 45)) {
    i_1509951114 = addInt(i_1509951114, 1);
    sign_1509951113 = 1;
    }
    }
    }
    
      if (!(i_1509951114 <= stop_1509951115)) Temporary1 = false; else {        Temporary1 = (ConstSet52[s_1509951103[chckIndx(i_1509951114, 0, (s_1509951103).length - 1)]] != undefined);      }    if (Temporary1) {
    b_1509951104[b_1509951104_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_1509951114 <= stop_1509951115)) Temporary4 = false; else {            Temporary4 = (ConstSet53[s_1509951103[chckIndx(i_1509951114, 0, (s_1509951103).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_1509951138 = HEX2D_1509949470(s_1509951103[chckIndx(i_1509951114, 0, (s_1509951103).length - 1)], 48);
          if ((divInt(HEX2B_1509949462(-2147483648, c_1509951138), 10) <= b_1509951104[b_1509951104_Idx])) {
          b_1509951104[b_1509951104_Idx] = HEX2D_1509949470(HEX2A_1509949454(b_1509951104[b_1509951104_Idx], 10), c_1509951138);
          }
          else {
            result_1509951112 = 0;
            break BeforeRet;
          }
          
          i_1509951114 = addInt(i_1509951114, 1);
        }
    } while (false);
      if (!(sign_1509951113 == -1)) Temporary5 = false; else {        Temporary5 = (b_1509951104[b_1509951104_Idx] == -2147483648);      }    if (Temporary5) {
    result_1509951112 = 0;
    break BeforeRet;
    }
    
    b_1509951104[b_1509951104_Idx] = HEX2A_1509949454(b_1509951104[b_1509951104_Idx], sign_1509951113);
    result_1509951112 = HEX2D_1509949470(i_1509951114, start_1509951105);
    }
    
  } while (false);

  return result_1509951112;

}

function inc_1509949474(a_1509949475, a_1509949475_Idx, b_1509949476) {
    a_1509949475[a_1509949475_Idx] += b_1509949476;

  
}

function some_1509951377(val_1509951379) {
  var result_1509951380 = ({val: 0, has: false});

    result_1509951380.has = true;
    result_1509951380.val = val_1509951379;

  return result_1509951380;

}

function contains_1509951413(s_1509951417, value_1509951418) {
    var Temporary1;

  var result_1509951419 = false;

    if (!(s_1509951417.a <= value_1509951418)) Temporary1 = false; else {      Temporary1 = (value_1509951418 <= s_1509951417.b);    }    result_1509951419 = Temporary1;

  return result_1509951419;

}

function HEX2EHEX2E_1509951392(a_1509951395, b_1509951396) {
  var result_1509951399 = ({a: 0, b: 0});

    result_1509951399 = nimCopy(result_1509951399, {a: nimCopy(null, a_1509951395, NTI1509949464), b: nimCopy(null, b_1509951396, NTI1509949464)}, NTI1509950642);

  return result_1509951399;

}

function nsuCmpIgnoreCase(a_654311590, b_654311591) {
  var result_654311592 = 0;

  BeforeRet: do {
    var aLenHEX60gensym21_654311599 = (a_654311590).length;
    var bLenHEX60gensym21_654311600 = (b_654311591).length;
    var iHEX60gensym21_654311601 = 0;
    var mHEX60gensym21_654311602 = nimMin(aLenHEX60gensym21_654311599, bLenHEX60gensym21_654311600);
    Label1: do {
        Label2: while (true) {
        if (!(iHEX60gensym21_654311601 < mHEX60gensym21_654311602)) break Label2;
          result_654311592 = subInt(toLowerAscii_956301313(a_654311590[chckIndx(iHEX60gensym21_654311601, 0, (a_654311590).length - 1)]), toLowerAscii_956301313(b_654311591[chckIndx(iHEX60gensym21_654311601, 0, (b_654311591).length - 1)]));
          if (!((result_654311592 == 0))) {
          break BeforeRet;
          }
          
          iHEX60gensym21_654311601 = addInt(iHEX60gensym21_654311601, 1);
        }
    } while (false);
    result_654311592 = subInt(aLenHEX60gensym21_654311599, bLenHEX60gensym21_654311600);
  } while (false);

  return result_654311592;

}

function contains_1509951531(s_1509951535, value_1509951536) {
    var Temporary1;

  var result_1509951537 = false;

    if (!(s_1509951535.a <= value_1509951536)) Temporary1 = false; else {      Temporary1 = (value_1509951536 <= s_1509951535.b);    }    result_1509951537 = Temporary1;

  return result_1509951537;

}

function HEX2EHEX2E_1509951510(a_1509951513, b_1509951514) {
  var result_1509951517 = ({a: 0, b: 0});

    result_1509951517 = nimCopy(result_1509951517, {a: nimCopy(null, a_1509951513, NTI1509949465), b: nimCopy(null, b_1509951514, NTI1509949465)}, NTI1509950716);

  return result_1509951517;

}

function contains_1509951610(s_1509951614, value_1509951615) {
    var Temporary1;

  var result_1509951616 = false;

    if (!(s_1509951614.a <= value_1509951615)) Temporary1 = false; else {      Temporary1 = (value_1509951615 <= s_1509951614.b);    }    result_1509951616 = Temporary1;

  return result_1509951616;

}

function HEX2EHEX2E_1509951589(a_1509951592, b_1509951593) {
  var result_1509951596 = ({a: 0, b: 0});

    result_1509951596 = nimCopy(result_1509951596, {a: nimCopy(null, a_1509951592, NTI1509949466), b: nimCopy(null, b_1509951593, NTI1509949466)}, NTI1509950771);

  return result_1509951596;

}

function HEX2AHEX3D_1509951796(x_1509951798, x_1509951798_Idx, y_1509951799) {
    x_1509951798[x_1509951798_Idx] = HEX2A_1509949454(x_1509951798[x_1509951798_Idx], y_1509951799);

  
}

function HEX5E_1509951789(x_1509951791, y_1509951792) {
  var result_1509951793 = [0];

    switch (y_1509951792) {
    case 0:
      result_1509951793[0] = 1;
      break;
    case 1:
      result_1509951793[0] = x_1509951791;
      break;
    case 2:
      result_1509951793[0] = HEX2A_1509949454(x_1509951791, x_1509951791);
      break;
    case 3:
      result_1509951793[0] = HEX2A_1509949454(HEX2A_1509949454(x_1509951791, x_1509951791), x_1509951791);
      break;
    default: 
      var colontmp__33557889 = {Field0: x_1509951791, Field1: nimCopy(null, y_1509951792, NTI50332297)};
      var x_1509951794 = [colontmp__33557889["Field0"]];
      var y_1509951795 = colontmp__33557889["Field1"];
      result_1509951793[0] = 1;
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            if (!(((y_1509951795 & 1) == 0))) {
            HEX2AHEX3D_1509951796(result_1509951793, 0, x_1509951794[0]);
            }
            
            y_1509951795 = chckRange((y_1509951795 >> 1), 0, 2147483647);
            if ((y_1509951795 == 0)) {
            break Label1;
            }
            
            HEX2AHEX3D_1509951796(x_1509951794, 0, x_1509951794[0]);
          }
      } while (false);
      break;
    }

  return result_1509951793[0];

}

function contains_1509951839(s_1509951843, value_1509951844) {
    var Temporary1;

  var result_1509951845 = false;

    if (!(s_1509951843.a <= value_1509951844)) Temporary1 = false; else {      Temporary1 = (value_1509951844 <= s_1509951843.b);    }    result_1509951845 = Temporary1;

  return result_1509951845;

}

function HEX2EHEX2E_1509951818(a_1509951821, b_1509951822) {
  var result_1509951825 = ({a: 0, b: 0});

    result_1509951825 = nimCopy(result_1509951825, {a: nimCopy(null, a_1509951821, NTI1509949469), b: nimCopy(null, b_1509951822, NTI1509949469)}, NTI1509950930);

  return result_1509951825;

}

function parsePattern_1509951349(input_1509951350, pattern_1509951351, i_1509951352, i_1509951352_Idx, parsed_1509951353, loc_1509951354) {
      var Temporary13;
      var Temporary14;
        var Temporary15;

  var result_1509951355 = false;

  BeforeRet: do {
    result_1509951355 = true;
    switch (pattern_1509951351) {
    case 0:
      var svHEX60gensym149_1509951374 = [0];
      var pdHEX60gensym149_1509951375 = parseInt_1509951102(input_1509951350, svHEX60gensym149_1509951374, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2).b, false);
      if ((pdHEX60gensym149_1509951375 < HEX2EHEX2E_922747731(1, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym149_1509951375);
      var monthday_1509951376 = svHEX60gensym149_1509951374[0];
      parsed_1509951353.monthday = nimCopy(parsed_1509951353.monthday, some_1509951377(monthday_1509951376), NTI1509950359);
      result_1509951355 = contains_1509951413(HEX2EHEX2E_1509951392(1, 31), monthday_1509951376);
      break;
    case 1:
      var svHEX60gensym153_1509951427 = [0];
      var pdHEX60gensym153_1509951428 = parseInt_1509951102(input_1509951350, svHEX60gensym153_1509951427, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
      if ((pdHEX60gensym153_1509951428 < HEX2EHEX2E_922747731(2, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym153_1509951428);
      var monthday_1509951429 = svHEX60gensym153_1509951427[0];
      parsed_1509951353.monthday = nimCopy(parsed_1509951353.monthday, some_1509951377(monthday_1509951429), NTI1509950359);
      result_1509951355 = contains_1509951413(HEX2EHEX2E_1509951392(1, 31), monthday_1509951429);
      break;
    case 2:
      result_1509951355 = false;
      Label1: do {
        var v_1509951485 = [];
        var i_33557874 = 0;
        Label2: do {
            Label3: while (true) {
            if (!true) break Label3;
              v_1509951485 = loc_1509951354.ddd[chckIndx(i_33557874, 0, (loc_1509951354.ddd).length - 1)];
              if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951352[i_1509951352_Idx], (v_1509951485).length), 1)), v_1509951485) == 0)) {
              result_1509951355 = true;
              inc_1509949474(i_1509951352, i_1509951352_Idx, (v_1509951485).length);
              break Label1;
              }
              
              if ((6 <= i_33557874)) {
              break Label2;
              }
              
              i_33557874 = addInt(i_33557874, 1);
            }
        } while (false);
      } while (false);
      break;
    case 3:
      result_1509951355 = false;
      Label4: do {
        var v_1509951490 = [];
        var i_33557877 = 0;
        Label5: do {
            Label6: while (true) {
            if (!true) break Label6;
              v_1509951490 = loc_1509951354.dddd[chckIndx(i_33557877, 0, (loc_1509951354.dddd).length - 1)];
              if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951352[i_1509951352_Idx], (v_1509951490).length), 1)), v_1509951490) == 0)) {
              result_1509951355 = true;
              inc_1509949474(i_1509951352, i_1509951352_Idx, (v_1509951490).length);
              break Label4;
              }
              
              if ((6 <= i_33557877)) {
              break Label5;
              }
              
              i_33557877 = addInt(i_33557877, 1);
            }
        } while (false);
      } while (false);
      break;
    case 4:
    case 6:
      var svHEX60gensym157_1509951498 = [0];
      var pdHEX60gensym157_1509951499 = parseInt_1509951102(input_1509951350, svHEX60gensym157_1509951498, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2).b, false);
      if ((pdHEX60gensym157_1509951499 < HEX2EHEX2E_922747731(1, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym157_1509951499);
      parsed_1509951353.hour = svHEX60gensym157_1509951498[0];
      result_1509951355 = contains_1509951531(HEX2EHEX2E_1509951510(0, 23), parsed_1509951353.hour);
      break;
    case 5:
    case 7:
      var svHEX60gensym161_1509951545 = [0];
      var pdHEX60gensym161_1509951546 = parseInt_1509951102(input_1509951350, svHEX60gensym161_1509951545, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
      if ((pdHEX60gensym161_1509951546 < HEX2EHEX2E_922747731(2, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym161_1509951546);
      parsed_1509951353.hour = svHEX60gensym161_1509951545[0];
      result_1509951355 = contains_1509951531(HEX2EHEX2E_1509951510(0, 23), parsed_1509951353.hour);
      break;
    case 8:
      var svHEX60gensym165_1509951577 = [0];
      var pdHEX60gensym165_1509951578 = parseInt_1509951102(input_1509951350, svHEX60gensym165_1509951577, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2).b, false);
      if ((pdHEX60gensym165_1509951578 < HEX2EHEX2E_922747731(1, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym165_1509951578);
      parsed_1509951353.minute = svHEX60gensym165_1509951577[0];
      result_1509951355 = contains_1509951610(HEX2EHEX2E_1509951589(0, 59), parsed_1509951353.hour);
      break;
    case 9:
      var svHEX60gensym169_1509951624 = [0];
      var pdHEX60gensym169_1509951625 = parseInt_1509951102(input_1509951350, svHEX60gensym169_1509951624, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
      if ((pdHEX60gensym169_1509951625 < HEX2EHEX2E_922747731(2, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym169_1509951625);
      parsed_1509951353.minute = svHEX60gensym169_1509951624[0];
      result_1509951355 = contains_1509951610(HEX2EHEX2E_1509951589(0, 59), parsed_1509951353.hour);
      break;
    case 10:
      var svHEX60gensym173_1509951656 = [0];
      var pdHEX60gensym173_1509951657 = parseInt_1509951102(input_1509951350, svHEX60gensym173_1509951656, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2).b, false);
      if ((pdHEX60gensym173_1509951657 < HEX2EHEX2E_922747731(1, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym173_1509951657);
      var month_1509951658 = svHEX60gensym173_1509951656[0];
      result_1509951355 = contains_1509950839(HEX2EHEX2E_922747731(1, 12), month_1509951658);
      parsed_1509951353.month = nimCopy(parsed_1509951353.month, some_1509951377(month_1509951658), NTI1509950359);
      break;
    case 11:
      var svHEX60gensym175_1509951682 = [0];
      var pdHEX60gensym175_1509951683 = parseInt_1509951102(input_1509951350, svHEX60gensym175_1509951682, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
      if ((pdHEX60gensym175_1509951683 < HEX2EHEX2E_922747731(2, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym175_1509951683);
      var month_1509951684 = svHEX60gensym175_1509951682[0];
      result_1509951355 = contains_1509950839(HEX2EHEX2E_922747731(1, 12), month_1509951684);
      parsed_1509951353.month = nimCopy(parsed_1509951353.month, some_1509951377(month_1509951684), NTI1509950359);
      break;
    case 12:
      result_1509951355 = false;
      Label7: do {
        var n_1509951741 = 0;
        var v_1509951742 = [];
        var i_33557881 = 1;
        Label8: do {
            Label9: while (true) {
            if (!true) break Label9;
              n_1509951741 = i_33557881;
              v_1509951742 = loc_1509951354.MMM[chckIndx(i_33557881, 1, (loc_1509951354.MMM).length + (1) - 1) - (1)];
              if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951352[i_1509951352_Idx], (v_1509951742).length), 1)), v_1509951742) == 0)) {
              result_1509951355 = true;
              inc_1509949474(i_1509951352, i_1509951352_Idx, (v_1509951742).length);
              parsed_1509951353.month = nimCopy(parsed_1509951353.month, some_1509951377(((n_1509951741) | 0)), NTI1509950359);
              break Label7;
              }
              
              if ((12 <= i_33557881)) {
              break Label8;
              }
              
              i_33557881 = addInt(i_33557881, 1);
            }
        } while (false);
      } while (false);
      break;
    case 13:
      result_1509951355 = false;
      Label10: do {
        var n_1509951752 = 0;
        var v_1509951753 = [];
        var i_33557884 = 1;
        Label11: do {
            Label12: while (true) {
            if (!true) break Label12;
              n_1509951752 = i_33557884;
              v_1509951753 = loc_1509951354.MMMM[chckIndx(i_33557884, 1, (loc_1509951354.MMMM).length + (1) - 1) - (1)];
              if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2D_1509949470(HEX2B_1509949462(i_1509951352[i_1509951352_Idx], (v_1509951753).length), 1)), v_1509951753) == 0)) {
              result_1509951355 = true;
              inc_1509949474(i_1509951352, i_1509951352_Idx, (v_1509951753).length);
              parsed_1509951353.month = nimCopy(parsed_1509951353.month, some_1509951377(((n_1509951752) | 0)), NTI1509950359);
              break Label10;
              }
              
              if ((12 <= i_33557884)) {
              break Label11;
              }
              
              i_33557884 = addInt(i_33557884, 1);
            }
        } while (false);
      } while (false);
      break;
    case 14:
      var svHEX60gensym177_1509951764 = [0];
      var pdHEX60gensym177_1509951765 = parseInt_1509951102(input_1509951350, svHEX60gensym177_1509951764, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2).b, false);
      if ((pdHEX60gensym177_1509951765 < HEX2EHEX2E_922747731(1, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym177_1509951765);
      parsed_1509951353.second = svHEX60gensym177_1509951764[0];
      break;
    case 15:
      var svHEX60gensym178_1509951773 = [0];
      var pdHEX60gensym178_1509951774 = parseInt_1509951102(input_1509951350, svHEX60gensym178_1509951773, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
      if ((pdHEX60gensym178_1509951774 < HEX2EHEX2E_922747731(2, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym178_1509951774);
      parsed_1509951353.second = svHEX60gensym178_1509951773[0];
      break;
    case 16:
    case 17:
    case 18:
      var len_1509951778 = (reprEnum(pattern_1509951351, NTI1509950348)).length;
      var svHEX60gensym179_1509951786 = [0];
      var pdHEX60gensym179_1509951787 = parseInt_1509951102(input_1509951350, svHEX60gensym179_1509951786, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(len_1509951778, len_1509951778).b, false);
      if ((pdHEX60gensym179_1509951787 < HEX2EHEX2E_922747731(len_1509951778, len_1509951778).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym179_1509951787);
      var v_1509951788 = svHEX60gensym179_1509951786[0];
      parsed_1509951353.nanosecond = HEX2A_1509949454(v_1509951788, HEX5E_1509951789(10, chckRange(HEX2D_1509949470(9, len_1509951778), 0, 2147483647)));
      result_1509951355 = contains_1509951839(HEX2EHEX2E_1509951818(0, 999999999), parsed_1509951353.nanosecond);
      break;
    case 19:
      switch (input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)]) {
      case 80:
        parsed_1509951353.amPm = 2;
        break;
      case 65:
        parsed_1509951353.amPm = 1;
        break;
      default: 
        result_1509951355 = false;
        break;
      }
      inc_1509949474(i_1509951352, i_1509951352_Idx, 1);
      break;
    case 20:
      if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2B_1509949462(i_1509951352[i_1509951352_Idx], 1)), makeNimstrLit("AM")) == 0)) {
      parsed_1509951353.amPm = 1;
      inc_1509949474(i_1509951352, i_1509951352_Idx, 2);
      }
      else {
      if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2B_1509949462(i_1509951352[i_1509951352_Idx], 1)), makeNimstrLit("PM")) == 0)) {
      parsed_1509951353.amPm = 2;
      inc_1509949474(i_1509951352, i_1509951352_Idx, 2);
      }
      else {
        result_1509951355 = false;
      }
      }
      break;
    case 21:
      var svHEX60gensym183_1509951853 = [0];
      var pdHEX60gensym183_1509951854 = parseInt_1509951102(input_1509951350, svHEX60gensym183_1509951853, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
      if ((pdHEX60gensym183_1509951854 < HEX2EHEX2E_922747731(2, 2).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym183_1509951854);
      var year_1509951855 = svHEX60gensym183_1509951853[0];
      var thisCen_1509951856 = divInt(now_1509950882().year, 100);
      parsed_1509951353.year = nimCopy(parsed_1509951353.year, some_1509951377(HEX2B_1509949462(HEX2A_1509949454(thisCen_1509951856, 100), year_1509951855)), NTI1509950359);
      result_1509951355 = (0 < year_1509951855);
      break;
    case 22:
      if ((ConstSet54[input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)]] != undefined)) {
      var svHEX60gensym186_1509951875 = [0];
      var pdHEX60gensym186_1509951876 = parseInt_1509951102(input_1509951350, svHEX60gensym186_1509951875, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(4, 2147483647).b, true);
      if ((pdHEX60gensym186_1509951876 < HEX2EHEX2E_922747731(4, 2147483647).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym186_1509951876);
      Temporary13 = svHEX60gensym186_1509951875[0];
      }
      else {
        var svHEX60gensym187_1509951884 = [0];
        var pdHEX60gensym187_1509951885 = parseInt_1509951102(input_1509951350, svHEX60gensym187_1509951884, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(4, 4).b, false);
        if ((pdHEX60gensym187_1509951885 < HEX2EHEX2E_922747731(4, 4).a)) {
        result_1509951355 = false;
        break BeforeRet;
        }
        
        inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym187_1509951885);
      Temporary13 = svHEX60gensym187_1509951884[0];
      }
      
      var year_1509951886 = Temporary13;
      result_1509951355 = (0 < year_1509951886);
      parsed_1509951353.year = nimCopy(parsed_1509951353.year, some_1509951377(year_1509951886), NTI1509950359);
      break;
    case 23:
      var svHEX60gensym189_1509951901 = [0];
      var pdHEX60gensym189_1509951902 = parseInt_1509951102(input_1509951350, svHEX60gensym189_1509951901, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2147483647).b, false);
      if ((pdHEX60gensym189_1509951902 < HEX2EHEX2E_922747731(1, 2147483647).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym189_1509951902);
      var year_1509951903 = svHEX60gensym189_1509951901[0];
      parsed_1509951353.year = nimCopy(parsed_1509951353.year, some_1509951377(year_1509951903), NTI1509950359);
      result_1509951355 = (0 < year_1509951903);
      break;
    case 24:
      if ((ConstSet55[input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)]] != undefined)) {
      var svHEX60gensym192_1509951922 = [0];
      var pdHEX60gensym192_1509951923 = parseInt_1509951102(input_1509951350, svHEX60gensym192_1509951922, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(4, 2147483647).b, true);
      if ((pdHEX60gensym192_1509951923 < HEX2EHEX2E_922747731(4, 2147483647).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym192_1509951923);
      Temporary14 = svHEX60gensym192_1509951922[0];
      }
      else {
        var svHEX60gensym193_1509951931 = [0];
        var pdHEX60gensym193_1509951932 = parseInt_1509951102(input_1509951350, svHEX60gensym193_1509951931, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(4, 4).b, false);
        if ((pdHEX60gensym193_1509951932 < HEX2EHEX2E_922747731(4, 4).a)) {
        result_1509951355 = false;
        break BeforeRet;
        }
        
        inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym193_1509951932);
      Temporary14 = svHEX60gensym193_1509951931[0];
      }
      
      var year_1509951933 = Temporary14;
      parsed_1509951353.year = nimCopy(parsed_1509951353.year, some_1509951377(year_1509951933), NTI1509950359);
      break;
    case 25:
      var svHEX60gensym194_1509951948 = [0];
      var pdHEX60gensym194_1509951949 = parseInt_1509951102(input_1509951350, svHEX60gensym194_1509951948, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2147483647).b, true);
      if ((pdHEX60gensym194_1509951949 < HEX2EHEX2E_922747731(1, 2147483647).a)) {
      result_1509951355 = false;
      break BeforeRet;
      }
      
      inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym194_1509951949);
      parsed_1509951353.year = nimCopy(parsed_1509951353.year, some_1509951377(svHEX60gensym194_1509951948[0]), NTI1509950359);
      break;
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      switch (input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)]) {
      case 43:
      case 45:
        if ((input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)] == 45)) {
        Temporary15 = 1;
        }
        else {
        Temporary15 = -1;
        }
        
        var sign_1509951953 = Temporary15;
        i_1509951352[i_1509951352_Idx] = addInt(i_1509951352[i_1509951352_Idx], 1);
        var offset_1509951958 = [0];
        switch (pattern_1509951351) {
        case 26:
          var svHEX60gensym195_1509951966 = [0];
          var pdHEX60gensym195_1509951967 = parseInt_1509951102(input_1509951350, svHEX60gensym195_1509951966, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(1, 2).b, false);
          if ((pdHEX60gensym195_1509951967 < HEX2EHEX2E_922747731(1, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym195_1509951967);
          offset_1509951958[0] = HEX2A_1509949454(svHEX60gensym195_1509951966[0], 3600);
          break;
        case 27:
          var svHEX60gensym196_1509951975 = [0];
          var pdHEX60gensym196_1509951976 = parseInt_1509951102(input_1509951350, svHEX60gensym196_1509951975, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
          if ((pdHEX60gensym196_1509951976 < HEX2EHEX2E_922747731(2, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym196_1509951976);
          offset_1509951958[0] = HEX2A_1509949454(svHEX60gensym196_1509951975[0], 3600);
          break;
        case 28:
        case 30:
          var svHEX60gensym197_1509951984 = [0];
          var pdHEX60gensym197_1509951985 = parseInt_1509951102(input_1509951350, svHEX60gensym197_1509951984, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
          if ((pdHEX60gensym197_1509951985 < HEX2EHEX2E_922747731(2, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym197_1509951985);
          inc_1509949474(offset_1509951958, 0, HEX2A_1509949454(svHEX60gensym197_1509951984[0], 3600));
          if ((pattern_1509951351 == 28)) {
          if (!((input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)] == 58))) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          i_1509951352[i_1509951352_Idx] = addInt(i_1509951352[i_1509951352_Idx], 1);
          }
          
          var svHEX60gensym199_1509952001 = [0];
          var pdHEX60gensym199_1509952002 = parseInt_1509951102(input_1509951350, svHEX60gensym199_1509952001, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
          if ((pdHEX60gensym199_1509952002 < HEX2EHEX2E_922747731(2, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym199_1509952002);
          inc_1509949474(offset_1509951958, 0, HEX2A_1509949454(svHEX60gensym199_1509952001[0], 60));
          break;
        case 29:
        case 31:
          var svHEX60gensym200_1509952010 = [0];
          var pdHEX60gensym200_1509952011 = parseInt_1509951102(input_1509951350, svHEX60gensym200_1509952010, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
          if ((pdHEX60gensym200_1509952011 < HEX2EHEX2E_922747731(2, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym200_1509952011);
          inc_1509949474(offset_1509951958, 0, HEX2A_1509949454(svHEX60gensym200_1509952010[0], 3600));
          if ((pattern_1509951351 == 29)) {
          if (!((input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)] == 58))) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          i_1509951352[i_1509951352_Idx] = addInt(i_1509951352[i_1509951352_Idx], 1);
          }
          
          var svHEX60gensym202_1509952027 = [0];
          var pdHEX60gensym202_1509952028 = parseInt_1509951102(input_1509951350, svHEX60gensym202_1509952027, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
          if ((pdHEX60gensym202_1509952028 < HEX2EHEX2E_922747731(2, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym202_1509952028);
          inc_1509949474(offset_1509951958, 0, HEX2A_1509949454(svHEX60gensym202_1509952027[0], 60));
          if ((pattern_1509951351 == 29)) {
          if (!((input_1509951350[chckIndx(i_1509951352[i_1509951352_Idx], 0, (input_1509951350).length - 1)] == 58))) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          i_1509951352[i_1509951352_Idx] = addInt(i_1509951352[i_1509951352_Idx], 1);
          }
          
          var svHEX60gensym204_1509952044 = [0];
          var pdHEX60gensym204_1509952045 = parseInt_1509951102(input_1509951350, svHEX60gensym204_1509952044, 0, i_1509951352[i_1509951352_Idx], HEX2EHEX2E_922747731(2, 2).b, false);
          if ((pdHEX60gensym204_1509952045 < HEX2EHEX2E_922747731(2, 2).a)) {
          result_1509951355 = false;
          break BeforeRet;
          }
          
          inc_1509949474(i_1509951352, i_1509951352_Idx, pdHEX60gensym204_1509952045);
          inc_1509949474(offset_1509951958, 0, svHEX60gensym204_1509952044[0]);
          break;
        default: 
          if (true) {
          failedAssertImpl_251658296(makeNimstrLit("times.nim(1936, 20) `false` "));
          }
          
          break;
        }
        parsed_1509951353.utcOffset = nimCopy(parsed_1509951353.utcOffset, some_1509951377(HEX2A_1509949454(offset_1509951958[0], sign_1509951953)), NTI1509950359);
        break;
      case 90:
        parsed_1509951353.utcOffset = nimCopy(parsed_1509951353.utcOffset, some_1509951377(0), NTI1509950359);
        i_1509951352[i_1509951352_Idx] = addInt(i_1509951352[i_1509951352_Idx], 1);
        break;
      default: 
        result_1509951355 = false;
        break;
      }
      break;
    case 32:
      if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2B_1509949462(i_1509951352[i_1509951352_Idx], 1)), makeNimstrLit("BC")) == 0)) {
      parsed_1509951353.era = 2;
      inc_1509949474(i_1509951352, i_1509951352_Idx, 2);
      }
      else {
      if ((nsuCmpIgnoreCase(substr_50335122(input_1509951350, i_1509951352[i_1509951352_Idx], HEX2B_1509949462(i_1509951352[i_1509951352_Idx], 1)), makeNimstrLit("AD")) == 0)) {
      parsed_1509951353.era = 1;
      inc_1509949474(i_1509951352, i_1509951352_Idx, 2);
      }
      else {
        result_1509951355 = false;
      }
      }
      break;
    case 33:
      if (true) {
      failedAssertImpl_251658296(makeNimstrLit("times.nim(1952, 20) `false` Can\'t happen"));
      }
      
      break;
    }
  } while (false);

  return result_1509951355;

}

function isSome_1509952120(self_1509952122) {
  var result_1509952123 = false;

    result_1509952123 = self_1509952122.has;

  return result_1509952123;

}

function get_1509952111(self_1509952113, otherwise_1509952114) {
    var Temporary1;

  var result_1509952115 = 0;

    if (isSome_1509952120(self_1509952113)) {
    Temporary1 = self_1509952113.val;
    }
    else {
    Temporary1 = otherwise_1509952114;
    }
    
    result_1509952115 = Temporary1;

  return result_1509952115;

}

function isNone_1509952197(self_1509952199) {
  var result_1509952200 = false;

    result_1509952200 = !(self_1509952199.has);

  return result_1509952200;

}

function dateTime_1509950884(year_1509950885, month_1509950886, monthday_1509950887, hour_1509950888, minute_1509950889, second_1509950890, nanosecond_1509950891, zone_1509950892) {
  var result_1509950893 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    assertValidDate_1509949616(monthday_1509950887, month_1509950886, year_1509950885);
    var dt_1509950894 = {monthdayZero: monthday_1509950887, year: year_1509950885, monthZero: ((month_1509950886) | 0), hour: nimCopy(null, hour_1509950888, NTI1509949465), minute: nimCopy(null, minute_1509950889, NTI1509949466), second: nimCopy(null, second_1509950890, NTI1509949467), nanosecond: nimCopy(null, nanosecond_1509950891, NTI1509949469), m_type: NTI1509949471, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};
    result_1509950893 = nimCopy(result_1509950893, initDateTime_1509950701(zonedTimeFromAdjTime_1509950772(zone_1509950892, toAdjTime_1509950811(dt_1509950894)), zone_1509950892), NTI1509949471);

  return result_1509950893;

}

function utcTzInfo_1509950846(time_1509950847) {
  var result_1509950848 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1509950848 = nimCopy(result_1509950848, {utcOffset: 0, isDst: false, time: nimCopy(null, time_1509950847, NTI1509949470)}, NTI1509949477);

  return result_1509950848;

}

function utc_1509950851() {
  var result_1509950852 = null;

    if ((utcInstance_1509950849[0] == null)) {
    utcInstance_1509950849[0] = newTimezone_1509950728(makeNimstrLit("Etc/UTC"), utcTzInfo_1509950846, utcTzInfo_1509950846);
    }
    
    result_1509950852 = utcInstance_1509950849[0];

  return result_1509950852;

}

function get_1509952214(self_1509952216) {
  var result_1509952217 = 0;

    if (isNone_1509952197(self_1509952216)) {
    raiseException({message: makeNimstrLit("Can\'t obtain a value from a `none`"), parent: null, m_type: NTI1409286164, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1509952217 = self_1509952216["val"];

  return result_1509952217;

}

function toDateTime_1509952093(p_1509952094, zone_1509952095, f_1509952096, input_1509952097) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_1509952098 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var year_1509952125 = get_1509952111(p_1509952094.year, 0);
    var month_1509952142 = chckRange(get_1509952111(p_1509952094.month, 1), 1, 12);
    var monthday_1509952159 = get_1509952111(p_1509952094.monthday, 1);
    switch (p_1509952094.era) {
    case 0:
      Temporary1 = year_1509952125;
      break;
    case 2:
      if ((year_1509952125 < 1)) {
      raiseParseException_1509951079(f_1509952096, input_1509952097, makeNimstrLit("Expected year to be positive (use \'UUUU\' or \'uuuu\' for negative years)."));
      }
      
      Temporary1 = HEX2B_1509949462(negInt(year_1509952125), 1);
      break;
    case 1:
      if ((year_1509952125 < 1)) {
      raiseParseException_1509951079(f_1509952096, input_1509952097, makeNimstrLit("Expected year to be positive (use \'UUUU\' or \'uuuu\' for negative years)."));
      }
      
      Temporary1 = year_1509952125;
      break;
    }
    year_1509952125 = Temporary1;
    switch (p_1509952094.amPm) {
    case 0:
      Temporary2 = p_1509952094.hour;
      break;
    case 1:
      if (!(contains_1509950839(HEX2EHEX2E_922747731(1, 12), p_1509952094.hour))) {
      raiseParseException_1509951079(f_1509952096, input_1509952097, makeNimstrLit("AM/PM time must be in the interval 1..12"));
      }
      
      if ((p_1509952094.hour == 12)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = p_1509952094.hour;
      }
      
      Temporary2 = Temporary3;
      break;
    case 2:
      if (!(contains_1509950839(HEX2EHEX2E_922747731(1, 12), p_1509952094.hour))) {
      raiseParseException_1509951079(f_1509952096, input_1509952097, makeNimstrLit("AM/PM time must be in the interval 1..12"));
      }
      
      if ((p_1509952094.hour == 12)) {
      Temporary4 = p_1509952094.hour;
      }
      else {
      Temporary4 = HEX2B_1509949462(p_1509952094.hour, 12);
      }
      
      Temporary2 = Temporary4;
      break;
    }
    var hour_1509952186 = Temporary2;
    var minute_1509952187 = p_1509952094.minute;
    var second_1509952188 = p_1509952094.second;
    var nanosecond_1509952189 = p_1509952094.nanosecond;
    if ((getDaysInMonth_1509949612(month_1509952142, year_1509952125) < monthday_1509952159)) {
    raiseParseException_1509951079(f_1509952096, input_1509952097, (HEX24_369098755(year_1509952125) || []).concat(makeNimstrLit("-") || [],nsuIntToStr(month_1509952142, 2) || [],makeNimstrLit("-") || [],HEX24_369098755(monthday_1509952159) || [],makeNimstrLit(" is not a valid date") || []));
    }
    
    if (isNone_1509952197(p_1509952094.utcOffset)) {
    result_1509952098 = nimCopy(result_1509952098, dateTime_1509950884(year_1509952125, month_1509952142, chckRange(monthday_1509952159, 1, 31), chckRange(hour_1509952186, 0, 23), chckRange(minute_1509952187, 0, 59), chckRange(second_1509952188, 0, 60), chckRange(nanosecond_1509952189, 0, 999999999), zone_1509952095), NTI1509949471);
    }
    else {
      result_1509952098 = nimCopy(result_1509952098, inZone_1509950798(ntAddTime(toTime_1509950691(dateTime_1509950884(year_1509952125, month_1509952142, chckRange(monthday_1509952159, 1, 31), chckRange(hour_1509952186, 0, 23), chckRange(minute_1509952187, 0, 59), chckRange(second_1509952188, 0, 60), chckRange(nanosecond_1509952189, 0, 999999999), utc_1509950851())), initDuration_1509949832(0, 0, 0, get_1509952214(p_1509952094.utcOffset), 0, 0, 0, 0)), zone_1509952095), NTI1509949471);
    }
    

  return result_1509952098;

}

function parse_1509952336(input_1509952337, f_1509952338, zone_1509952339, loc_1509952340) {
  var result_1509952341 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var inpIdx_1509952342 = [0];
    var patIdx_1509952343 = 0;
    var parsed_1509952344 = [({amPm: 0, era: 0, year: ({val: 0, has: false}), month: ({val: 0, has: false}), monthday: ({val: 0, has: false}), utcOffset: ({val: 0, has: false}), hour: 0, minute: 0, second: 0, nanosecond: 0})];
    Label1: do {
        Label2: while (true) {
        if (!((inpIdx_1509952342[0] <= (input_1509952337).length - 1) && (patIdx_1509952343 <= (f_1509952338.patterns).length - 1))) break Label2;
          var pattern_1509952348 = chckRange(f_1509952338.patterns[chckIndx(patIdx_1509952343, 0, (f_1509952338.patterns).length - 1)], 0, 33);
          switch (pattern_1509952348) {
          case 33:
            patIdx_1509952343 = addInt(patIdx_1509952343, 1);
            var len_1509952353 = f_1509952338.patterns[chckIndx(patIdx_1509952343, 0, (f_1509952338.patterns).length - 1)];
            patIdx_1509952343 = addInt(patIdx_1509952343, 1);
            Label3: do {
              var __1509952362 = 0;
              var res_33557870 = 1;
              Label4: do {
                  Label5: while (true) {
                  if (!(res_33557870 <= ((len_1509952353) | 0))) break Label5;
                    __1509952362 = res_33557870;
                    if (!((input_1509952337[chckIndx(inpIdx_1509952342[0], 0, (input_1509952337).length - 1)] == f_1509952338.patterns[chckIndx(patIdx_1509952343, 0, (f_1509952338.patterns).length - 1)]))) {
                    raiseParseException_1509951079(f_1509952338, input_1509952337, (makeNimstrLit("Unexpected character: ") || []).concat([input_1509952337[chckIndx(inpIdx_1509952342[0], 0, (input_1509952337).length - 1)]]));
                    }
                    
                    inpIdx_1509952342[0] = addInt(inpIdx_1509952342[0], 1);
                    patIdx_1509952343 = addInt(patIdx_1509952343, 1);
                    res_33557870 = addInt(res_33557870, 1);
                  }
              } while (false);
            } while (false);
            break;
          default: 
            if (!(parsePattern_1509951349(input_1509952337, pattern_1509952348, inpIdx_1509952342, 0, parsed_1509952344[0], loc_1509952340))) {
            raiseParseException_1509951079(f_1509952338, input_1509952337, (makeNimstrLit("Failed on pattern \'") || []).concat(reprEnum(pattern_1509952348, NTI1509950348) || [],makeNimstrLit("\'") || []));
            }
            
            patIdx_1509952343 = addInt(patIdx_1509952343, 1);
            break;
          }
        }
    } while (false);
    if ((inpIdx_1509952342[0] <= (input_1509952337).length - 1)) {
    raiseParseException_1509951079(f_1509952338, input_1509952337, makeNimstrLit("Parsing ended but there was still input remaining"));
    }
    
    if ((patIdx_1509952343 <= (f_1509952338.patterns).length - 1)) {
    raiseParseException_1509951079(f_1509952338, input_1509952337, makeNimstrLit("Parsing ended but there was still patterns remaining"));
    }
    
    result_1509952341 = nimCopy(result_1509952341, toDateTime_1509952093(parsed_1509952344[0], zone_1509952339, f_1509952338, input_1509952337), NTI1509949471);

  return result_1509952341;

}

function stringToPattern_1509951229(str_1509951230) {
  var result_1509951231 = 0;

    switch (toJSStr(str_1509951230)) {
    case "d":
      result_1509951231 = 0;
      break;
    case "dd":
      result_1509951231 = 1;
      break;
    case "ddd":
      result_1509951231 = 2;
      break;
    case "dddd":
      result_1509951231 = 3;
      break;
    case "h":
      result_1509951231 = 4;
      break;
    case "hh":
      result_1509951231 = 5;
      break;
    case "H":
      result_1509951231 = 6;
      break;
    case "HH":
      result_1509951231 = 7;
      break;
    case "m":
      result_1509951231 = 8;
      break;
    case "mm":
      result_1509951231 = 9;
      break;
    case "M":
      result_1509951231 = 10;
      break;
    case "MM":
      result_1509951231 = 11;
      break;
    case "MMM":
      result_1509951231 = 12;
      break;
    case "MMMM":
      result_1509951231 = 13;
      break;
    case "s":
      result_1509951231 = 14;
      break;
    case "ss":
      result_1509951231 = 15;
      break;
    case "fff":
      result_1509951231 = 16;
      break;
    case "ffffff":
      result_1509951231 = 17;
      break;
    case "fffffffff":
      result_1509951231 = 18;
      break;
    case "t":
      result_1509951231 = 19;
      break;
    case "tt":
      result_1509951231 = 20;
      break;
    case "yy":
      result_1509951231 = 21;
      break;
    case "yyyy":
      result_1509951231 = 22;
      break;
    case "YYYY":
      result_1509951231 = 23;
      break;
    case "uuuu":
      result_1509951231 = 24;
      break;
    case "UUUU":
      result_1509951231 = 25;
      break;
    case "z":
      result_1509951231 = 26;
      break;
    case "zz":
      result_1509951231 = 27;
      break;
    case "zzz":
      result_1509951231 = 28;
      break;
    case "zzzz":
      result_1509951231 = 29;
      break;
    case "ZZZ":
      result_1509951231 = 30;
      break;
    case "ZZZZ":
      result_1509951231 = 31;
      break;
    case "g":
      result_1509951231 = 32;
      break;
    default: 
      raiseException({message: (makeNimstrLit("\'") || []).concat(str_1509951230 || [],makeNimstrLit("\' is not a valid pattern") || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
      break;
    }

  return result_1509951231;

}

function initTimeFormat_1509951242(format_1509951243) {
                      var Temporary12;

  var result_1509951244 = ({patterns: [], formatStr: []});

    result_1509951244.formatStr = nimCopy(null, format_1509951243, NTI50331655);
    result_1509951244.patterns = nimCopy(null, [], NTI1509950530);
    Label1: do {
      var kind_1509951249 = 0;
      var token_1509951250 = [];
      var i_1509952433 = [0];
      var currToken_1509952434 = [];
      Label2: do {
          Label3: while (true) {
          if (!(i_1509952433[0] < (format_1509951243).length)) break Label3;
            switch (format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)]) {
            case 39:
              if (!(((currToken_1509952434).length == 0))) {
              kind_1509951249 = 0;
              token_1509951250 = currToken_1509952434;
              switch (kind_1509951249) {
              case 1:
                switch (toJSStr(token_1509951250)) {
                default: 
                  result_1509951244.patterns.push(33);;
                  if ((255 < (token_1509951250).length)) {
                  raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_1509951244.patterns.push((token_1509951250).length);;
                  Label4: do {
                    var c_1509951260 = 0;
                    var i_1509952428 = 0;
                    var L_1509952429 = (token_1509951250).length;
                    Label5: do {
                        Label6: while (true) {
                        if (!(i_1509952428 < L_1509952429)) break Label6;
                          c_1509951260 = token_1509951250[chckIndx(i_1509952428, 0, (token_1509951250).length - 1)];
                          result_1509951244.patterns.push(c_1509951260);;
                          i_1509952428 = addInt(i_1509952428, 1);
                          if (!(((token_1509951250).length == L_1509952429))) {
                          failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    } while (false);
                  } while (false);
                  break;
                }
                break;
              case 0:
                result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
                break;
              }
              currToken_1509952434 = nimCopy(null, [], NTI50331655);
              }
              
              if (((addInt(i_1509952433[0], 1) < (format_1509951243).length) && (format_1509951243[chckIndx(addInt(i_1509952433[0], 1), 0, (format_1509951243).length - 1)] == 39))) {
              kind_1509951249 = 1;
              token_1509951250 = makeNimstrLit("\'");
              switch (kind_1509951249) {
              case 1:
                switch (toJSStr(token_1509951250)) {
                default: 
                  result_1509951244.patterns.push(33);;
                  if ((255 < (token_1509951250).length)) {
                  raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_1509951244.patterns.push((token_1509951250).length);;
                  Label7: do {
                    var c_1509952436 = 0;
                    var i_1509952437 = 0;
                    var L_1509952438 = (token_1509951250).length;
                    Label8: do {
                        Label9: while (true) {
                        if (!(i_1509952437 < L_1509952438)) break Label9;
                          c_1509952436 = token_1509951250[chckIndx(i_1509952437, 0, (token_1509951250).length - 1)];
                          result_1509951244.patterns.push(c_1509952436);;
                          i_1509952437 = addInt(i_1509952437, 1);
                          if (!(((token_1509951250).length == L_1509952438))) {
                          failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    } while (false);
                  } while (false);
                  break;
                }
                break;
              case 0:
                result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
                break;
              }
              inc_1509949474(i_1509952433, 0, 2);
              }
              else {
                var token_1509952439 = [];
                i_1509952433[0] = addInt(i_1509952433[0], 1);
                Label10: do {
                    Label11: while (true) {
                      if (!(i_1509952433[0] < (format_1509951243).length)) Temporary12 = false; else {                        Temporary12 = !((format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)] == 39));                      }                    if (!Temporary12) break Label11;
                      addChar(token_1509952439, format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)]);;
                      i_1509952433[0] = addInt(i_1509952433[0], 1);
                    }
                } while (false);
                if (((format_1509951243).length - 1 < i_1509952433[0])) {
                raiseException({message: makeNimstrLit("Unclosed \' in time format string. For a literal \', use \'\'."), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                }
                
                i_1509952433[0] = addInt(i_1509952433[0], 1);
                kind_1509951249 = 1;
                token_1509951250 = token_1509952439;
                switch (kind_1509951249) {
                case 1:
                  switch (toJSStr(token_1509951250)) {
                  default: 
                    result_1509951244.patterns.push(33);;
                    if ((255 < (token_1509951250).length)) {
                    raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                    }
                    
                    result_1509951244.patterns.push((token_1509951250).length);;
                    Label13: do {
                      var c_1509952441 = 0;
                      var i_1509952442 = 0;
                      var L_1509952443 = (token_1509951250).length;
                      Label14: do {
                          Label15: while (true) {
                          if (!(i_1509952442 < L_1509952443)) break Label15;
                            c_1509952441 = token_1509951250[chckIndx(i_1509952442, 0, (token_1509951250).length - 1)];
                            result_1509951244.patterns.push(c_1509952441);;
                            i_1509952442 = addInt(i_1509952442, 1);
                            if (!(((token_1509951250).length == L_1509952443))) {
                            failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    break;
                  }
                  break;
                case 0:
                  result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
                  break;
                }
              }
              
              break;
            case 32:
            case 40:
            case 41:
            case 44:
            case 45:
            case 47:
            case 58:
            case 91:
            case 93:
              if (!(((currToken_1509952434).length == 0))) {
              kind_1509951249 = 0;
              token_1509951250 = currToken_1509952434;
              switch (kind_1509951249) {
              case 1:
                switch (toJSStr(token_1509951250)) {
                default: 
                  result_1509951244.patterns.push(33);;
                  if ((255 < (token_1509951250).length)) {
                  raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_1509951244.patterns.push((token_1509951250).length);;
                  Label16: do {
                    var c_1509952444 = 0;
                    var i_1509952445 = 0;
                    var L_1509952446 = (token_1509951250).length;
                    Label17: do {
                        Label18: while (true) {
                        if (!(i_1509952445 < L_1509952446)) break Label18;
                          c_1509952444 = token_1509951250[chckIndx(i_1509952445, 0, (token_1509951250).length - 1)];
                          result_1509951244.patterns.push(c_1509952444);;
                          i_1509952445 = addInt(i_1509952445, 1);
                          if (!(((token_1509951250).length == L_1509952446))) {
                          failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    } while (false);
                  } while (false);
                  break;
                }
                break;
              case 0:
                result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
                break;
              }
              currToken_1509952434 = nimCopy(null, [], NTI50331655);
              }
              
              kind_1509951249 = 1;
              token_1509951250 = nimCharToStr(format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)]);
              switch (kind_1509951249) {
              case 1:
                switch (toJSStr(token_1509951250)) {
                default: 
                  result_1509951244.patterns.push(33);;
                  if ((255 < (token_1509951250).length)) {
                  raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                  }
                  
                  result_1509951244.patterns.push((token_1509951250).length);;
                  Label19: do {
                    var c_1509952447 = 0;
                    var i_1509952448 = 0;
                    var L_1509952449 = (token_1509951250).length;
                    Label20: do {
                        Label21: while (true) {
                        if (!(i_1509952448 < L_1509952449)) break Label21;
                          c_1509952447 = token_1509951250[chckIndx(i_1509952448, 0, (token_1509951250).length - 1)];
                          result_1509951244.patterns.push(c_1509952447);;
                          i_1509952448 = addInt(i_1509952448, 1);
                          if (!(((token_1509951250).length == L_1509952449))) {
                          failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                          }
                          
                        }
                    } while (false);
                  } while (false);
                  break;
                }
                break;
              case 0:
                result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
                break;
              }
              i_1509952433[0] = addInt(i_1509952433[0], 1);
              break;
            default: 
              if ((((currToken_1509952434).length == 0) || (currToken_1509952434[chckIndx(0, 0, (currToken_1509952434).length - 1)] == format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)]))) {
              addChar(currToken_1509952434, format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)]);;
              i_1509952433[0] = addInt(i_1509952433[0], 1);
              }
              else {
                kind_1509951249 = 0;
                token_1509951250 = currToken_1509952434;
                switch (kind_1509951249) {
                case 1:
                  switch (toJSStr(token_1509951250)) {
                  default: 
                    result_1509951244.patterns.push(33);;
                    if ((255 < (token_1509951250).length)) {
                    raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
                    }
                    
                    result_1509951244.patterns.push((token_1509951250).length);;
                    Label22: do {
                      var c_1509952450 = 0;
                      var i_1509952451 = 0;
                      var L_1509952452 = (token_1509951250).length;
                      Label23: do {
                          Label24: while (true) {
                          if (!(i_1509952451 < L_1509952452)) break Label24;
                            c_1509952450 = token_1509951250[chckIndx(i_1509952451, 0, (token_1509951250).length - 1)];
                            result_1509951244.patterns.push(c_1509952450);;
                            i_1509952451 = addInt(i_1509952451, 1);
                            if (!(((token_1509951250).length == L_1509952452))) {
                            failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    break;
                  }
                  break;
                case 0:
                  result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
                  break;
                }
                currToken_1509952434 = nimCopy(null, nimCharToStr(format_1509951243[chckIndx(i_1509952433[0], 0, (format_1509951243).length - 1)]), NTI50331655);
                i_1509952433[0] = addInt(i_1509952433[0], 1);
              }
              
              break;
            }
          }
      } while (false);
      if (!(((currToken_1509952434).length == 0))) {
      kind_1509951249 = 0;
      token_1509951250 = currToken_1509952434;
      switch (kind_1509951249) {
      case 1:
        switch (toJSStr(token_1509951250)) {
        default: 
          result_1509951244.patterns.push(33);;
          if ((255 < (token_1509951250).length)) {
          raiseException({message: (makeNimstrLit("Format literal is to long:") || []).concat(token_1509951250 || []), parent: null, m_type: NTI1509950351, name: null, trace: [], up: null}, "TimeFormatParseError");
          }
          
          result_1509951244.patterns.push((token_1509951250).length);;
          Label25: do {
            var c_1509952453 = 0;
            var i_1509952454 = 0;
            var L_1509952455 = (token_1509951250).length;
            Label26: do {
                Label27: while (true) {
                if (!(i_1509952454 < L_1509952455)) break Label27;
                  c_1509952453 = token_1509951250[chckIndx(i_1509952454, 0, (token_1509951250).length - 1)];
                  result_1509951244.patterns.push(c_1509952453);;
                  i_1509952454 = addInt(i_1509952454, 1);
                  if (!(((token_1509951250).length == L_1509952455))) {
                  failedAssertImpl_251658296(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
          break;
        }
        break;
      case 0:
        result_1509951244.patterns.push(stringToPattern_1509951229(token_1509951250));;
        break;
      }
      currToken_1509952434 = nimCopy(null, [], NTI50331655);
      }
      
    } while (false);

  return result_1509951244;

}

function startDate_1493172468(s_1493172469) {
  var result_1493172470 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1493172470 = nimCopy(result_1493172470, parse_1509952336(s_1493172469.date_start, initTimeFormat_1509951242(makeNimstrLit("yyyy-MM-dd")), local_1509950865(), DefaultLocale_1509951047), NTI1509949471);

  return result_1493172470;

}

function finishDate_1493172471(s_1493172472) {
  var result_1493172473 = ({m_type: NTI1509949471, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1493172473 = nimCopy(result_1493172473, parse_1509952336(s_1493172472.date_finish, initTimeFormat_1509951242(makeNimstrLit("yyyy-MM-dd")), local_1509950865(), DefaultLocale_1509951047), NTI1509949471);

  return result_1493172473;

}

function clckOpenMap_33555823(p_33555824) {
    p_33555824 = nimCopy(null, p_33555824, NTI1493172232);
    
function HEX3Aanonymous_33555827() {
        currProcess_33554790[0] = nimCopy(currProcess_33554790[0], p_33555824, NTI1493172232);
        var elMap_33555831 = $(("#map-container"))[0];
        elMap_33555831.classList.add(("show-map"));
        isShowNavMap_587202594[0] = true;
        var mC_33555850 = $((".main-container"))[0];
        mC_33555850.classList.add(("map-nav"));
        spinnerOn_33554795[0] = true;
        scrollToSectId_33554798[0] = p_33555824.sector_id;
        sectStreetGrp_33554836[0].removeAll();

      
    }

  var result_33555826 = null;

    result_33555826 = HEX3Aanonymous_33555827;

  return result_33555826;

}

function clckProccSect_33556215(p_33556216) {
    p_33556216 = nimCopy(null, p_33556216, NTI1493172232);
    
function HEX3Aanonymous_33556219() {
        currProcess_33554790[0] = nimCopy(currProcess_33554790[0], p_33556216, NTI1493172232);

      
    }

  var result_33556218 = null;

    result_33556218 = HEX3Aanonymous_33556219;

  return result_33556218;

}

function showAllProc_33556274() {
              var Temporary4;
              var Temporary5;
                var Temporary6;

  var result_33556275 = null;

    console.log(("role:"), (toJSStr(currUser_587202590[0].role)));
    var clsCol_33556294 = "card-text";
    var superadmin_33556295 = "superadmin";
    var uRole_33556296 = toJSStr(currUser_587202590[0].role);
    var tmp_33556297 = tree_1107296945(43, []);
    add_1107296882(tmp_33556297, showErrMsg_33555913());
    var tmp_33556298 = tree_1107296945(18, []);
    tmp_33556298.class = "navbar fixed-top navbar-expand navbar-light bg-light shadow p-1 mb-0 bg-white rounded overflow-auto";
    var tmp_33556299 = tree_1107296945(106, []);
    tmp_33556299.class = "navbar-toggler";
    setAttr_1107296808(tmp_33556299, "type", "button");
    setAttr_1107296808(tmp_33556299, "data-toggle", "collapse");
    setAttr_1107296808(tmp_33556299, "data-target", "#navbarTogglerSectors");
    setAttr_1107296808(tmp_33556299, "aria-controls", "navbarTogglerSectors");
    setAttr_1107296808(tmp_33556299, "aria-expanded", "false");
    setAttr_1107296808(tmp_33556299, "aria-label", "Toggle navigation");
    var tmp_33556300 = tree_1107296945(70, []);
    tmp_33556300.class = "navbar-toggler-icon";
    add_1107296882(tmp_33556299, tmp_33556300);
    add_1107296882(tmp_33556298, tmp_33556299);
    var tmp_33556301 = tree_1107296945(43, []);
    tmp_33556301.class = "collapse navbar-collapse";
    tmp_33556301.id = "navbarTogglerSectors";
    var tmp_33556302 = tree_1107296945(43, []);
    tmp_33556302.class = "custom-control custom-switch py-3";
    var tmp_33556303 = tree_1107296945(105, []);
    setAttr_1107296808(tmp_33556303, "type", "checkbox");
    tmp_33556303.class = "custom-control-input";
    tmp_33556303.id = "ownSectors";
    add_1107296882(tmp_33556302, tmp_33556303);
    var tmp_33556304 = tree_1107296945(104, []);
    tmp_33556304.class = "custom-control-label";
    setAttr_1107296808(tmp_33556304, "for", "ownSectors");
    add_1107296882(tmp_33556304, text_1107296997(makeNimstrLit("\xD0\x9C\xD0\xBE\xD0\xB8")));
    add_1107296882(tmp_33556302, tmp_33556304);
    add_1107296882(tmp_33556301, tmp_33556302);
    var tmp_33556305 = tree_1107296945(105, []);
    setAttr_1107296808(tmp_33556305, "type", "text");
    tmp_33556305.class = "form-control ml-1 mw-50";
    tmp_33556305.id = "searchSector";
    setAttr_1107296808(tmp_33556305, "aria-describedby", "searchHelp");
    setAttr_1107296808(tmp_33556305, "placeholder", "искать...");
    valueHEX3D_1107296586(tmp_33556305, (currUiSt_33554822[0].inpSearch));
    setAttr_1107296808(tmp_33556305, "value", (currUiSt_33554822[0].inpSearch));
    add_1107296882(tmp_33556301, tmp_33556305);
    if ((uRole_33556296 == superadmin_33556295)) {
    var tmp_33556306 = tree_1107296945(36, []);
    tmp_33556306.class = "navbar-nav mr-auto";
    var tmp_33556307 = tree_1107296945(37, []);
    tmp_33556307.class = "nav-item";
    var tmp_33556308 = tree_1107296945(44, []);
    tmp_33556308.class = "nav-link";
    addEventHandler_1090520233(tmp_33556308, 0, editUsers_1728053260(), kxi_1090519104[0]);
    add_1107296882(tmp_33556308, text_1107296997(makeNimstrLit("\xD0\x92\xD0\xBE\xD0\xB7\xD0\xB2\xD0\xB5\xD1\x89\xD0\xB0\xD1\x82\xD0\xB5\xD0\xBB\xD0\xB8")));
    add_1107296882(tmp_33556307, tmp_33556308);
    add_1107296882(tmp_33556306, tmp_33556307);
    add_1107296882(tmp_33556301, tmp_33556306);
    }
    
    var tmp_33556309 = tree_1107296945(36, []);
    tmp_33556309.class = "navbar-nav mr-auto";
    var tmp_33556310 = tree_1107296945(37, []);
    tmp_33556310.class = "nav-item";
    var tmp_33556311 = tree_1107296945(44, []);
    tmp_33556311.class = "nav-link";
    addEventHandler_1090520233(tmp_33556311, 0, logout_33556244, kxi_1090519104[0]);
    add_1107296882(tmp_33556311, text_1107296997(makeNimstrLit("\xD0\x92\xD1\x8B\xD0\xB9\xD1\x82\xD0\xB8")));
    add_1107296882(tmp_33556310, tmp_33556311);
    add_1107296882(tmp_33556309, tmp_33556310);
    add_1107296882(tmp_33556301, tmp_33556309);
    add_1107296882(tmp_33556298, tmp_33556301);
    add_1107296882(tmp_33556298, noInternet_33555909());
    add_1107296882(tmp_33556297, tmp_33556298);
    if (isShowUsers_587202593[0]) {
    add_1107296882(tmp_33556297, showUsers_1728053713());
    }
    else {
      var tmp_33556312 = tree_1107296945(43, []);
      tmp_33556312.class = "card-deck";
      Label1: do {
        var p_33556367 = ({name: [], sector_internal_id: [], firstname: [], lastname: [], date_start: [], date_finish: [], id: 0, user_id: 0, sector_id: 0, totalFamilies: 0});
        var i_33557851 = 0;
        var L_33557852 = (allSectProc_33554791[0]).length;
        Label2: do {
            Label3: while (true) {
            if (!(i_33557851 < L_33557852)) break Label3;
              p_33556367 = allSectProc_33554791[0][chckIndx(i_33557851, 0, (allSectProc_33554791[0]).length - 1)];
              if (!(eqStrings(p_33556367.date_start, []))) {
              Temporary4 = (makeNimstrLit("\xD0\x92\xD0\xB7\xD1\x8F\xD1\x82: ") || []).concat(format_1509952244(startDate_1493172468(p_33556367), initTimeFormat_1509951242(makeNimstrLit("dd\'.\'MM\'.\'yyyy")), DefaultLocale_1509951047) || []);
              }
              else {
              Temporary4 = [];
              }
              
              var stDate_33556368 = nimCopy(null, Temporary4, NTI50331655);
              if (!(eqStrings(p_33556367.date_finish, []))) {
              Temporary5 = (makeNimstrLit("\xD0\xA1\xD0\xB4\xD0\xB0\xD0\xBD: ") || []).concat(format_1509952244(finishDate_1493172471(p_33556367), initTimeFormat_1509951242(makeNimstrLit("dd\'.\'MM\'.\'yyyy")), DefaultLocale_1509951047) || []);
              }
              else {
              Temporary5 = nsuJoinSep([nimCopy(null, p_33556367.firstname, NTI50331655), nimCopy(null, p_33556367.lastname, NTI50331655)], makeNimstrLit(" "));
              }
              
              var finDate_33556369 = nimCopy(null, Temporary5, NTI50331655);
              var sectId_33556370 = toJSStr(HEX24_369098755(p_33556367.sector_id));
              var tmp_33556313 = tree_1107296945(43, []);
              tmp_33556313.id = sectId_33556370;
              tmp_33556313.class = "card mb-3 c-sect shadow p-3 bg-white rounded";
              var tmp_33556314 = tree_1107296945(43, []);
              tmp_33556314.class = "card-header";
              var tmp_33556315 = tree_1107296945(36, []);
              tmp_33556315.class = "nav nav-pills card-header-pills";
              var tmp_33556316 = tree_1107296945(37, []);
              tmp_33556316.class = "nav-item";
              var tmp_33556317 = tree_1107296945(44, []);
              tmp_33556317.class = "nav-link";
              setAttr_1107296808(tmp_33556317, "href", "#mapModal");
              setAttr_1107296808(tmp_33556317, "data-toggle", "modal");
              setAttr_1107296808(tmp_33556317, "data-target", "#mapModal");
              addEventHandler_1090520233(tmp_33556317, 0, clckOpenMap_33555823(p_33556367), kxi_1090519104[0]);
              add_1107296882(tmp_33556317, text_1107296997(makeNimstrLit("\xD0\x9A\xD0\xB0\xD1\x80\xD1\x82\xD0\xB0")));
              add_1107296882(tmp_33556316, tmp_33556317);
              add_1107296882(tmp_33556315, tmp_33556316);
              if (allowTake_33556271(p_33556367)) {
              var tmp_33556318 = tree_1107296945(37, []);
              tmp_33556318.class = "nav-item";
              var tmp_33556319 = tree_1107296945(44, []);
              tmp_33556319.class = "nav-link";
              setAttr_1107296808(tmp_33556319, "href", "#takeModal");
              setAttr_1107296808(tmp_33556319, "data-toggle", "modal");
              setAttr_1107296808(tmp_33556319, "data-target", "#takeModal");
              addEventHandler_1090520233(tmp_33556319, 0, clckProccSect_33556215(p_33556367), kxi_1090519104[0]);
              add_1107296882(tmp_33556319, text_1107296997(makeNimstrLit("\xD0\x92\xD0\xB7\xD1\x8F\xD1\x82\xD1\x8C")));
              add_1107296882(tmp_33556318, tmp_33556319);
              add_1107296882(tmp_33556315, tmp_33556318);
              }
              else {
                if (!(p_33556367.user_id == currUser_587202590[0].id)) Temporary6 = false; else {                  Temporary6 = onlyMySectors_33554799[0];                }              if (Temporary6) {
              var tmp_33556320 = tree_1107296945(37, []);
              tmp_33556320.class = "nav-item";
              var tmp_33556321 = tree_1107296945(44, []);
              tmp_33556321.class = "nav-link";
              setAttr_1107296808(tmp_33556321, "href", "#gBackModal");
              setAttr_1107296808(tmp_33556321, "data-toggle", "modal");
              setAttr_1107296808(tmp_33556321, "data-target", "#gBackModal");
              addEventHandler_1090520233(tmp_33556321, 0, clckProccSect_33556215(p_33556367), kxi_1090519104[0]);
              add_1107296882(tmp_33556321, text_1107296997(makeNimstrLit("\xD0\xA1\xD0\xB4\xD0\xB0\xD1\x82\xD1\x8C")));
              add_1107296882(tmp_33556320, tmp_33556321);
              add_1107296882(tmp_33556315, tmp_33556320);
              }
              }
              add_1107296882(tmp_33556314, tmp_33556315);
              add_1107296882(tmp_33556313, tmp_33556314);
              var tmp_33556322 = tree_1107296945(43, []);
              tmp_33556322.class = "card-body";
              var tmp_33556323 = tree_1107296945(25, []);
              tmp_33556323.class = "card-title";
              add_1107296882(tmp_33556323, text_1107296997(p_33556367.name));
              add_1107296882(tmp_33556322, tmp_33556323);
              var tmp_33556324 = tree_1107296945(43, []);
              tmp_33556324.class = clsCol_33556294;
              add_1107296882(tmp_33556324, text_1107296997(stDate_33556368));
              add_1107296882(tmp_33556322, tmp_33556324);
              var tmp_33556325 = tree_1107296945(43, []);
              tmp_33556325.class = clsCol_33556294;
              add_1107296882(tmp_33556325, text_1107296997(finDate_33556369));
              add_1107296882(tmp_33556322, tmp_33556325);
              var tmp_33556326 = tree_1107296945(43, []);
              tmp_33556326.class = (clsCol_33556294 + " d-flex justify-content-end");
              var tmp_33556327 = tree_1107296945(70, []);
              add_1107296882(tmp_33556327, text_1107297000("Всего семей:"));
              add_1107296882(tmp_33556326, tmp_33556327);
              var tmp_33556328 = tree_1107296945(70, []);
              tmp_33556328.class = "ml-1";
              var tmp_33556329 = tree_1107296945(46, []);
              add_1107296882(tmp_33556329, text_1107297000(toJSStr(HEX24_369098755(p_33556367.totalFamilies))));
              add_1107296882(tmp_33556328, tmp_33556329);
              add_1107296882(tmp_33556326, tmp_33556328);
              add_1107296882(tmp_33556322, tmp_33556326);
              add_1107296882(tmp_33556313, tmp_33556322);
              add_1107296882(tmp_33556312, tmp_33556313);
              i_33557851 = addInt(i_33557851, 1);
              if (!(((allSectProc_33554791[0]).length == L_33557852))) {
              failedAssertImpl_251658296(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      add_1107296882(tmp_33556297, tmp_33556312);
    }
    
    result_33556275 = tmp_33556297;

  return result_33556275;

}

function createDom_33556626() {
  var result_33556627 = null;

    var tmp_33556628 = tree_1107296945(43, []);
    tmp_33556628.class = "main-root";
    add_1107296882(tmp_33556628, toggleSpinner_33556384());
    add_1107296882(tmp_33556628, toggleProgress_33556390());
    add_1107296882(tmp_33556628, showConfirm_33555811(makeNimstrLit("takeModal"), takeSectModalBody_33555784()));
    add_1107296882(tmp_33556628, showConfirm_33555811(makeNimstrLit("gBackModal"), giveBackModalBody_33555792()));
    add_1107296882(tmp_33556628, showConfirm_33555811(makeNimstrLit("isProccessedModal"), proccessedModalBody_33555799()));
    if (eqStrings(currUser_587202590[0].token, [])) {
    add_1107296882(tmp_33556628, loginDialog_33555051());
    }
    else {
    if (isShowNavMap_587202594[0]) {
    var tmp_33556629 = tree_1107296945(18, []);
    tmp_33556629.class = "navbar fixed-top navbar-expand navbar-light bg-light shadow p-1 mb-0 bg-white rounded overflow-auto";
    var tmp_33556630 = tree_1107296945(106, []);
    tmp_33556630.class = "navbar-toggler";
    setAttr_1107296808(tmp_33556630, "type", "button");
    setAttr_1107296808(tmp_33556630, "data-toggle", "collapse");
    setAttr_1107296808(tmp_33556630, "data-target", "#navbarTogglerMap");
    setAttr_1107296808(tmp_33556630, "aria-controls", "navbarTogglerMap");
    setAttr_1107296808(tmp_33556630, "aria-expanded", "false");
    setAttr_1107296808(tmp_33556630, "aria-label", "Toggle navigation");
    var tmp_33556631 = tree_1107296945(70, []);
    tmp_33556631.class = "navbar-toggler-icon";
    add_1107296882(tmp_33556630, tmp_33556631);
    add_1107296882(tmp_33556629, tmp_33556630);
    var tmp_33556632 = tree_1107296945(44, []);
    tmp_33556632.class = "navbar-brand mw-75 overflow-auto";
    add_1107296882(tmp_33556632, text_1107296997(currProcess_33554790[0].name));
    add_1107296882(tmp_33556629, tmp_33556632);
    var tmp_33556633 = tree_1107296945(43, []);
    tmp_33556633.class = "collapse navbar-collapse";
    tmp_33556633.id = "navbarTogglerMap";
    var tmp_33556634 = tree_1107296945(36, []);
    tmp_33556634.class = "navbar-nav mr-auto";
    if (allowTake_33556271(currProcess_33554790[0])) {
    var tmp_33556635 = tree_1107296945(37, []);
    tmp_33556635.class = "nav-item";
    var tmp_33556636 = tree_1107296945(44, []);
    tmp_33556636.class = "nav-link";
    setAttr_1107296808(tmp_33556636, "href", "#takeModal");
    setAttr_1107296808(tmp_33556636, "data-toggle", "modal");
    setAttr_1107296808(tmp_33556636, "data-target", "#takeModal");
    add_1107296882(tmp_33556636, text_1107296997(makeNimstrLit("\xD0\x92\xD0\xB7\xD1\x8F\xD1\x82\xD1\x8C")));
    add_1107296882(tmp_33556635, tmp_33556636);
    add_1107296882(tmp_33556634, tmp_33556635);
    }
    
    if ((onlyMySectors_33554799[0] && !(showStreetsEnabled_33554794[0]))) {
    var tmp_33556637 = tree_1107296945(37, []);
    tmp_33556637.class = "nav-item";
    var tmp_33556638 = tree_1107296945(44, []);
    tmp_33556638.id = "show-streets";
    tmp_33556638.class = "nav-link";
    addEventHandler_1090520233(tmp_33556638, 0, showStreetsEnable_33555920, kxi_1090519104[0]);
    add_1107296882(tmp_33556638, text_1107296997(makeNimstrLit("\xD0\xA3\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B")));
    add_1107296882(tmp_33556637, tmp_33556638);
    add_1107296882(tmp_33556634, tmp_33556637);
    if ((count_33556643(dwnloadedMaps_587202620[0], currProcess_33554790[0].sector_internal_id) == 0)) {
    var tmp_33556639 = tree_1107296945(37, []);
    tmp_33556639.class = "nav-item";
    var tmp_33556640 = tree_1107296945(44, []);
    tmp_33556640.id = "map-download";
    tmp_33556640.class = "nav-link";
    addEventHandler_1090520233(tmp_33556640, 0, mapDownload_33556414, kxi_1090519104[0]);
    add_1107296882(tmp_33556640, text_1107296997(makeNimstrLit("\xD0\xA1\xD0\xBA\xD0\xB0\xD1\x87\xD0\xB0\xD1\x82\xD1\x8C")));
    add_1107296882(tmp_33556639, tmp_33556640);
    add_1107296882(tmp_33556634, tmp_33556639);
    }
    
    }
    
    if (!(showStreetsEnabled_33554794[0])) {
    var tmp_33556641 = tree_1107296945(37, []);
    tmp_33556641.class = "nav-item";
    var tmp_33556642 = tree_1107296945(44, []);
    tmp_33556642.id = "cl-map";
    tmp_33556642.class = "nav-link";
    addEventHandler_1090520233(tmp_33556642, 0, closeMap_33555000, kxi_1090519104[0]);
    add_1107296882(tmp_33556642, text_1107296997(makeNimstrLit("\xD0\x97\xD0\xB0\xD0\xBA\xD1\x80.\xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD1\x83")));
    add_1107296882(tmp_33556641, tmp_33556642);
    add_1107296882(tmp_33556634, tmp_33556641);
    }
    
    add_1107296882(tmp_33556633, tmp_33556634);
    add_1107296882(tmp_33556629, tmp_33556633);
    add_1107296882(tmp_33556629, noInternet_33555909());
    add_1107296882(tmp_33556629, showErrMsg_33555913());
    add_1107296882(tmp_33556628, tmp_33556629);
    if (showStreetsEnabled_33554794[0]) {
    add_1107296882(tmp_33556628, showStreets_33556141());
    }
    
    }
    else {
    add_1107296882(tmp_33556628, showAllProc_33556274());
    }
    }
    result_33556627 = tmp_33556628;

  return result_33556627;

}

function chgUiState_33555563(chgEl_33555564) {
    
function getValues_33555566() {
        
function innerHEX60gensym190_33555589() {
          var result_33555590 = null;

          BeforeRet: do {
            var a_33555591 = null;
            a_33555591 = {};
            a_33555591.inpSearch = (document.getElementById(("searchSector")).value);
            a_33555591.isOwnSect = onlyMySectors_33554799[0];
            result_33555590 = a_33555591;
            break BeforeRet;
          } while (false);

          return result_33555590;

        }

      var result_33555567 = null;

      BeforeRet: do {
        onlyMySectors_33554799[0] = (document.getElementById(("ownSectors")).checked);
        currUiSt_33554822[0] = innerHEX60gensym190_33555589();
        result_33555567 = currUiSt_33554822[0];
        break BeforeRet;
      } while (false);

      return result_33555567;

    }

  var result_33555565 = null;

    result_33555565 = Kefir.fromEvents((chgEl_33555564), ("input"), (getValues_33555566)).toProperty((getValues_33555566));

  return result_33555565;

}

function getAllProccess2_33556656(myS_33556657, sectorName_33556658) {
    var Temporary1;
    var Temporary2;

  var result_33556659 = null;

    if (!(myS_33556657)) {
    Temporary1 = [];
    }
    else {
      var fmtRes_33556660 = [mnewString(0)];
      fmtRes_33556660[0].push.apply(fmtRes_33556660[0], makeNimstrLit("&userId="));;
      formatValue_1728053311(fmtRes_33556660, 0, currUser_587202590[0].id, []);
    Temporary1 = fmtRes_33556660[0];
    }
    
    var rUid_33556666 = nimCopy(null, Temporary1, NTI50331655);
    if (!(eqStrings(sectorName_33556658, []))) {
    var fmtRes_33556667 = [mnewString(0)];
    fmtRes_33556667[0].push.apply(fmtRes_33556667[0], makeNimstrLit("&sectorName="));;
    formatValue_1459617954(fmtRes_33556667, 0, sectorName_33556658, []);
    Temporary2 = fmtRes_33556667[0];
    }
    else {
    Temporary2 = [];
    }
    
    var sName_33556668 = nimCopy(null, Temporary2, NTI50331655);
    var fmtRes_33556669 = [mnewString(0)];
    fmtRes_33556669[0].push.apply(fmtRes_33556669[0], makeNimstrLit("token="));;
    formatValue_1459617954(fmtRes_33556669, 0, currUser_587202590[0].token, []);
    result_33556659 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/sector/process?") || []).concat(fmtRes_33556669[0] || [],rUid_33556666 || [],sName_33556668 || []), [], []);

  return result_33556659;

}

function bindSearchSector_33556857() {
    
function wrpS_33556903(vS_33556904) {
      var result_33556905 = null;

        spinnerOn_33554795[0] = true;
        allSectProc_33554791[0] = nimCopy(null, newSeq_33555076(0), NTI33554829);
        redraw_1090520045(kxi_1090519104[0]);
        result_33556905 = getAllProccess2_33556656((vS_33556904.isOwnSect), cstrToNimstr((vS_33556904.inpSearch)));

      return result_33556905;

    }
    
function HEX3Aanonymous_33556941(value_33556942) {
        allSectProc_33554791[0] = nimCopy(null, parseResp_33555098(value_33556942.Field2).resp, NTI33554843);
        spinnerOn_33554795[0] = false;
        redraw_1090520045(kxi_1090519104[0]);

      
    }
    
function HEX3Aanonymous_33556954(error_33556955) {
        console.log(("error:"), (error_33556955.Field0));

      
    }
    
function HEX3Aanonymous_33556980() {
      
    }

  BeforeRet: do {
    var searchEl_33556869 = document.getElementById(("searchSector"));
    var isOwnSectEl_33556881 = document.getElementById(("ownSectors"));
    if ((searchEl_33556869 == null)) {
    setEvtInpSearchSect_33554801[0] = false;
    break BeforeRet;
    }
    
    if (setEvtInpSearchSect_33554801[0]) {
    break BeforeRet;
    }
    
    setEvtInpSearchSect_33554801[0] = true;
    var stmSearchEl_33556886 = chgUiState_33555563(searchEl_33556869);
    var stmOwnSect_33556887 = chgUiState_33555563(isOwnSectEl_33556881);
    var stmUiChg_33556902 = Kefir.merge((([stmSearchEl_33556886, stmOwnSect_33556887])));
    var stmResult_33556940 = stmUiChg_33556902.flatMapLatest((wrpS_33556903));
    stmResult_33556940.observe((HEX3Aanonymous_33556941), (HEX3Aanonymous_33556954), (HEX3Aanonymous_33556980));
  } while (false);

  
}

function initFromJson_33557254(dst_33557256, dst_33557256_Idx, jsonNode_33557257, jsonPath_33557258, jsonPath_33557258_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1291847697(jsonNode_33557257, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_33557258[jsonPath_33557258_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet58[jsonNode_33557257.kind] != undefined))) {
    var msgHEX60gensym488_33557275 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet59), nimCopy(null, jsonPath_33557258[jsonPath_33557258_Idx], NTI50331655), reprEnum(jsonNode_33557257.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym488_33557275, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_33557257;
    if (ConstSet60[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1291845635)); }
    dst_33557256[dst_33557256_Idx] = Temporary1.num;

  
}

function initFromJson_33557283(dst_33557285, dst_33557285_Idx, jsonNode_33557286, jsonPath_33557287, jsonPath_33557287_Idx) {
    if (HEX3DHEX3D_1291847697(jsonNode_33557286, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_33557287[jsonPath_33557287_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet61[jsonNode_33557286.kind] != undefined))) {
    var msgHEX60gensym492_33557300 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet62), nimCopy(null, jsonPath_33557287[jsonPath_33557287_Idx], NTI50331655), reprEnum(jsonNode_33557286.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym492_33557300, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    dst_33557285[dst_33557285_Idx] = parseEnum_33555926(getStr_1291845770(jsonNode_33557286, []));

  
}

function initFromJson_33557215(dst_33557217, jsonNode_33557218, jsonPath_33557219, jsonPath_33557219_Idx) {
    var originalJsonPathLen_33557221 = (jsonPath_33557219[jsonPath_33557219_Idx]).length;
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".id"));;
    initFromJson_1728053515(dst_33557217, "id", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("id")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".sector_id"));;
    initFromJson_1728053515(dst_33557217, "sector_id", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("sector_id")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".name"));;
    initFromJson_1291851003(dst_33557217, "name", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("name")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".geometry"));;
    initFromJson_1291851003(dst_33557217, "geometry", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("geometry")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".totalFamilies"));;
    initFromJson_33557254(dst_33557217, "totalFamilies", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("totalFamilies")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".sectorName"));;
    initFromJson_1291851003(dst_33557217, "sectorName", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("sectorName")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));
    jsonPath_33557219[jsonPath_33557219_Idx].push.apply(jsonPath_33557219[jsonPath_33557219_Idx], makeNimstrLit(".status"));;
    initFromJson_33557283(dst_33557217, "status", getOrDefault_1291849148(jsonNode_33557218, makeNimstrLit("status")), jsonPath_33557219, jsonPath_33557219_Idx);
    (jsonPath_33557219[jsonPath_33557219_Idx].length = chckRange(originalJsonPathLen_33557221, 0, 2147483647));

  
}

function initFromJson_33557186(dst_33557188, dst_33557188_Idx, jsonNode_33557189, jsonPath_33557190, jsonPath_33557190_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1291847697(jsonNode_33557189, null)) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_33557190[jsonPath_33557190_Idx] || []), parent: null, m_type: NTI50332342, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet56[jsonNode_33557189.kind] != undefined))) {
    var msgHEX60gensym476_33557203 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1291851082(ConstSet57), nimCopy(null, jsonPath_33557190[jsonPath_33557190_Idx], NTI50331655), reprEnum(jsonNode_33557189.kind, NTI1291845635)]);
    raiseException({message: nimCopy(null, msgHEX60gensym476_33557203, NTI50331655), parent: null, m_type: NTI1358954504, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if (dst_33557188[dst_33557188_Idx].length < (Temporary1 = chckRange(len_1291848634(jsonNode_33557189), 0, 2147483647), Temporary1)) { for (var i = dst_33557188[dst_33557188_Idx].length ; i < Temporary1 ; ++i) dst_33557188[dst_33557188_Idx].push(({id: 0, sector_id: 0, name: [], geometry: [], totalFamilies: 0, sectorName: [], status: 0})); }
               else { dst_33557188[dst_33557188_Idx].length = Temporary1; };
    var orignalJsonPathLen_33557209 = (jsonPath_33557190[jsonPath_33557190_Idx]).length;
    Label2: do {
      var i_33557214 = 0;
      var colontmp__33557905 = 0;
      colontmp__33557905 = len_1291848634(jsonNode_33557189);
      var i_33557906 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(i_33557906 < colontmp__33557905)) break Label4;
            i_33557214 = i_33557906;
            addChar(jsonPath_33557190[jsonPath_33557190_Idx], 91);;
            addInt_285212889(jsonPath_33557190, jsonPath_33557190_Idx, i_33557214);
            addChar(jsonPath_33557190[jsonPath_33557190_Idx], 93);;
            initFromJson_33557215(dst_33557188[dst_33557188_Idx][chckIndx(i_33557214, 0, (dst_33557188[dst_33557188_Idx]).length - 1)], HEX5BHEX5D_1291848767(jsonNode_33557189, i_33557214), jsonPath_33557190, jsonPath_33557190_Idx);
            (jsonPath_33557190[jsonPath_33557190_Idx].length = chckRange(orignalJsonPathLen_33557209, 0, 2147483647));
            i_33557906 = addInt(i_33557906, 1);
          }
      } while (false);
    } while (false);

  
}

function initFromJson_33557162(dst_33557164, jsonNode_33557165, jsonPath_33557166, jsonPath_33557166_Idx) {
    var originalJsonPathLen_33557169 = (jsonPath_33557166[jsonPath_33557166_Idx]).length;
    jsonPath_33557166[jsonPath_33557166_Idx].push.apply(jsonPath_33557166[jsonPath_33557166_Idx], makeNimstrLit(".status"));;
    initFromJson_1728053416(dst_33557164, "status", getOrDefault_1291849148(jsonNode_33557165, makeNimstrLit("status")), jsonPath_33557166, jsonPath_33557166_Idx);
    (jsonPath_33557166[jsonPath_33557166_Idx].length = chckRange(originalJsonPathLen_33557169, 0, 2147483647));
    jsonPath_33557166[jsonPath_33557166_Idx].push.apply(jsonPath_33557166[jsonPath_33557166_Idx], makeNimstrLit(".message"));;
    initFromJson_1291851003(dst_33557164, "message", getOrDefault_1291849148(jsonNode_33557165, makeNimstrLit("message")), jsonPath_33557166, jsonPath_33557166_Idx);
    (jsonPath_33557166[jsonPath_33557166_Idx].length = chckRange(originalJsonPathLen_33557169, 0, 2147483647));
    jsonPath_33557166[jsonPath_33557166_Idx].push.apply(jsonPath_33557166[jsonPath_33557166_Idx], makeNimstrLit(".resp"));;
    initFromJson_33557186(dst_33557164, "resp", getOrDefault_1291849148(jsonNode_33557165, makeNimstrLit("resp")), jsonPath_33557166, jsonPath_33557166_Idx);
    (jsonPath_33557166[jsonPath_33557166_Idx].length = chckRange(originalJsonPathLen_33557169, 0, 2147483647));

  
}

function to_33557138(node_33557141) {
  var result_33557143 = [({status: 0, message: [], resp: []})];

    var jsonPath_33557144 = [[]];
    initFromJson_33557162(result_33557143[0], node_33557141, jsonPath_33557144, 0);

  return result_33557143[0];

}

function parseResp_33557133(bdy_33557135) {
  var result_33557137 = ({status: 0, message: [], resp: []});

    result_33557137 = nimCopy(result_33557137, to_33557138(parseJson_1291850977(bdy_33557135)), NTI33556271);
    if (eqStrings(reprEnum(result_33557137.status, NTI1493172229), makeNimstrLit("loggedOut"))) {
    currUser_587202590[0].token = nimCopy(null, [], NTI50331655);
    isShowNavMap_587202594[0] = false;
    var elMap_33557321 = $(("#map-container"))[0];
    elMap_33557321.classList.remove(("show-map"));
    redraw_1090520045(kxi_1090519104[0]);
    }
    

  return result_33557137;

}

function bindEvtsMapScreen_33557006() {
    
function HEX3Aanonymous_33557088() {
      var result_33557089 = false;

        result_33557089 = true;

      return result_33557089;

    }
    
function getStreets_33557027(interrupt_33557028) {
      var result_33557029 = null;

      BeforeRet: do {
        if (interrupt_33557028) {
        result_33557029 = Kefir.never();
        break BeforeRet;
        }
        
        var fmtRes_33557034 = [mnewString(0)];
        fmtRes_33557034[0].push.apply(fmtRes_33557034[0], makeNimstrLit("token="));;
        formatValue_1459617954(fmtRes_33557034, 0, currUser_587202590[0].token, []);
        fmtRes_33557034[0].push.apply(fmtRes_33557034[0], makeNimstrLit("&sectorId="));;
        formatValue_1728053311(fmtRes_33557034, 0, currProcess_33554790[0].sector_id, []);
        result_33557029 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/sector/streets?") || []).concat(fmtRes_33557034[0] || []), [], []);
      } while (false);

      return result_33557029;

    }
    
function HEX3Aanonymous_33557127(value_33557128) {
                        
function innerHEX60gensym521_33557471() {
                          var result_33557472 = null;

                          BeforeRet: do {
                            var a_33557473 = null;
                            a_33557473 = {};
                            a_33557473.data = strt_33557371.id;
                            result_33557472 = a_33557473;
                            break BeforeRet;
                          } while (false);

                          return result_33557472;

                        }
        
function innerHEX60gensym539_33557533() {
          var result_33557534 = null;

          BeforeRet: do {
            var a_33557535 = null;
            a_33557535 = {};
            a_33557535.bounds = sectStreetGrp_33554836[0].getBoundingBox();
            result_33557534 = a_33557535;
            break BeforeRet;
          } while (false);

          return result_33557534;

        }

      BeforeRet: do {
        var respSect_33557346 = parseResp_33557133(value_33557128.Field2);
        var sectStrts_33557347 = nimCopy(null, respSect_33557346.resp, NTI33556266);
        currStreets_33554792[0] = nimCopy(null, sectStrts_33557347, NTI33556266);
        currStreetsTmp_33554793[0] = nimCopy(null, sectStrts_33557347, NTI33556266);
        if (((sectStrts_33557347).length == 0)) {
        break BeforeRet;
        }
        
        Label1: do {
          var strt_33557371 = ({id: 0, sector_id: 0, name: [], geometry: [], totalFamilies: 0, sectorName: [], status: 0});
          var i_33557901 = 0;
          var L_33557902 = (sectStrts_33557347).length;
          Label2: do {
              Label3: while (true) {
              if (!(i_33557901 < L_33557902)) break Label3;
                strt_33557371 = sectStrts_33557347[chckIndx(i_33557901, 0, (sectStrts_33557347).length - 1)];
                var stStat_33557385 = parseEnum_33555926(reprEnum(strt_33557371.status, NTI1493172230));
                var coords_33557386 = nsuSplitString(strt_33557371.geometry, makeNimstrLit(";"), -1);
                Label4: do {
                  var latlng_33557407 = [];
                  var i_33557897 = 0;
                  var L_33557898 = (coords_33557386).length;
                  Label5: do {
                      Label6: while (true) {
                      if (!(i_33557897 < L_33557898)) break Label6;
                        latlng_33557407 = coords_33557386[chckIndx(i_33557897, 0, (coords_33557386).length - 1)];
                        var lnStr_33557419 = (new H.geo.LineString());
                        var c_33557420 = nsuSplitString(latlng_33557407, makeNimstrLit(","), -1);
                        Label7: do {
                          var i_33557429 = 0;
                          var colontmp__33557893 = 0;
                          colontmp__33557893 = (c_33557420).length - 1;
                          var res_33557894 = 0;
                          Label8: do {
                              Label9: while (true) {
                              if (!(res_33557894 <= colontmp__33557893)) break Label9;
                                i_33557429 = res_33557894;
                                lnStr_33557419.pushLatLngAlt((((toJSStr(c_33557420[chckIndx(i_33557429, 0, (c_33557420).length - 1)])))), (((toJSStr(c_33557420[chckIndx(addInt(i_33557429, 1), 0, (c_33557420).length - 1)])))), (1.0));
                                res_33557894 = addInt(res_33557894, 2);
                              }
                          } while (false);
                        } while (false);
                        var pOpt_33557489 = innerHEX60gensym521_33557471();
                        var pl_33557515 = (new H.map.Polyline((lnStr_33557419), (pOpt_33557489)));
                        setPolyStyleByStat_587203190(pl_33557515, strt_33557371.status);
                        sectStreetGrp_33554836[0].addObject((pl_33557515));
                        i_33557897 = addInt(i_33557897, 1);
                        if (!(((coords_33557386).length == L_33557898))) {
                        failedAssertImpl_251658296(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while (false);
                } while (false);
                i_33557901 = addInt(i_33557901, 1);
                if (!(((sectStrts_33557347).length == L_33557902))) {
                failedAssertImpl_251658296(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        map.getViewModel().setLookAtData((innerHEX60gensym539_33557533()));
        spinnerOn_33554795[0] = false;
        redraw_1090520045(kxi_1090519104[0]);
      } while (false);

      
    }
    
function HEX3Aanonymous_33557581(error_33557582) {
        console.log(("error:"), (error_33557582.Field0));
        redraw_1090520045(kxi_1090519104[0]);

      
    }
    
function HEX3Aanonymous_33557607() {
      
    }

  BeforeRet: do {
    var clMapEl_33557018 = document.getElementById(("cl-map"));
    if ((clMapEl_33557018 == null)) {
    stmClMap_33557005[0] = null;
    break BeforeRet;
    }
    
    if (!((stmClMap_33557005[0] == null))) {
    break BeforeRet;
    }
    
    var stmOpenMapScr_33557051 = Kefir.constant((false));
    stmClMap_33557005[0] = Kefir.fromEvents((clMapEl_33557018), ("click"));
    stmClMap_33557005[0] = stmClMap_33557005[0].map((HEX3Aanonymous_33557088));
    var stmGetStreet_33557126 = Kefir.merge((([stmOpenMapScr_33557051, stmClMap_33557005[0]]))).flatMapLatest((getStreets_33557027));
    stmGetStreet_33557126.observe((HEX3Aanonymous_33557127), (HEX3Aanonymous_33557581), (HEX3Aanonymous_33557607));
  } while (false);

  
}

function HEX3Aanonymous_33557623() {
    
function innerHEX60gensym585_33557675() {
      var result_33557676 = null;

      BeforeRet: do {
        var a_33557677 = null;
        a_33557677 = {};
        a_33557677.behavior = "auto";
        a_33557677.block = "start";
        a_33557677.inline = "nearest";
        result_33557676 = a_33557677;
        break BeforeRet;
      } while (false);

      return result_33557676;

    }

  BeforeRet: do {
    currDate_33554452[0] = nimCopy(null, format_1509952244(now_1509950882(), normalDateFmt_33554451, DefaultLocale_1509951047), NTI50331655);
    if (!((document.getElementById(("ownSectors")) == null))) {
    document.getElementById(("ownSectors")).checked = onlyMySectors_33554799[0];
    }
    
    bindSearchSector_33556857();
    bindEvtsMapScreen_33557006();
    if (!((scrollToSectId_33554798[0] == 0))) {
    var sIdEl_33557664 = $((toJSStr(nsuJoinSep([makeNimstrLit("#"), HEX24_369098755(scrollToSectId_33554798[0]), makeNimstrLit(".card")], []))));
    if (((sIdEl_33557664.length) == 0)) {
    break BeforeRet;
    }
    
    scrollToSectId_33554798[0] = 0;
    sIdEl_33557664[0].scrollIntoView((innerHEX60gensym585_33557675()));
    }
    
  } while (false);

  
}
setRenderer_1090520176(createDom_33556626, "main-control-container", HEX3Aanonymous_33557623);

function bindMap_33554585(engineType_33554586) {
    
function innerHEX60gensym602_33557916() {
      var result_33557917 = null;

      BeforeRet: do {
        var a_33557918 = null;
        a_33557918 = {};
        a_33557918.apikey = toJSStr(currUser_587202590[0].apiKey);
        a_33557918.useHTTPS = true;
        result_33557917 = a_33557918;
        break BeforeRet;
      } while (false);

      return result_33557917;

    }
    var Temporary1;
    
function innerHEX60gensym620_33557983() {
      var result_33557984 = null;

      BeforeRet: do {
        var a_33557985 = null;
        a_33557985 = {};
        a_33557985.tileSize = 512;
        a_33557985.pois = true;
        a_33557985.ppi = 72;
        result_33557984 = a_33557985;
        break BeforeRet;
      } while (false);

      return result_33557984;

    }
    
function innerHEX60gensym635_33558034() {
      var result_33558035 = null;

      BeforeRet: do {
        var a_33558036 = null;
        a_33558036 = {};
        a_33558036.engineType = engineType_33554586;
        a_33558036.pixelRatio = pixelRatio_33557979;
        a_33558036.noWrap = true;
        result_33558035 = a_33558036;
        break BeforeRet;
      } while (false);

      return result_33558035;

    }
    var Temporary2;
    
function innerHEX60gensym701_33558315() {
      var result_33558316 = null;

      BeforeRet: do {
        var a_33558317 = null;
        a_33558317 = {};
        a_33558317.label = "<h6>Растр</h6>";
        result_33558316 = a_33558317;
        break BeforeRet;
      } while (false);

      return result_33558316;

    }
    var Temporary3;
    
function HEX3Aanonymous_33558478(evt_33558479) {
        if ((evt_33558479.target.getState() == uiButton_33558436.State.UP)) {
        curEngineType_587202619[0] = engineTypes_587202618[0].WEBGL;
        }
        else {
          curEngineType_587202619[0] = engineTypes_587202618[0].P2D;
        }
        
        localStorage.setItem(("engineType"), (curEngineType_587202619[0]));
        bindMap_33554585(curEngineType_587202619[0]);

      
    }
    
function HEX3Aanonymous_33558545() {
        var vp_33558550 = map.getViewPort();
        vp_33558550.resize();

      
    }

    var platform_33557963 = (new H.service.Platform((innerHEX60gensym602_33557916())));
    if ((window.devicePixelRatio === undefined)) {
    Temporary1 = 1.0;
    }
    else {
    Temporary1 = (window.devicePixelRatio);
    }
    
    var pixelRatio_33557979 = Temporary1;
    var hidpi_33557980 = true;
    var layerOpts_33558031 = innerHEX60gensym620_33557983();
    var mapOpts_33558082 = innerHEX60gensym635_33558034();
    var defLayers_33558094 = platform_33557963.createDefaultLayers((layerOpts_33558031));
    var mapContainer_33558098 = $(("#map-container"))[0];
    if ((engineType_33554586 == engineTypes_587202618[0].P2D)) {
    Temporary2 = defLayers_33558094.raster.normal;
    }
    else {
    Temporary2 = defLayers_33558094.vector.normal;
    }
    
    var mapType_33558123 = Temporary2;
    mapContainer_33558098.innerHTML = [];
    map = (new H.Map((mapContainer_33558098), (mapType_33558123.map), (mapOpts_33558082)));
    map.getBaseLayer().setMax((20));
    var behavior_33558218 = (new H.mapevents.Behavior(((new H.mapevents.MapEvents((map))))));
    var hUi_33558223 = H.ui;
    glbUi = hUi_33558223.UI.createDefault((map), (defLayers_33558094));
    glbUi.removeControl(("zoom"));
    var cntrRMap_33558264 = (new hUi_33558223.Control());
    var cntrNoMy_33558272 = (new hUi_33558223.Control());
    var layoutAligm_33558277 = hUi_33558223.LayoutAlignment;
    var uiBase_33558282 = hUi_33558223.base;
    cntrRMap_33558264.setAlignment((layoutAligm_33558277.RIGHT_BOTTOM));
    cntrNoMy_33558272.setAlignment((layoutAligm_33558277.TOP_CENTER));
    var cntrRMapBtn_33558358 = (new uiBase_33558282.PushButton((innerHEX60gensym701_33558315()))).addClass(("d-flex align-items-center justify-content-center"));
    var noMyMsg_33558380 = (new uiBase_33558282.Element(("h5"), ("d-flex align-items-center justify-content-center pt-4 text-danger")));
    cntrNoMy_33558272.addChild((noMyMsg_33558380));
    glbUi.addControl(("rastr"), (cntrRMap_33558264));
    glbUi.addControl(("noMyMsg"), (cntrNoMy_33558272));
    noMyMsgEl_33554837[0] = noMyMsg_33558380.getElement();
    showNoMyMsg_33555003();
    var uiButton_33558436 = uiBase_33558282.Button;
    if ((curEngineType_587202619[0] == engineTypes_587202618[0].WEBGL)) {
    Temporary3 = uiButton_33558436.State.UP;
    }
    else {
    Temporary3 = uiButton_33558436.State.DOWN;
    }
    
    cntrRMapBtn_33558358.setState((Temporary3));
    cntrRMapBtn_33558358.addEventListener(("statechange"), (HEX3Aanonymous_33558478));
    var mpRef_33558538 = map;
    window.addEventListener(("resize"), (HEX3Aanonymous_33558545));
    map.addObject((currentPosM_33554588));
    map.addObject((sectStreetGrp_33554836[0]));

  
}

function getElemCoords_587202639(elem_587202640) {
  var result_587202643 = {Field0: 0.0, Field1: 0.0};

    var box_587202652 = elem_587202640.getBoundingClientRect();
    var colontmp__33558675 = ((box_587202652.top + pageYOffset));
    var colontmp__33558676 = ((box_587202652.left + pageXOffset));
    result_587202643 = nimCopy(result_587202643, {Field0: colontmp__33558675, Field1: colontmp__33558676}, NTI587202589);

  return result_587202643;

}

function setEventsModalMap_33556514() {
    
function HEX3Aanonymous_33556518(e_33556519) {
        var mapBody_33556534 = $((".map-body")).get((0));
        var elC_33556535 = getElemCoords_587202639(mapBody_33556534);
        var elMap_33556539 = $(("#map-container"))[0];
        elMap_33556539.style.top = "0px";
        elMap_33556539.style.left = "0px";
        mapBody_33556534.style.height = toJSStr((HEX24_50334584(((screen.height) - 200.0)) || []).concat(makeNimstrLit("px") || []));
        mapBody_33556534.appendChild((elMap_33556539));

      
    }

    $(("#mapModal")).on(("shown.bs.modal"), (HEX3Aanonymous_33556518));

  
}

function getAllProccess_33554996(myS_33554997, sectorName_33554998) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_33558612(value_33558613) {
        allSectProc_33554791[0] = nimCopy(null, parseResp_33555098(value_33558613.Field2).resp, NTI33554843);

      
    }
    
function HEX3Aanonymous_33558625(error_33558626) {
        console.log(("error:"), (error_33558626.Field0));

      
    }
    
function HEX3Aanonymous_33558651() {
        spinnerOn_33554795[0] = false;
        redraw_1090520045(kxi_1090519104[0]);

      
    }

    spinnerOn_33554795[0] = true;
    allSectProc_33554791[0] = nimCopy(null, newSeq_33555076(0), NTI33554829);
    redraw_1090520045(kxi_1090519104[0]);
    if (!(myS_33554997)) {
    Temporary1 = [];
    }
    else {
      var fmtRes_33558601 = [mnewString(0)];
      fmtRes_33558601[0].push.apply(fmtRes_33558601[0], makeNimstrLit("&userId="));;
      formatValue_1728053311(fmtRes_33558601, 0, currUser_587202590[0].id, []);
    Temporary1 = fmtRes_33558601[0];
    }
    
    var rUid_33558607 = nimCopy(null, Temporary1, NTI50331655);
    if (!(eqStrings(sectorName_33554998, []))) {
    var fmtRes_33558608 = [mnewString(0)];
    fmtRes_33558608[0].push.apply(fmtRes_33558608[0], makeNimstrLit("&sectorName="));;
    formatValue_1459617954(fmtRes_33558608, 0, sectorName_33554998, []);
    Temporary2 = fmtRes_33558608[0];
    }
    else {
    Temporary2 = [];
    }
    
    var sName_33558609 = nimCopy(null, Temporary2, NTI50331655);
    var fmtRes_33558610 = [mnewString(0)];
    fmtRes_33558610[0].push.apply(fmtRes_33558610[0], makeNimstrLit("token="));;
    formatValue_1459617954(fmtRes_33558610, 0, currUser_587202590[0].token, []);
    var stmLogin_33558611 = sendRequest_587202696(makeNimstrLit("GET"), (makeNimstrLit("/sector/process?") || []).concat(fmtRes_33558610[0] || [],rUid_33558607 || [],sName_33558609 || []), [], []);
    stmLogin_33558611.observe((HEX3Aanonymous_33558612), (HEX3Aanonymous_33558625), (HEX3Aanonymous_33558651));

  
}
if (!(eqStrings(currUser_587202590[0].token, []))) {
allSectProc_33554791[0] = nimCopy(null, newSeq_33555076(0), NTI33554829);
spinnerOn_33554795[0] = true;
redraw_1090520045(kxi_1090519104[0]);
bindMap_33554585(curEngineType_587202619[0]);
setEventsModalMap_33556514();
getAllProccess_33554996(false, []);
}

